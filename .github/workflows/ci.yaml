name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  GO_VERSION: '1.23'
  NODE_VERSION: '24.9.0'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Check formatting
        run: |
          UNFORMATTED=$(go fmt ./...)
          if [ -n "$UNFORMATTED" ]; then
            echo "The following files are not formatted:"
            echo "$UNFORMATTED"
            exit 1
          fi

      - name: Run vet
        run: go vet ./...

      - name: Setup Buf
        uses: bufbuild/buf-setup-action@v1

      - name: Lint Proto files
        run: buf lint

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Run unit tests
        run: go test -v -race -coverprofile=coverage.out -covermode=atomic ./...

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.out
          flags: unittests
          name: codecov-umbrella

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: fleetd
          POSTGRES_PASSWORD: fleetd
          POSTGRES_DB: fleetd_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Install just
        uses: extractions/setup-just@v1
        with:
          just-version: "1.36"

      - name: Run database migrations
        env:
          DATABASE_URL: postgresql://fleetd:fleetd@localhost:5432/fleetd_test?sslmode=disable
        run: |
          if [ -d "internal/database/migrations" ]; then
            for migration in internal/database/migrations/*.up.sql; do
              [ -f "$migration" ] && psql $DATABASE_URL -f "$migration" || true
            done
          fi

      - name: Run integration tests
        env:
          DATABASE_URL: postgresql://fleetd:fleetd@localhost:5432/fleetd_test?sslmode=disable
          INTEGRATION: "1"
          JWT_SECRET: test-secret-key
          CI: "true"
        run: just test-integration || go test -v ./test/integration/... ./internal/...

  web:
    name: Web Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        working-directory: ./studio
        run: bun install

      - name: Type check
        working-directory: ./studio
        run: bun run typecheck || echo "Skipping typecheck (not configured)"
        continue-on-error: true

      - name: Lint
        working-directory: ./studio
        run: bun run lint || echo "Skipping lint (not configured)"
        continue-on-error: true

      - name: Build
        working-directory: ./studio
        run: bun run build
