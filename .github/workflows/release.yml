name: Release

on:
  release:
    types: [published]

jobs:
  releases-matrix:
    name: Release Binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goarch: arm64
            goos: windows

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'
        cache: true

    - name: Install just
      uses: extractions/setup-just@v1
      with:
        just-version: '1.36'

    - name: Build binaries
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        just build server & \
        just build fleetd & \
        just build columbus & \
        wait

        mv bin/server bin/server-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }}
        mv bin/fleetd bin/fleetd-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }}
        mv bin/columbus bin/columbus-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }}

    - name: Upload release artifacts
      uses: softprops/action-gh-release@v1
      with:
        files: |
          bin/server-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }}
          bin/fleetd-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }}
          bin/columbus-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}