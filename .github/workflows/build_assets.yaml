name: Build binaries
permissions:
  contents: write
on:
  push:
    tags:
      - "v*.*.*"

jobs:
  releases-matrix:
    name: Release Binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goarch: arm64
            goos: windows

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"
          cache: true

      - name: Install just
        uses: extractions/setup-just@v1
        with:
          just-version: "1.36"

      - name: Set up cross-compilation toolchain
        run: |
          sudo apt-get update
          if [ "${{ matrix.goos }}" = "windows" ]; then
            sudo apt-get install -y gcc-mingw-w64
          elif [ "${{ matrix.goarch }}" = "arm64" ] && [ "${{ matrix.goos }}" = "linux" ]; then
            sudo apt-get install -y gcc-aarch64-linux-gnu
          fi

      - name: Build binaries
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 1
          # Use appropriate compiler based on target
          CC: ${{ matrix.goos == 'windows' && 'x86_64-w64-mingw32-gcc' || (matrix.goarch == 'arm64' && matrix.goos == 'linux' && 'aarch64-linux-gnu-gcc' || 'gcc') }}
        run: |
          just build server
          just build fleetd
          just build columbus

          mkdir -p dist
          mv bin/server dist/server-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }}
          mv bin/fleetd dist/fleetd-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }}
          mv bin/columbus dist/columbus-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }}

      - name: Upload release artifacts
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/server-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }}
            dist/fleetd-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }}
            dist/columbus-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
