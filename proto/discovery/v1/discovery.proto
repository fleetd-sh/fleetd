syntax = "proto3";

package discovery.v1;

option go_package = "fleetd.sh/gen/discovery/v1;discoveryv1";

service DiscoveryService {
  // GetDeviceInfo returns basic device information before registration
  rpc GetDeviceInfo(GetDeviceInfoRequest) returns (GetDeviceInfoResponse);
  
  // ConfigureDevice registers the device with a fleet server
  rpc ConfigureDevice(ConfigureDeviceRequest) returns (ConfigureDeviceResponse);
}

message GetDeviceInfoRequest {}

message GetDeviceInfoResponse {
  string device_id = 1;    // Local device ID (e.g. MAC address)
  bool configured = 2;     // Whether device is registered with fleetd stack server
}

message ConfigureDeviceRequest {
  string device_name = 1;  // Name for the device
  string api_endpoint = 2;    // fleetd stack server URL
}

message ConfigureDeviceResponse {
  bool success = 1;
  string message = 2;
  string device_id = 3;     // ID assigned by fleet server if successful
}
