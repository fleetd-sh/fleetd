syntax = "proto3";

package fleetd.v1;

option go_package = "fleetd.sh/gen/fleetd/v1;fleetpb";

import "google/protobuf/timestamp.proto";

service DeviceService {
  // Register a new device with the fleet
  rpc Register(RegisterRequest) returns (RegisterResponse);
  
  // Send periodic heartbeat and receive pending actions
  rpc Heartbeat(HeartbeatRequest) returns (HeartbeatResponse);
  
  // Update device status and metrics
  rpc ReportStatus(ReportStatusRequest) returns (ReportStatusResponse);

  // Get a device by ID
  rpc GetDevice(GetDeviceRequest) returns (GetDeviceResponse);

  // List devices
  rpc ListDevices(ListDevicesRequest) returns (ListDevicesResponse);

  // Delete a device
  rpc DeleteDevice(DeleteDeviceRequest) returns (DeleteDeviceResponse); 
}

message Device {
  string id = 1;
  string name = 2;
  string type = 3;
  string version = 4;
  map<string, string> metadata = 5;
  google.protobuf.Timestamp last_seen = 6;
  SystemInfo system_info = 7;
}

message SystemInfo {
  string hostname = 1;
  string os = 2;
  string os_version = 3;
  string arch = 4;
  string cpu_model = 5;
  int32 cpu_cores = 6;
  uint64 memory_total = 7;  // in bytes
  uint64 storage_total = 8; // in bytes
  string kernel_version = 9;
  string platform = 10;
  map<string, string> extra = 11; // for additional system info

  // Network information
  repeated NetworkInterface network_interfaces = 12;

  // System identification
  string timezone = 13;
  string agent_version = 14;
  string serial_number = 15;
  string product_name = 16;
  string manufacturer = 17;

  // Runtime metrics
  LoadAverage load_average = 18;
  int32 process_count = 19;

  // BIOS/Firmware
  BiosInfo bios_info = 20;
}

message NetworkInterface {
  string name = 1;
  string mac_address = 2;
  repeated string ip_addresses = 3;  // IPv4 and IPv6
  bool is_up = 4;
  bool is_loopback = 5;
  uint64 mtu = 6;
}

message LoadAverage {
  double load1 = 1;   // 1 minute average
  double load5 = 2;   // 5 minute average
  double load15 = 3;  // 15 minute average
}

message BiosInfo {
  string vendor = 1;
  string version = 2;
  string release_date = 3;
}

message RegisterRequest {
  string name = 1;
  string type = 2;
  string version = 3;
  map<string, string> capabilities = 4;
  SystemInfo system_info = 5;
}

message RegisterResponse {
  string device_id = 1;
  string api_key = 2;
}

message HeartbeatRequest {
  string device_id = 1;
  map<string, string> metrics = 2;
}

message HeartbeatResponse {
  bool has_update = 1;
  string update_id = 2;
}

message ReportStatusRequest {
  string device_id = 1;
  string status = 2;
  map<string, string> metrics = 3;
}

message ReportStatusResponse {
  bool success = 1;
}

message GetDeviceRequest {
  string device_id = 1;
}

message GetDeviceResponse {
  Device device = 1;
}

message ListDevicesRequest {
  string type = 1;
  string version = 2;
  string status = 3;
  int32 page_size = 4;
  string page_token = 5;
}

message ListDevicesResponse {
  repeated Device devices = 1;
  string next_page_token = 2;
}

message DeleteDeviceRequest {
  string device_id = 1;
}

message DeleteDeviceResponse {
  bool success = 1;
}

