syntax = "proto3";

package fleetd.v1;

option go_package = "fleetd.sh/gen/fleetd/v1;fleetpb";

import "google/protobuf/timestamp.proto";

// ArtifactService manages software artifacts for deployment
service ArtifactService {
  // Upload a new artifact version
  rpc UploadArtifact(stream UploadArtifactRequest) returns (UploadArtifactResponse);

  // Get artifact metadata
  rpc GetArtifact(GetArtifactRequest) returns (GetArtifactResponse);

  // List artifact versions
  rpc ListArtifacts(ListArtifactsRequest) returns (ListArtifactsResponse);

  // Delete an artifact version
  rpc DeleteArtifact(DeleteArtifactRequest) returns (DeleteArtifactResponse);

  // Generate signed download URL for device
  rpc GetDownloadURL(GetDownloadURLRequest) returns (GetDownloadURLResponse);
}

// ApplicationService manages application definitions
service ApplicationService {
  // Create or update application definition
  rpc CreateApplication(CreateApplicationRequest) returns (CreateApplicationResponse);

  // Get application details
  rpc GetApplication(GetApplicationRequest) returns (GetApplicationResponse);

  // List applications
  rpc ListApplications(ListApplicationsRequest) returns (ListApplicationsResponse);

  // Delete application
  rpc DeleteApplication(DeleteApplicationRequest) returns (DeleteApplicationResponse);
}

// DeploymentService manages software deployments to devices
service DeploymentService {
  // Create a new deployment
  rpc CreateDeployment(CreateDeploymentRequest) returns (CreateDeploymentResponse);

  // Get deployment status
  rpc GetDeployment(GetDeploymentRequest) returns (GetDeploymentResponse);

  // List deployments
  rpc ListDeployments(ListDeploymentsRequest) returns (ListDeploymentsResponse);

  // Cancel or rollback deployment
  rpc CancelDeployment(CancelDeploymentRequest) returns (CancelDeploymentResponse);

  // Get deployment metrics
  rpc GetDeploymentMetrics(GetDeploymentMetricsRequest) returns (GetDeploymentMetricsResponse);
}

// Artifact types
enum ArtifactType {
  ARTIFACT_TYPE_UNSPECIFIED = 0;
  ARTIFACT_TYPE_BINARY = 1;      // Standalone executable
  ARTIFACT_TYPE_OCI_IMAGE = 2;   // Docker/Podman container
  ARTIFACT_TYPE_ARCHIVE = 3;     // tar.gz, zip
  ARTIFACT_TYPE_PACKAGE = 4;     // deb, rpm, apk
  ARTIFACT_TYPE_NIXPACK = 5;     // Nix package
  ARTIFACT_TYPE_SCRIPT = 6;      // Shell/Python script
}

// Artifact represents a deployable software package
message Artifact {
  string id = 1;
  string name = 2;
  string version = 3;
  ArtifactType type = 4;

  // Build information
  BuildInfo build_info = 5;

  // Runtime requirements
  Requirements requirements = 6;

  // Security
  repeated Signature signatures = 7;
  map<string, string> checksums = 8;

  // Storage
  int64 size = 9;
  string storage_url = 10;

  // Platform compatibility
  repeated Platform platforms = 11;

  // Metadata
  google.protobuf.Timestamp created_at = 12;
  map<string, string> labels = 13;
  string description = 14;
}

message BuildInfo {
  string commit_sha = 1;
  string branch = 2;
  string build_number = 3;
  string builder = 4;
  google.protobuf.Timestamp build_time = 5;
  map<string, string> build_args = 6;
}

message Requirements {
  int64 min_memory = 1;     // bytes
  int64 min_storage = 2;    // bytes
  int32 min_cpu_mhz = 3;
  repeated string capabilities = 4;  // "docker", "systemd", "gpu"
  string os_family = 5;              // "linux", "rtos"
  string min_kernel = 6;             // "5.10"
  repeated string architectures = 7; // ["arm64", "amd64"]
}

message Signature {
  string algorithm = 1;  // "ed25519", "rsa-sha256"
  string key_id = 2;
  bytes signature = 3;
  string signer = 4;
}

message Platform {
  string os = 1;
  string arch = 2;
  string variant = 3;  // "v7", "v8" for ARM
}

// Application represents a complete application definition
message Application {
  string id = 1;
  string name = 2;
  string version = 3;

  // Artifacts that compose this application
  repeated ArtifactRef artifacts = 4;

  // Execution settings
  repeated string args = 5;
  map<string, string> environment = 6;
  string working_dir = 7;
  RestartPolicy restart_policy = 8;

  // Configuration
  Configuration configuration = 9;

  // Runtime settings
  RuntimeConfig runtime = 10;

  // Health check
  HealthCheck health_check = 11;

  // Resource limits
  Resources resources = 12;

  // Placement constraints
  PlacementConstraints placement = 13;

  // Metadata
  google.protobuf.Timestamp created_at = 14;
  google.protobuf.Timestamp updated_at = 15;
  map<string, string> labels = 16;
}

message ArtifactRef {
  string name = 1;
  string version = 2;
  ArtifactType type = 3;
  bool required = 4;
}

message Configuration {
  map<string, string> environment = 1;
  repeated ConfigFile files = 2;
  repeated string args = 3;
  string working_dir = 4;
}

message ConfigFile {
  string path = 1;
  string content = 2;
  string mode = 3;  // "0644"
}

message RuntimeConfig {
  RuntimeType type = 1;
  RestartPolicy restart_policy = 2;
  int32 startup_timeout_seconds = 3;
  int32 stop_timeout_seconds = 4;
  string user = 5;
  string group = 6;
}

enum RuntimeType {
  RUNTIME_TYPE_UNSPECIFIED = 0;
  RUNTIME_TYPE_SYSTEMD = 1;
  RUNTIME_TYPE_DOCKER = 2;
  RUNTIME_TYPE_SUPERVISOR = 3;
  RUNTIME_TYPE_RAW = 4;
}

enum RestartPolicy {
  RESTART_POLICY_UNSPECIFIED = 0;
  RESTART_POLICY_ALWAYS = 1;
  RESTART_POLICY_ON_FAILURE = 2;
  RESTART_POLICY_NEVER = 3;
}

message HealthCheck {
  oneof check {
    HTTPHealthCheck http = 1;
    TCPHealthCheck tcp = 2;
    ExecHealthCheck exec = 3;
  }
  int32 interval_seconds = 4;
  int32 timeout_seconds = 5;
  int32 retries = 6;
  int32 start_period_seconds = 7;
}

message HTTPHealthCheck {
  string path = 1;
  int32 port = 2;
  string scheme = 3;  // "http" or "https"
  map<string, string> headers = 4;
}

message TCPHealthCheck {
  int32 port = 1;
}

message ExecHealthCheck {
  repeated string command = 1;
}

message Resources {
  ResourceSpec limits = 1;
  ResourceSpec requests = 2;
}

message ResourceSpec {
  int64 memory = 1;     // bytes
  int32 cpu_millicores = 2;  // 1000 = 1 CPU
  int64 storage = 3;    // bytes
  int32 gpu_count = 4;
  int32 file_descriptors = 5; // max open files
}

message PlacementConstraints {
  map<string, string> device_selector = 1;
  repeated NodeAffinity node_affinities = 2;
  repeated string required_capabilities = 3;
}

message NodeAffinity {
  string key = 1;
  string operator = 2;  // "In", "NotIn", "Exists", "DoesNotExist"
  repeated string values = 3;
}

// Deployment represents a software rollout to devices
message Deployment {
  string id = 1;
  string application_id = 2;
  string version = 3;

  // Target devices
  DeploymentTarget target = 4;

  // Deployment strategy
  DeploymentStrategy strategy = 5;

  // Current status
  DeploymentStatus status = 6;

  // Rollback configuration
  RollbackConfig rollback = 7;

  // Timestamps
  google.protobuf.Timestamp created_at = 8;
  google.protobuf.Timestamp started_at = 9;
  google.protobuf.Timestamp completed_at = 10;

  // Results
  DeploymentResult result = 11;
}

message DeploymentTarget {
  repeated string device_ids = 1;
  repeated string group_ids = 2;
  map<string, string> selector = 3;
  int32 max_devices = 4;
}

message DeploymentStrategy {
  oneof strategy {
    CanaryStrategy canary = 1;
    RollingUpdateStrategy rolling = 2;
    BlueGreenStrategy blue_green = 3;
    AllAtOnceStrategy all_at_once = 4;
  }
}

message CanaryStrategy {
  int32 initial_percentage = 1;
  int32 increment_percentage = 2;
  int32 increment_interval_seconds = 3;
  SuccessCriteria success_criteria = 4;
}

message RollingUpdateStrategy {
  int32 max_unavailable = 1;
  int32 max_surge = 2;
  int32 batch_size = 3;
  int32 batch_interval_seconds = 4;
}

message BlueGreenStrategy {
  int32 traffic_switch_delay_seconds = 1;
  int32 validation_period_seconds = 2;
  bool auto_promote = 3;
}

message AllAtOnceStrategy {
  int32 timeout_seconds = 1;
}

message SuccessCriteria {
  float min_success_rate = 1;  // 0.95 = 95%
  int32 min_healthy_seconds = 2;
  float max_error_rate = 3;
}

message RollbackConfig {
  bool enabled = 1;
  repeated RollbackTrigger triggers = 2;
  string fallback_version = 3;
}

message RollbackTrigger {
  TriggerType type = 1;
  float threshold = 2;
  int32 duration_seconds = 3;
}

enum TriggerType {
  TRIGGER_TYPE_UNSPECIFIED = 0;
  TRIGGER_TYPE_CRASH_LOOP = 1;
  TRIGGER_TYPE_HIGH_ERROR_RATE = 2;
  TRIGGER_TYPE_HEALTH_CHECK_FAILURE = 3;
  TRIGGER_TYPE_HIGH_CPU = 4;
  TRIGGER_TYPE_HIGH_MEMORY = 5;
}

enum DeploymentStatus {
  DEPLOYMENT_STATUS_UNSPECIFIED = 0;
  DEPLOYMENT_STATUS_PENDING = 1;
  DEPLOYMENT_STATUS_IN_PROGRESS = 2;
  DEPLOYMENT_STATUS_SUCCEEDED = 3;
  DEPLOYMENT_STATUS_FAILED = 4;
  DEPLOYMENT_STATUS_ROLLING_BACK = 5;
  DEPLOYMENT_STATUS_ROLLED_BACK = 6;
  DEPLOYMENT_STATUS_CANCELLED = 7;
}

message DeploymentResult {
  int32 total_devices = 1;
  int32 succeeded = 2;
  int32 failed = 3;
  int32 in_progress = 4;
  repeated DeviceDeploymentStatus device_statuses = 5;
}

message DeviceDeploymentStatus {
  string device_id = 1;
  DeploymentStatus status = 2;
  string message = 3;
  google.protobuf.Timestamp updated_at = 4;
}

// Process monitoring
message ProcessStatus {
  string app_id = 1;
  string device_id = 2;
  int32 pid = 3;

  ProcessState state = 4;
  int32 restart_count = 5;
  int64 uptime_seconds = 6;

  // Resource usage
  float cpu_percent = 7;
  int64 memory_bytes = 8;
  int64 disk_read_bytes = 9;
  int64 disk_write_bytes = 10;

  // Health
  bool healthy = 11;
  string health_message = 12;

  google.protobuf.Timestamp started_at = 13;
}

enum ProcessState {
  PROCESS_STATE_UNSPECIFIED = 0;
  PROCESS_STATE_STARTING = 1;
  PROCESS_STATE_RUNNING = 2;
  PROCESS_STATE_STOPPING = 3;
  PROCESS_STATE_STOPPED = 4;
  PROCESS_STATE_CRASHED = 5;
  PROCESS_STATE_RESTARTING = 6;
}

// RPC Messages
message UploadArtifactRequest {
  oneof data {
    ArtifactMetadata metadata = 1;
    bytes chunk = 2;
  }
}

message ArtifactMetadata {
  string name = 1;
  string version = 2;
  ArtifactType type = 3;
  repeated Platform platforms = 4;
  map<string, string> labels = 5;
  BuildInfo build_info = 6;
  Requirements requirements = 7;
}

message UploadArtifactResponse {
  string artifact_id = 1;
  string download_url = 2;
  map<string, string> checksums = 3;
}

message GetArtifactRequest {
  string name = 1;
  string version = 2;
}

message GetArtifactResponse {
  Artifact artifact = 1;
}

message ListArtifactsRequest {
  string name = 1;
  map<string, string> labels = 2;
  int32 page_size = 3;
  string page_token = 4;
}

message ListArtifactsResponse {
  repeated Artifact artifacts = 1;
  string next_page_token = 2;
}

message DeleteArtifactRequest {
  string artifact_id = 1;
}

message DeleteArtifactResponse {
  bool success = 1;
}

message GetDownloadURLRequest {
  string artifact_id = 1;
  string device_id = 2;
  int32 expiry_seconds = 3;
}

message GetDownloadURLResponse {
  string url = 1;
  google.protobuf.Timestamp expires_at = 2;
  map<string, string> headers = 3;  // For authentication
}

message CreateApplicationRequest {
  Application application = 1;
}

message CreateApplicationResponse {
  string application_id = 1;
}

message GetApplicationRequest {
  string application_id = 1;
}

message GetApplicationResponse {
  Application application = 1;
}

message ListApplicationsRequest {
  map<string, string> labels = 1;
  int32 page_size = 2;
  string page_token = 3;
}

message ListApplicationsResponse {
  repeated Application applications = 1;
  string next_page_token = 2;
}

message DeleteApplicationRequest {
  string application_id = 1;
}

message DeleteApplicationResponse {
  bool success = 1;
}

message CreateDeploymentRequest {
  Deployment deployment = 1;
}

message CreateDeploymentResponse {
  string deployment_id = 1;
}

message GetDeploymentRequest {
  string deployment_id = 1;
}

message GetDeploymentResponse {
  Deployment deployment = 1;
}

message ListDeploymentsRequest {
  string application_id = 1;
  DeploymentStatus status = 2;
  int32 page_size = 3;
  string page_token = 4;
}

message ListDeploymentsResponse {
  repeated Deployment deployments = 1;
  string next_page_token = 2;
}

message CancelDeploymentRequest {
  string deployment_id = 1;
  bool rollback = 2;
}

message CancelDeploymentResponse {
  bool success = 1;
}

message GetDeploymentMetricsRequest {
  string deployment_id = 1;
  google.protobuf.Timestamp start_time = 2;
  google.protobuf.Timestamp end_time = 3;
}

message GetDeploymentMetricsResponse {
  repeated DeploymentMetric metrics = 1;
}

message DeploymentMetric {
  google.protobuf.Timestamp timestamp = 1;
  float success_rate = 2;
  float error_rate = 3;
  int32 devices_updated = 4;
  int32 devices_failed = 5;
  float avg_deployment_time = 6;
}