syntax = "proto3";

package public.v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "public/v1/auth.proto";

option go_package = "fleetd.sh/gen/public/v1;publicv1";

// OrganizationService manages organizations and teams
// Essential for multi-tenancy in cloud offering
service OrganizationService {
  // Organization management
  rpc GetOrganization(GetOrganizationRequest) returns (GetOrganizationResponse);
  rpc UpdateOrganization(UpdateOrganizationRequest) returns (UpdateOrganizationResponse);

  // Team management
  rpc ListTeams(ListTeamsRequest) returns (ListTeamsResponse);
  rpc CreateTeam(CreateTeamRequest) returns (CreateTeamResponse);
  rpc UpdateTeam(UpdateTeamRequest) returns (UpdateTeamResponse);
  rpc DeleteTeam(DeleteTeamRequest) returns (google.protobuf.Empty);

  // Member management
  rpc ListMembers(ListMembersRequest) returns (ListMembersResponse);
  rpc InviteMember(InviteMemberRequest) returns (InviteMemberResponse);
  rpc UpdateMemberRole(UpdateMemberRoleRequest) returns (UpdateMemberRoleResponse);
  rpc RemoveMember(RemoveMemberRequest) returns (google.protobuf.Empty);

  // Billing (cloud offering)
  rpc GetBillingInfo(google.protobuf.Empty) returns (GetBillingInfoResponse);
  rpc GetUsage(GetUsageRequest) returns (GetUsageResponse);
}

// Organization represents a tenant
message Organization {
  string id = 1;
  string name = 2;
  string slug = 3;
  string logo_url = 4;
  Plan plan = 5;
  google.protobuf.Timestamp created_at = 6;
  google.protobuf.Timestamp updated_at = 7;
  OrganizationSettings settings = 8;
}

message OrganizationSettings {
  bool require_2fa = 1;
  repeated string allowed_domains = 2;
  bool sso_enabled = 3;
  string sso_provider_id = 4;
  int32 session_timeout_minutes = 5;
  repeated string ip_whitelist = 6;
}

enum Plan {
  PLAN_UNSPECIFIED = 0;
  PLAN_FREE = 1;
  PLAN_STARTER = 2;
  PLAN_PROFESSIONAL = 3;
  PLAN_ENTERPRISE = 4;
  PLAN_SELF_HOSTED = 5; // OSS version
}

// Team for organizing devices and access
message Team {
  string id = 1;
  string organization_id = 2;
  string name = 3;
  string description = 4;
  repeated string device_tags = 5; // Devices with these tags belong to this team
  repeated string member_ids = 6;
  google.protobuf.Timestamp created_at = 7;
  google.protobuf.Timestamp updated_at = 8;
}

// Member of an organization
message Member {
  string id = 1;
  string user_id = 2;
  string email = 3;
  string name = 4;
  UserRole role = 5;
  repeated string team_ids = 6;
  google.protobuf.Timestamp joined_at = 7;
  MemberStatus status = 8;
}

enum MemberStatus {
  MEMBER_STATUS_UNSPECIFIED = 0;
  MEMBER_STATUS_ACTIVE = 1;
  MEMBER_STATUS_INVITED = 2;
  MEMBER_STATUS_SUSPENDED = 3;
}

// UserRole is imported from auth.proto

// Organization management messages
message GetOrganizationRequest {
  string organization_id = 1;
}

message GetOrganizationResponse {
  Organization organization = 1;
}

message UpdateOrganizationRequest {
  string organization_id = 1;
  string name = 2;
  string logo_url = 3;
  OrganizationSettings settings = 4;
}

message UpdateOrganizationResponse {
  Organization organization = 1;
}

// Team management messages
message ListTeamsRequest {
  string organization_id = 1;
  int32 page_size = 2;
  string page_token = 3;
}

message ListTeamsResponse {
  repeated Team teams = 1;
  string next_page_token = 2;
}

message CreateTeamRequest {
  string organization_id = 1;
  string name = 2;
  string description = 3;
  repeated string device_tags = 4;
}

message CreateTeamResponse {
  Team team = 1;
}

message UpdateTeamRequest {
  string team_id = 1;
  string name = 2;
  string description = 3;
  repeated string device_tags = 4;
  repeated string member_ids = 5;
}

message UpdateTeamResponse {
  Team team = 1;
}

message DeleteTeamRequest {
  string team_id = 1;
}

// Member management messages
message ListMembersRequest {
  string organization_id = 1;
  string team_id = 2;
  int32 page_size = 3;
  string page_token = 4;
}

message ListMembersResponse {
  repeated Member members = 1;
  string next_page_token = 2;
}

message InviteMemberRequest {
  string organization_id = 1;
  string email = 2;
  UserRole role = 3;
  repeated string team_ids = 4;
}

message InviteMemberResponse {
  Member member = 1;
  string invitation_link = 2;
}

message UpdateMemberRoleRequest {
  string member_id = 1;
  UserRole role = 2;
}

message UpdateMemberRoleResponse {
  Member member = 1;
}

message RemoveMemberRequest {
  string member_id = 1;
}

// Billing messages (cloud offering)
message GetBillingInfoResponse {
  Plan current_plan = 1;
  google.protobuf.Timestamp billing_period_start = 2;
  google.protobuf.Timestamp billing_period_end = 3;
  int64 device_limit = 4;
  int64 telemetry_retention_days = 5;
  int64 update_storage_gb = 6;
  bool custom_domain_enabled = 7;
  bool sso_enabled = 8;
  bool priority_support = 9;
}

message GetUsageRequest {
  google.protobuf.Timestamp start_time = 1;
  google.protobuf.Timestamp end_time = 2;
}

message GetUsageResponse {
  int64 device_count = 1;
  int64 telemetry_points = 2;
  int64 api_calls = 3;
  int64 bandwidth_bytes = 4;
  int64 storage_bytes = 5;
  repeated UsageByDay daily_usage = 6;
}

message UsageByDay {
  google.protobuf.Timestamp date = 1;
  int64 device_count = 2;
  int64 telemetry_points = 3;
  int64 api_calls = 4;
}