syntax = "proto3";

package metrics.v1;

import "google/protobuf/timestamp.proto";

option go_package = "fleetd.sh/gen/metrics/v1;metricsv1";

service MetricsService {
  rpc SendMetrics(SendMetricsRequest) returns (SendMetricsResponse);
  rpc GetMetrics(GetMetricsRequest) returns (stream GetMetricsResponse);
}

message Metric {
  string measurement = 1;
  map<string, string> tags = 2;
  map<string, double> fields = 3;
  google.protobuf.Timestamp timestamp = 4;
}

message SendMetricsRequest {
  string device_id = 1;
  repeated Metric metrics = 2;
  string precision = 3;  // Optional: "ns", "us", "ms", "s"
}

message SendMetricsResponse {
  bool success = 1;
  string message = 2;
}

message GetMetricsRequest {
  string device_id = 1;
  google.protobuf.Timestamp start_time = 2;
  google.protobuf.Timestamp end_time = 3;
  string measurement = 4;
}

message GetMetricsResponse {
  Metric metric = 1;
}
