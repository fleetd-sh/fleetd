version: 2

project_name: fleetd

before:
  hooks:
    - go mod tidy
    - go generate ./...
    - buf generate

builds:
  - id: fleetctl
    main: ./cmd/fleetctl
    binary: fleetctl
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
    ignore:
      - goos: windows
        goarch: arm64
    mod_timestamp: "{{ .CommitTimestamp }}"
    flags:
      - -trimpath
    ldflags:
      - -s -w
      - -X fleetd.sh/internal/version.Version={{.Version}}
      - -X fleetd.sh/internal/version.CommitSHA={{.Commit}}
      - -X fleetd.sh/internal/version.BuildTime={{ .CommitDate }}

  - id: fleetd
    main: ./cmd/fleetd
    binary: fleetd
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
    goarch:
      - amd64
      - arm64
    mod_timestamp: "{{ .CommitTimestamp }}"
    flags:
      - -trimpath
    ldflags:
      - -s -w
      - -X fleetd.sh/internal/version.Version={{.Version}}
      - -X fleetd.sh/internal/version.CommitSHA={{.Commit}}
      - -X fleetd.sh/internal/version.BuildTime={{ .CommitDate }}

  - id: device-api
    main: ./cmd/device-api
    binary: device-api
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
    goarch:
      - amd64
      - arm64
    mod_timestamp: "{{ .CommitTimestamp }}"
    flags:
      - -trimpath
    ldflags:
      - -s -w
      - -X fleetd.sh/internal/version.Version={{.Version}}
      - -X fleetd.sh/internal/version.CommitSHA={{.Commit}}
      - -X fleetd.sh/internal/version.BuildTime={{ .CommitDate }}

  - id: platform-api
    main: ./cmd/platform-api
    binary: platform-api
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
    goarch:
      - amd64
      - arm64
    mod_timestamp: "{{ .CommitTimestamp }}"
    flags:
      - -trimpath
    ldflags:
      - -s -w
      - -X fleetd.sh/internal/version.Version={{.Version}}
      - -X fleetd.sh/internal/version.CommitSHA={{.Commit}}
      - -X fleetd.sh/internal/version.BuildTime={{ .CommitDate }}

archives:
  - id: fleetctl
    builds: [fleetctl]
    name_template: "fleetctl_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
    files:
      - LICENSE
      - README.md

  - id: fleetd
    builds: [fleetd]
    name_template: "fleetd_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
    files:
      - LICENSE
      - README.md

  - id: device-api
    builds: [device-api]
    name_template: "device-api_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
    files:
      - LICENSE
      - README.md

  - id: platform-api
    builds: [platform-api]
    name_template: "platform-api_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
    files:
      - LICENSE
      - README.md

checksum:
  name_template: "checksums.txt"

source:
  enabled: true

snapshot:
  version_template: "{{ incpatch .Version }}-next"

changelog:
  sort: asc
  use: github
  filters:
    exclude:
      - "^docs:"
      - "^test:"
      - "^chore:"
      - Merge pull request
      - Merge branch
  groups:
    - title: "New Features"
      regexp: '^.*?feat(\([[:word:]]+\))??!?:.+$'
      order: 0
    - title: "Bug Fixes"
      regexp: '^.*?fix(\([[:word:]]+\))??!?:.+$'
      order: 1
    - title: "Performance Improvements"
      regexp: '^.*?perf(\([[:word:]]+\))??!?:.+$'
      order: 2
    - title: "Code Refactoring"
      regexp: '^.*?refactor(\([[:word:]]+\))??!?:.+$'
      order: 3
    - title: "Security Updates"
      regexp: '^.*?sec(\([[:word:]]+\))??!?:.+$'
      order: 4
    - title: "Other Changes"
      order: 999

release:
  github:
    owner: fleetd-sh
    name: fleetd
  draft: false
  prerelease: auto
  mode: keep-existing
  name_template: "{{.ProjectName}}-v{{.Version}}"
  extra_files:
    - glob: scripts/install.sh
      name_template: install.sh

sboms:
  - artifacts: archive
  - id: source
    artifacts: source

signs:
  - cmd: cosign
    certificate: "${artifact}.pem"
    args:
      - sign-blob
      - "--output-certificate=${certificate}"
      - "--output-signature=${signature}"
      - "${artifact}"
      - "--yes"
    artifacts: checksum
    output: true

dockers_v2:
  - id: device-api
    ids:
      - device-api
    images:
      - "ghcr.io/fleetd-sh/device-api"
    tags:
      - "latest"
      - "{{ .Tag }}"
      - "{{ .Major }}"
      - "{{ .Major }}.{{ .Minor }}"
    dockerfile: container/device.dockerfile
    goarch: amd64
    goos: linux
    labels:
      org.opencontainers.image.created: "{{.Date}}"
      org.opencontainers.image.title: "device-api"
      org.opencontainers.image.revision: "{{.FullCommit}}"
      org.opencontainers.image.version: "{{.Version}}"
      org.opencontainers.image.source: "{{.GitURL}}"

  - id: device-api-arm64
    ids:
      - device-api
    images:
      - "ghcr.io/fleetd-sh/device-api"
    tags:
      - "latest"
      - "{{ .Tag }}"
      - "{{ .Major }}"
      - "{{ .Major }}.{{ .Minor }}"
    dockerfile: container/device.dockerfile
    goarch: arm64
    goos: linux
    labels:
      org.opencontainers.image.created: "{{.Date}}"
      org.opencontainers.image.title: "device-api"
      org.opencontainers.image.revision: "{{.FullCommit}}"
      org.opencontainers.image.version: "{{.Version}}"
      org.opencontainers.image.source: "{{.GitURL}}"

  - id: platform-api
    ids:
      - platform-api
    images:
      - "ghcr.io/fleetd-sh/platform-api"
    tags:
      - "latest"
      - "{{ .Tag }}"
      - "{{ .Major }}"
      - "{{ .Major }}.{{ .Minor }}"
    dockerfile: container/platform.dockerfile
    goarch: amd64
    goos: linux
    extra_files:
      - internal/database/migrations
    labels:
      org.opencontainers.image.created: "{{.Date}}"
      org.opencontainers.image.title: "platform-api"
      org.opencontainers.image.revision: "{{.FullCommit}}"
      org.opencontainers.image.version: "{{.Version}}"
      org.opencontainers.image.source: "{{.GitURL}}"

  - id: platform-api-arm64
    ids:
      - platform-api
    images:
      - "ghcr.io/fleetd-sh/platform-api"
    tags:
      - "latest"
      - "{{ .Tag }}"
      - "{{ .Major }}"
      - "{{ .Major }}.{{ .Minor }}"
    dockerfile: container/platform.dockerfile
    goarch: arm64
    goos: linux
    extra_files:
      - internal/database/migrations
    labels:
      org.opencontainers.image.created: "{{.Date}}"
      org.opencontainers.image.title: "platform-api"
      org.opencontainers.image.revision: "{{.FullCommit}}"
      org.opencontainers.image.version: "{{.Version}}"
      org.opencontainers.image.source: "{{.GitURL}}"

docker_signs:
  - cmd: cosign
    output: true
    args:
      - "sign"
      - "${artifact}"
      - "--yes"

brews:
  - name: fleetctl
    ids:
      - fleetctl
    repository:
      owner: fleetd-sh
      name: homebrew-fleetd
      branch: main
      token: "{{ .Env.HOMEBREW_TAP_GITHUB_TOKEN }}"
    commit_author:
      name: goreleaserbot
      email: goreleaser@fleetd.sh
    homepage: "https://fleetd.sh"
    description: "Fleet management CLI tool for edge device orchestration"
    license: "MIT"
    directory: Formula
    test: |
      system "#{bin}/fleetctl", "--version"
    install: |
      bin.install "fleetctl"

      # Install bash completions
      output = Utils.safe_popen_read("#{bin}/fleetctl", "completion", "bash")
      (bash_completion/"fleetctl").write output

      # Install zsh completions
      output = Utils.safe_popen_read("#{bin}/fleetctl", "completion", "zsh")
      (zsh_completion/"_fleetctl").write output

      # Install fish completions
      output = Utils.safe_popen_read("#{bin}/fleetctl", "completion", "fish")
      (fish_completion/"fleetctl.fish").write output

nfpms:
  - id: fleetctl
    builds: [fleetctl]
    package_name: fleetctl
    vendor: fleetd
    homepage: https://fleetd.sh
    maintainer: fleetd maintainers <maintainers@fleetd.sh>
    description: Fleet management CLI tool for edge device orchestration
    license: MIT
    formats:
      - deb
      - rpm
      - apk
    dependencies:
      - ca-certificates
    recommends:
      - git
    section: utils
    priority: optional
    contents:
      - src: LICENSE
        dst: /usr/share/doc/fleetctl/LICENSE
      - src: README.md
        dst: /usr/share/doc/fleetctl/README.md

  - id: fleetd
    builds: [fleetd]
    package_name: fleetd
    vendor: fleetd
    homepage: https://fleetd.sh
    maintainer: fleetd maintainers <maintainers@fleetd.sh>
    description: Fleet daemon for edge device management
    license: MIT
    formats:
      - deb
      - rpm
    dependencies:
      - ca-certificates
    section: admin
    priority: optional
    contents:
      - src: LICENSE
        dst: /usr/share/doc/fleetd/LICENSE
      - src: README.md
        dst: /usr/share/doc/fleetd/README.md
