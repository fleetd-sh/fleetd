// @generated by protoc-gen-connect-es v1.6.1 with parameter "target=ts,keep_empty_files=false"
// @generated from file public/v1/fleet.proto (package public.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CancelDeploymentRequest, CancelDeploymentResponse, CreateDeploymentRequest, CreateDeploymentResponse, DeleteDeviceRequest, DiscoverDevicesRequest, DiscoverDevicesResponse, GetConfigurationRequest, GetConfigurationResponse, GetDeploymentRequest, GetDeploymentResponse, GetDeploymentStatusRequest, GetDeploymentStatusResponse, GetDeviceRequest, GetDeviceResponse, GetDeviceStatsRequest, GetDeviceStatsResponse, GetTelemetryRequest, GetTelemetryResponse, ListDeploymentsRequest, ListDeploymentsResponse, ListDevicesRequest, ListDevicesResponse, PauseDeploymentRequest, PauseDeploymentResponse, RollbackDeploymentRequest, RollbackDeploymentResponse, StartDeploymentRequest, StartDeploymentResponse, StreamDeploymentEventsRequest, StreamDeploymentEventsResponse, StreamEventsRequest, StreamEventsResponse, StreamTelemetryRequest, StreamTelemetryResponse, UpdateConfigurationRequest, UpdateConfigurationResponse, UpdateDeviceRequest, UpdateDeviceResponse } from "./fleet_pb.js";
import { Empty, MethodKind } from "@bufbuild/protobuf";

/**
 * FleetService provides the public API for fleet management
 * This is the primary API for web frontends, mobile apps, and third-party integrations
 *
 * @generated from service public.v1.FleetService
 */
export const FleetService = {
  typeName: "public.v1.FleetService",
  methods: {
    /**
     * Device management
     *
     * @generated from rpc public.v1.FleetService.ListDevices
     */
    listDevices: {
      name: "ListDevices",
      I: ListDevicesRequest,
      O: ListDevicesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc public.v1.FleetService.GetDevice
     */
    getDevice: {
      name: "GetDevice",
      I: GetDeviceRequest,
      O: GetDeviceResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc public.v1.FleetService.UpdateDevice
     */
    updateDevice: {
      name: "UpdateDevice",
      I: UpdateDeviceRequest,
      O: UpdateDeviceResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc public.v1.FleetService.DeleteDevice
     */
    deleteDevice: {
      name: "DeleteDevice",
      I: DeleteDeviceRequest,
      O: Empty,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc public.v1.FleetService.GetDeviceStats
     */
    getDeviceStats: {
      name: "GetDeviceStats",
      I: GetDeviceStatsRequest,
      O: GetDeviceStatsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Device discovery
     *
     * @generated from rpc public.v1.FleetService.DiscoverDevices
     */
    discoverDevices: {
      name: "DiscoverDevices",
      I: DiscoverDevicesRequest,
      O: DiscoverDevicesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Telemetry
     *
     * @generated from rpc public.v1.FleetService.GetTelemetry
     */
    getTelemetry: {
      name: "GetTelemetry",
      I: GetTelemetryRequest,
      O: GetTelemetryResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc public.v1.FleetService.StreamTelemetry
     */
    streamTelemetry: {
      name: "StreamTelemetry",
      I: StreamTelemetryRequest,
      O: StreamTelemetryResponse,
      kind: MethodKind.ServerStreaming,
    },
    /**
     * Deployment management - Unified API for all deployment types
     *
     * @generated from rpc public.v1.FleetService.CreateDeployment
     */
    createDeployment: {
      name: "CreateDeployment",
      I: CreateDeploymentRequest,
      O: CreateDeploymentResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc public.v1.FleetService.ListDeployments
     */
    listDeployments: {
      name: "ListDeployments",
      I: ListDeploymentsRequest,
      O: ListDeploymentsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc public.v1.FleetService.GetDeployment
     */
    getDeployment: {
      name: "GetDeployment",
      I: GetDeploymentRequest,
      O: GetDeploymentResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc public.v1.FleetService.StartDeployment
     */
    startDeployment: {
      name: "StartDeployment",
      I: StartDeploymentRequest,
      O: StartDeploymentResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc public.v1.FleetService.PauseDeployment
     */
    pauseDeployment: {
      name: "PauseDeployment",
      I: PauseDeploymentRequest,
      O: PauseDeploymentResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc public.v1.FleetService.CancelDeployment
     */
    cancelDeployment: {
      name: "CancelDeployment",
      I: CancelDeploymentRequest,
      O: CancelDeploymentResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc public.v1.FleetService.RollbackDeployment
     */
    rollbackDeployment: {
      name: "RollbackDeployment",
      I: RollbackDeploymentRequest,
      O: RollbackDeploymentResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc public.v1.FleetService.GetDeploymentStatus
     */
    getDeploymentStatus: {
      name: "GetDeploymentStatus",
      I: GetDeploymentStatusRequest,
      O: GetDeploymentStatusResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc public.v1.FleetService.StreamDeploymentEvents
     */
    streamDeploymentEvents: {
      name: "StreamDeploymentEvents",
      I: StreamDeploymentEventsRequest,
      O: StreamDeploymentEventsResponse,
      kind: MethodKind.ServerStreaming,
    },
    /**
     * Configuration
     *
     * @generated from rpc public.v1.FleetService.GetConfiguration
     */
    getConfiguration: {
      name: "GetConfiguration",
      I: GetConfigurationRequest,
      O: GetConfigurationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc public.v1.FleetService.UpdateConfiguration
     */
    updateConfiguration: {
      name: "UpdateConfiguration",
      I: UpdateConfigurationRequest,
      O: UpdateConfigurationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Events streaming (SSE replacement)
     *
     * @generated from rpc public.v1.FleetService.StreamEvents
     */
    streamEvents: {
      name: "StreamEvents",
      I: StreamEventsRequest,
      O: StreamEventsResponse,
      kind: MethodKind.ServerStreaming,
    },
  }
} as const;

