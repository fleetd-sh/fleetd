// @generated by protoc-gen-connect-es v1.6.1 with parameter "target=ts,keep_empty_files=false"
// @generated from file fleetd/v1/telemetry.proto (package fleetd.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { ConfigureAlertRequest, ConfigureAlertResponse, DeleteAlertRequest, DeleteAlertResponse, GetLogsRequest, GetLogsResponse, GetMetricsRequest, GetMetricsResponse, GetTelemetryRequest, GetTelemetryResponse, ListAlertsRequest, ListAlertsResponse, StreamLogsRequest, StreamLogsResponse, StreamTelemetryRequest, StreamTelemetryResponse } from "./telemetry_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service fleetd.v1.TelemetryService
 */
export const TelemetryService = {
  typeName: "fleetd.v1.TelemetryService",
  methods: {
    /**
     * Get telemetry data for devices
     *
     * @generated from rpc fleetd.v1.TelemetryService.GetTelemetry
     */
    getTelemetry: {
      name: "GetTelemetry",
      I: GetTelemetryRequest,
      O: GetTelemetryResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get aggregated metrics
     *
     * @generated from rpc fleetd.v1.TelemetryService.GetMetrics
     */
    getMetrics: {
      name: "GetMetrics",
      I: GetMetricsRequest,
      O: GetMetricsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Stream real-time telemetry data
     *
     * @generated from rpc fleetd.v1.TelemetryService.StreamTelemetry
     */
    streamTelemetry: {
      name: "StreamTelemetry",
      I: StreamTelemetryRequest,
      O: StreamTelemetryResponse,
      kind: MethodKind.ServerStreaming,
    },
    /**
     * Get system logs
     *
     * @generated from rpc fleetd.v1.TelemetryService.GetLogs
     */
    getLogs: {
      name: "GetLogs",
      I: GetLogsRequest,
      O: GetLogsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Stream real-time logs
     *
     * @generated from rpc fleetd.v1.TelemetryService.StreamLogs
     */
    streamLogs: {
      name: "StreamLogs",
      I: StreamLogsRequest,
      O: StreamLogsResponse,
      kind: MethodKind.ServerStreaming,
    },
    /**
     * Configure alerts
     *
     * @generated from rpc fleetd.v1.TelemetryService.ConfigureAlert
     */
    configureAlert: {
      name: "ConfigureAlert",
      I: ConfigureAlertRequest,
      O: ConfigureAlertResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List configured alerts
     *
     * @generated from rpc fleetd.v1.TelemetryService.ListAlerts
     */
    listAlerts: {
      name: "ListAlerts",
      I: ListAlertsRequest,
      O: ListAlertsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete an alert
     *
     * @generated from rpc fleetd.v1.TelemetryService.DeleteAlert
     */
    deleteAlert: {
      name: "DeleteAlert",
      I: DeleteAlertRequest,
      O: DeleteAlertResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

