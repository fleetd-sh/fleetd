// @generated by protoc-gen-es v2.9.0 with parameter "target=ts,keep_empty_files=false"
// @generated from file fleetd/v1/telemetry.proto (package fleetd.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file fleetd/v1/telemetry.proto.
 */
export const file_fleetd_v1_telemetry: GenFile = /*@__PURE__*/
  fileDesc("ChlmbGVldGQvdjEvdGVsZW1ldHJ5LnByb3RvEglmbGVldGQudjEitQIKDVRlbGVtZXRyeURhdGESEQoJZGV2aWNlX2lkGAEgASgJEi0KCXRpbWVzdGFtcBgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASEQoJY3B1X3VzYWdlGAMgASgBEhQKDG1lbW9yeV91c2FnZRgEIAEoARISCgpkaXNrX3VzYWdlGAUgASgBEhUKDW5ldHdvcmtfdXNhZ2UYBiABKAESEwoLdGVtcGVyYXR1cmUYByABKAESQwoOY3VzdG9tX21ldHJpY3MYCCADKAsyKy5mbGVldGQudjEuVGVsZW1ldHJ5RGF0YS5DdXN0b21NZXRyaWNzRW50cnkaNAoSQ3VzdG9tTWV0cmljc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoAToCOAEihQIKEVRlbGVtZXRyeUxvZ0VudHJ5EgoKAmlkGAEgASgJEhEKCWRldmljZV9pZBgCIAEoCRItCgl0aW1lc3RhbXAYAyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEiIKBWxldmVsGAQgASgOMhMuZmxlZXRkLnYxLkxvZ0xldmVsEg8KB21lc3NhZ2UYBSABKAkSPAoIbWV0YWRhdGEYBiADKAsyKi5mbGVldGQudjEuVGVsZW1ldHJ5TG9nRW50cnkuTWV0YWRhdGFFbnRyeRovCg1NZXRhZGF0YUVudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEioAIKBUFsZXJ0EgoKAmlkGAEgASgJEgwKBG5hbWUYAiABKAkSEwoLZGVzY3JpcHRpb24YAyABKAkSIgoEdHlwZRgEIAEoDjIULmZsZWV0ZC52MS5BbGVydFR5cGUSEQoJdGhyZXNob2xkGAUgASgBEiwKCWNvbmRpdGlvbhgGIAEoDjIZLmZsZWV0ZC52MS5BbGVydENvbmRpdGlvbhIPCgdlbmFibGVkGAcgASgIEhIKCmRldmljZV9pZHMYCCADKAkSLgoKY3JlYXRlZF9hdBgJIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLgoKdXBkYXRlZF9hdBgKIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAilQEKE0dldFRlbGVtZXRyeVJlcXVlc3QSEQoJZGV2aWNlX2lkGAEgASgJEi4KCnN0YXJ0X3RpbWUYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEiwKCGVuZF90aW1lGAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBINCgVsaW1pdBgEIAEoBSI+ChRHZXRUZWxlbWV0cnlSZXNwb25zZRImCgRkYXRhGAEgAygLMhguZmxlZXRkLnYxLlRlbGVtZXRyeURhdGEiygEKEUdldE1ldHJpY3NSZXF1ZXN0EhIKCmRldmljZV9pZHMYASADKAkSFAoMbWV0cmljX25hbWVzGAIgAygJEi4KCnN0YXJ0X3RpbWUYAyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEiwKCGVuZF90aW1lGAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBITCgthZ2dyZWdhdGlvbhgFIAEoCRIYChBpbnRlcnZhbF9zZWNvbmRzGAYgASgFIjwKEkdldE1ldHJpY3NSZXNwb25zZRImCgdtZXRyaWNzGAEgAygLMhUuZmxlZXRkLnYxLk1ldHJpY0RhdGEizQEKCk1ldHJpY0RhdGESDAoEbmFtZRgBIAEoCRItCgl0aW1lc3RhbXAYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEg0KBXZhbHVlGAMgASgBEhEKCWRldmljZV9pZBgEIAEoCRIxCgZsYWJlbHMYBSADKAsyIS5mbGVldGQudjEuTWV0cmljRGF0YS5MYWJlbHNFbnRyeRotCgtMYWJlbHNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIkIKFlN0cmVhbVRlbGVtZXRyeVJlcXVlc3QSEgoKZGV2aWNlX2lkcxgBIAMoCRIUCgxtZXRyaWNfbmFtZXMYAiADKAkixgEKDkdldExvZ3NSZXF1ZXN0EhIKCmRldmljZV9pZHMYASADKAkSIwoGbGV2ZWxzGAIgAygOMhMuZmxlZXRkLnYxLkxvZ0xldmVsEg4KBmZpbHRlchgDIAEoCRIuCgpzdGFydF90aW1lGAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIsCghlbmRfdGltZRgFIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASDQoFbGltaXQYBiABKAUiPQoPR2V0TG9nc1Jlc3BvbnNlEioKBGxvZ3MYASADKAsyHC5mbGVldGQudjEuVGVsZW1ldHJ5TG9nRW50cnkiXAoRU3RyZWFtTG9nc1JlcXVlc3QSEgoKZGV2aWNlX2lkcxgBIAMoCRIjCgZsZXZlbHMYAiADKA4yEy5mbGVldGQudjEuTG9nTGV2ZWwSDgoGZmlsdGVyGAMgASgJIjgKFUNvbmZpZ3VyZUFsZXJ0UmVxdWVzdBIfCgVhbGVydBgBIAEoCzIQLmZsZWV0ZC52MS5BbGVydCI5ChZDb25maWd1cmVBbGVydFJlc3BvbnNlEh8KBWFsZXJ0GAEgASgLMhAuZmxlZXRkLnYxLkFsZXJ0Ij0KEUxpc3RBbGVydHNSZXF1ZXN0EhIKCmRldmljZV9pZHMYASADKAkSFAoMZW5hYmxlZF9vbmx5GAIgASgIIjYKEkxpc3RBbGVydHNSZXNwb25zZRIgCgZhbGVydHMYASADKAsyEC5mbGVldGQudjEuQWxlcnQiJgoSRGVsZXRlQWxlcnRSZXF1ZXN0EhAKCGFsZXJ0X2lkGAEgASgJIhUKE0RlbGV0ZUFsZXJ0UmVzcG9uc2UqjAEKCExvZ0xldmVsEhkKFUxPR19MRVZFTF9VTlNQRUNJRklFRBAAEhMKD0xPR19MRVZFTF9ERUJVRxABEhIKDkxPR19MRVZFTF9JTkZPEAISEgoOTE9HX0xFVkVMX1dBUk4QAxITCg9MT0dfTEVWRUxfRVJST1IQBBITCg9MT0dfTEVWRUxfRkFUQUwQBSrRAQoJQWxlcnRUeXBlEhoKFkFMRVJUX1RZUEVfVU5TUEVDSUZJRUQQABISCg5BTEVSVF9UWVBFX0NQVRABEhUKEUFMRVJUX1RZUEVfTUVNT1JZEAISEwoPQUxFUlRfVFlQRV9ESVNLEAMSFgoSQUxFUlRfVFlQRV9ORVRXT1JLEAQSGgoWQUxFUlRfVFlQRV9URU1QRVJBVFVSRRAFEh0KGUFMRVJUX1RZUEVfREVWSUNFX09GRkxJTkUQBhIVChFBTEVSVF9UWVBFX0NVU1RPTRAHKqwBCg5BbGVydENvbmRpdGlvbhIfChtBTEVSVF9DT05ESVRJT05fVU5TUEVDSUZJRUQQABIgChxBTEVSVF9DT05ESVRJT05fR1JFQVRFUl9USEFOEAESHQoZQUxFUlRfQ09ORElUSU9OX0xFU1NfVEhBThACEhkKFUFMRVJUX0NPTkRJVElPTl9FUVVBTBADEh0KGUFMRVJUX0NPTkRJVElPTl9OT1RfRVFVQUwQBDKOBQoQVGVsZW1ldHJ5U2VydmljZRJRCgxHZXRUZWxlbWV0cnkSHi5mbGVldGQudjEuR2V0VGVsZW1ldHJ5UmVxdWVzdBofLmZsZWV0ZC52MS5HZXRUZWxlbWV0cnlSZXNwb25zZSIAEksKCkdldE1ldHJpY3MSHC5mbGVldGQudjEuR2V0TWV0cmljc1JlcXVlc3QaHS5mbGVldGQudjEuR2V0TWV0cmljc1Jlc3BvbnNlIgASUgoPU3RyZWFtVGVsZW1ldHJ5EiEuZmxlZXRkLnYxLlN0cmVhbVRlbGVtZXRyeVJlcXVlc3QaGC5mbGVldGQudjEuVGVsZW1ldHJ5RGF0YSIAMAESQgoHR2V0TG9ncxIZLmZsZWV0ZC52MS5HZXRMb2dzUmVxdWVzdBoaLmZsZWV0ZC52MS5HZXRMb2dzUmVzcG9uc2UiABJMCgpTdHJlYW1Mb2dzEhwuZmxlZXRkLnYxLlN0cmVhbUxvZ3NSZXF1ZXN0GhwuZmxlZXRkLnYxLlRlbGVtZXRyeUxvZ0VudHJ5IgAwARJXCg5Db25maWd1cmVBbGVydBIgLmZsZWV0ZC52MS5Db25maWd1cmVBbGVydFJlcXVlc3QaIS5mbGVldGQudjEuQ29uZmlndXJlQWxlcnRSZXNwb25zZSIAEksKCkxpc3RBbGVydHMSHC5mbGVldGQudjEuTGlzdEFsZXJ0c1JlcXVlc3QaHS5mbGVldGQudjEuTGlzdEFsZXJ0c1Jlc3BvbnNlIgASTgoLRGVsZXRlQWxlcnQSHS5mbGVldGQudjEuRGVsZXRlQWxlcnRSZXF1ZXN0Gh4uZmxlZXRkLnYxLkRlbGV0ZUFsZXJ0UmVzcG9uc2UiAEKFAQoNY29tLmZsZWV0ZC52MUIOVGVsZW1ldHJ5UHJvdG9QAVofZmxlZXRkLnNoL2dlbi9mbGVldGQvdjE7ZmxlZXRwYqICA0ZYWKoCCUZsZWV0ZC5WMcoCCUZsZWV0ZFxWMeICFUZsZWV0ZFxWMVxHUEJNZXRhZGF0YeoCCkZsZWV0ZDo6VjFiBnByb3RvMw", [file_google_protobuf_timestamp]);

/**
 * @generated from message fleetd.v1.TelemetryData
 */
export type TelemetryData = Message<"fleetd.v1.TelemetryData"> & {
  /**
   * @generated from field: string device_id = 1;
   */
  deviceId: string;

  /**
   * @generated from field: google.protobuf.Timestamp timestamp = 2;
   */
  timestamp?: Timestamp;

  /**
   * @generated from field: double cpu_usage = 3;
   */
  cpuUsage: number;

  /**
   * @generated from field: double memory_usage = 4;
   */
  memoryUsage: number;

  /**
   * @generated from field: double disk_usage = 5;
   */
  diskUsage: number;

  /**
   * @generated from field: double network_usage = 6;
   */
  networkUsage: number;

  /**
   * @generated from field: double temperature = 7;
   */
  temperature: number;

  /**
   * @generated from field: map<string, double> custom_metrics = 8;
   */
  customMetrics: { [key: string]: number };
};

/**
 * Describes the message fleetd.v1.TelemetryData.
 * Use `create(TelemetryDataSchema)` to create a new message.
 */
export const TelemetryDataSchema: GenMessage<TelemetryData> = /*@__PURE__*/
  messageDesc(file_fleetd_v1_telemetry, 0);

/**
 * @generated from message fleetd.v1.TelemetryLogEntry
 */
export type TelemetryLogEntry = Message<"fleetd.v1.TelemetryLogEntry"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string device_id = 2;
   */
  deviceId: string;

  /**
   * @generated from field: google.protobuf.Timestamp timestamp = 3;
   */
  timestamp?: Timestamp;

  /**
   * @generated from field: fleetd.v1.LogLevel level = 4;
   */
  level: LogLevel;

  /**
   * @generated from field: string message = 5;
   */
  message: string;

  /**
   * @generated from field: map<string, string> metadata = 6;
   */
  metadata: { [key: string]: string };
};

/**
 * Describes the message fleetd.v1.TelemetryLogEntry.
 * Use `create(TelemetryLogEntrySchema)` to create a new message.
 */
export const TelemetryLogEntrySchema: GenMessage<TelemetryLogEntry> = /*@__PURE__*/
  messageDesc(file_fleetd_v1_telemetry, 1);

/**
 * @generated from message fleetd.v1.Alert
 */
export type Alert = Message<"fleetd.v1.Alert"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * @generated from field: fleetd.v1.AlertType type = 4;
   */
  type: AlertType;

  /**
   * @generated from field: double threshold = 5;
   */
  threshold: number;

  /**
   * @generated from field: fleetd.v1.AlertCondition condition = 6;
   */
  condition: AlertCondition;

  /**
   * @generated from field: bool enabled = 7;
   */
  enabled: boolean;

  /**
   * @generated from field: repeated string device_ids = 8;
   */
  deviceIds: string[];

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 9;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 10;
   */
  updatedAt?: Timestamp;
};

/**
 * Describes the message fleetd.v1.Alert.
 * Use `create(AlertSchema)` to create a new message.
 */
export const AlertSchema: GenMessage<Alert> = /*@__PURE__*/
  messageDesc(file_fleetd_v1_telemetry, 2);

/**
 * @generated from message fleetd.v1.GetTelemetryRequest
 */
export type GetTelemetryRequest = Message<"fleetd.v1.GetTelemetryRequest"> & {
  /**
   * @generated from field: string device_id = 1;
   */
  deviceId: string;

  /**
   * @generated from field: google.protobuf.Timestamp start_time = 2;
   */
  startTime?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp end_time = 3;
   */
  endTime?: Timestamp;

  /**
   * @generated from field: int32 limit = 4;
   */
  limit: number;
};

/**
 * Describes the message fleetd.v1.GetTelemetryRequest.
 * Use `create(GetTelemetryRequestSchema)` to create a new message.
 */
export const GetTelemetryRequestSchema: GenMessage<GetTelemetryRequest> = /*@__PURE__*/
  messageDesc(file_fleetd_v1_telemetry, 3);

/**
 * @generated from message fleetd.v1.GetTelemetryResponse
 */
export type GetTelemetryResponse = Message<"fleetd.v1.GetTelemetryResponse"> & {
  /**
   * @generated from field: repeated fleetd.v1.TelemetryData data = 1;
   */
  data: TelemetryData[];
};

/**
 * Describes the message fleetd.v1.GetTelemetryResponse.
 * Use `create(GetTelemetryResponseSchema)` to create a new message.
 */
export const GetTelemetryResponseSchema: GenMessage<GetTelemetryResponse> = /*@__PURE__*/
  messageDesc(file_fleetd_v1_telemetry, 4);

/**
 * @generated from message fleetd.v1.GetMetricsRequest
 */
export type GetMetricsRequest = Message<"fleetd.v1.GetMetricsRequest"> & {
  /**
   * @generated from field: repeated string device_ids = 1;
   */
  deviceIds: string[];

  /**
   * @generated from field: repeated string metric_names = 2;
   */
  metricNames: string[];

  /**
   * @generated from field: google.protobuf.Timestamp start_time = 3;
   */
  startTime?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp end_time = 4;
   */
  endTime?: Timestamp;

  /**
   * avg, min, max, sum
   *
   * @generated from field: string aggregation = 5;
   */
  aggregation: string;

  /**
   * @generated from field: int32 interval_seconds = 6;
   */
  intervalSeconds: number;
};

/**
 * Describes the message fleetd.v1.GetMetricsRequest.
 * Use `create(GetMetricsRequestSchema)` to create a new message.
 */
export const GetMetricsRequestSchema: GenMessage<GetMetricsRequest> = /*@__PURE__*/
  messageDesc(file_fleetd_v1_telemetry, 5);

/**
 * @generated from message fleetd.v1.GetMetricsResponse
 */
export type GetMetricsResponse = Message<"fleetd.v1.GetMetricsResponse"> & {
  /**
   * @generated from field: repeated fleetd.v1.MetricData metrics = 1;
   */
  metrics: MetricData[];
};

/**
 * Describes the message fleetd.v1.GetMetricsResponse.
 * Use `create(GetMetricsResponseSchema)` to create a new message.
 */
export const GetMetricsResponseSchema: GenMessage<GetMetricsResponse> = /*@__PURE__*/
  messageDesc(file_fleetd_v1_telemetry, 6);

/**
 * @generated from message fleetd.v1.MetricData
 */
export type MetricData = Message<"fleetd.v1.MetricData"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: google.protobuf.Timestamp timestamp = 2;
   */
  timestamp?: Timestamp;

  /**
   * @generated from field: double value = 3;
   */
  value: number;

  /**
   * @generated from field: string device_id = 4;
   */
  deviceId: string;

  /**
   * @generated from field: map<string, string> labels = 5;
   */
  labels: { [key: string]: string };
};

/**
 * Describes the message fleetd.v1.MetricData.
 * Use `create(MetricDataSchema)` to create a new message.
 */
export const MetricDataSchema: GenMessage<MetricData> = /*@__PURE__*/
  messageDesc(file_fleetd_v1_telemetry, 7);

/**
 * @generated from message fleetd.v1.StreamTelemetryRequest
 */
export type StreamTelemetryRequest = Message<"fleetd.v1.StreamTelemetryRequest"> & {
  /**
   * @generated from field: repeated string device_ids = 1;
   */
  deviceIds: string[];

  /**
   * @generated from field: repeated string metric_names = 2;
   */
  metricNames: string[];
};

/**
 * Describes the message fleetd.v1.StreamTelemetryRequest.
 * Use `create(StreamTelemetryRequestSchema)` to create a new message.
 */
export const StreamTelemetryRequestSchema: GenMessage<StreamTelemetryRequest> = /*@__PURE__*/
  messageDesc(file_fleetd_v1_telemetry, 8);

/**
 * @generated from message fleetd.v1.GetLogsRequest
 */
export type GetLogsRequest = Message<"fleetd.v1.GetLogsRequest"> & {
  /**
   * @generated from field: repeated string device_ids = 1;
   */
  deviceIds: string[];

  /**
   * @generated from field: repeated fleetd.v1.LogLevel levels = 2;
   */
  levels: LogLevel[];

  /**
   * @generated from field: string filter = 3;
   */
  filter: string;

  /**
   * @generated from field: google.protobuf.Timestamp start_time = 4;
   */
  startTime?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp end_time = 5;
   */
  endTime?: Timestamp;

  /**
   * @generated from field: int32 limit = 6;
   */
  limit: number;
};

/**
 * Describes the message fleetd.v1.GetLogsRequest.
 * Use `create(GetLogsRequestSchema)` to create a new message.
 */
export const GetLogsRequestSchema: GenMessage<GetLogsRequest> = /*@__PURE__*/
  messageDesc(file_fleetd_v1_telemetry, 9);

/**
 * @generated from message fleetd.v1.GetLogsResponse
 */
export type GetLogsResponse = Message<"fleetd.v1.GetLogsResponse"> & {
  /**
   * @generated from field: repeated fleetd.v1.TelemetryLogEntry logs = 1;
   */
  logs: TelemetryLogEntry[];
};

/**
 * Describes the message fleetd.v1.GetLogsResponse.
 * Use `create(GetLogsResponseSchema)` to create a new message.
 */
export const GetLogsResponseSchema: GenMessage<GetLogsResponse> = /*@__PURE__*/
  messageDesc(file_fleetd_v1_telemetry, 10);

/**
 * @generated from message fleetd.v1.StreamLogsRequest
 */
export type StreamLogsRequest = Message<"fleetd.v1.StreamLogsRequest"> & {
  /**
   * @generated from field: repeated string device_ids = 1;
   */
  deviceIds: string[];

  /**
   * @generated from field: repeated fleetd.v1.LogLevel levels = 2;
   */
  levels: LogLevel[];

  /**
   * @generated from field: string filter = 3;
   */
  filter: string;
};

/**
 * Describes the message fleetd.v1.StreamLogsRequest.
 * Use `create(StreamLogsRequestSchema)` to create a new message.
 */
export const StreamLogsRequestSchema: GenMessage<StreamLogsRequest> = /*@__PURE__*/
  messageDesc(file_fleetd_v1_telemetry, 11);

/**
 * @generated from message fleetd.v1.ConfigureAlertRequest
 */
export type ConfigureAlertRequest = Message<"fleetd.v1.ConfigureAlertRequest"> & {
  /**
   * @generated from field: fleetd.v1.Alert alert = 1;
   */
  alert?: Alert;
};

/**
 * Describes the message fleetd.v1.ConfigureAlertRequest.
 * Use `create(ConfigureAlertRequestSchema)` to create a new message.
 */
export const ConfigureAlertRequestSchema: GenMessage<ConfigureAlertRequest> = /*@__PURE__*/
  messageDesc(file_fleetd_v1_telemetry, 12);

/**
 * @generated from message fleetd.v1.ConfigureAlertResponse
 */
export type ConfigureAlertResponse = Message<"fleetd.v1.ConfigureAlertResponse"> & {
  /**
   * @generated from field: fleetd.v1.Alert alert = 1;
   */
  alert?: Alert;
};

/**
 * Describes the message fleetd.v1.ConfigureAlertResponse.
 * Use `create(ConfigureAlertResponseSchema)` to create a new message.
 */
export const ConfigureAlertResponseSchema: GenMessage<ConfigureAlertResponse> = /*@__PURE__*/
  messageDesc(file_fleetd_v1_telemetry, 13);

/**
 * @generated from message fleetd.v1.ListAlertsRequest
 */
export type ListAlertsRequest = Message<"fleetd.v1.ListAlertsRequest"> & {
  /**
   * @generated from field: repeated string device_ids = 1;
   */
  deviceIds: string[];

  /**
   * @generated from field: bool enabled_only = 2;
   */
  enabledOnly: boolean;
};

/**
 * Describes the message fleetd.v1.ListAlertsRequest.
 * Use `create(ListAlertsRequestSchema)` to create a new message.
 */
export const ListAlertsRequestSchema: GenMessage<ListAlertsRequest> = /*@__PURE__*/
  messageDesc(file_fleetd_v1_telemetry, 14);

/**
 * @generated from message fleetd.v1.ListAlertsResponse
 */
export type ListAlertsResponse = Message<"fleetd.v1.ListAlertsResponse"> & {
  /**
   * @generated from field: repeated fleetd.v1.Alert alerts = 1;
   */
  alerts: Alert[];
};

/**
 * Describes the message fleetd.v1.ListAlertsResponse.
 * Use `create(ListAlertsResponseSchema)` to create a new message.
 */
export const ListAlertsResponseSchema: GenMessage<ListAlertsResponse> = /*@__PURE__*/
  messageDesc(file_fleetd_v1_telemetry, 15);

/**
 * @generated from message fleetd.v1.DeleteAlertRequest
 */
export type DeleteAlertRequest = Message<"fleetd.v1.DeleteAlertRequest"> & {
  /**
   * @generated from field: string alert_id = 1;
   */
  alertId: string;
};

/**
 * Describes the message fleetd.v1.DeleteAlertRequest.
 * Use `create(DeleteAlertRequestSchema)` to create a new message.
 */
export const DeleteAlertRequestSchema: GenMessage<DeleteAlertRequest> = /*@__PURE__*/
  messageDesc(file_fleetd_v1_telemetry, 16);

/**
 * @generated from message fleetd.v1.DeleteAlertResponse
 */
export type DeleteAlertResponse = Message<"fleetd.v1.DeleteAlertResponse"> & {
};

/**
 * Describes the message fleetd.v1.DeleteAlertResponse.
 * Use `create(DeleteAlertResponseSchema)` to create a new message.
 */
export const DeleteAlertResponseSchema: GenMessage<DeleteAlertResponse> = /*@__PURE__*/
  messageDesc(file_fleetd_v1_telemetry, 17);

/**
 * @generated from enum fleetd.v1.LogLevel
 */
export enum LogLevel {
  /**
   * @generated from enum value: LOG_LEVEL_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: LOG_LEVEL_DEBUG = 1;
   */
  DEBUG = 1,

  /**
   * @generated from enum value: LOG_LEVEL_INFO = 2;
   */
  INFO = 2,

  /**
   * @generated from enum value: LOG_LEVEL_WARN = 3;
   */
  WARN = 3,

  /**
   * @generated from enum value: LOG_LEVEL_ERROR = 4;
   */
  ERROR = 4,

  /**
   * @generated from enum value: LOG_LEVEL_FATAL = 5;
   */
  FATAL = 5,
}

/**
 * Describes the enum fleetd.v1.LogLevel.
 */
export const LogLevelSchema: GenEnum<LogLevel> = /*@__PURE__*/
  enumDesc(file_fleetd_v1_telemetry, 0);

/**
 * @generated from enum fleetd.v1.AlertType
 */
export enum AlertType {
  /**
   * @generated from enum value: ALERT_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: ALERT_TYPE_CPU = 1;
   */
  CPU = 1,

  /**
   * @generated from enum value: ALERT_TYPE_MEMORY = 2;
   */
  MEMORY = 2,

  /**
   * @generated from enum value: ALERT_TYPE_DISK = 3;
   */
  DISK = 3,

  /**
   * @generated from enum value: ALERT_TYPE_NETWORK = 4;
   */
  NETWORK = 4,

  /**
   * @generated from enum value: ALERT_TYPE_TEMPERATURE = 5;
   */
  TEMPERATURE = 5,

  /**
   * @generated from enum value: ALERT_TYPE_DEVICE_OFFLINE = 6;
   */
  DEVICE_OFFLINE = 6,

  /**
   * @generated from enum value: ALERT_TYPE_CUSTOM = 7;
   */
  CUSTOM = 7,
}

/**
 * Describes the enum fleetd.v1.AlertType.
 */
export const AlertTypeSchema: GenEnum<AlertType> = /*@__PURE__*/
  enumDesc(file_fleetd_v1_telemetry, 1);

/**
 * @generated from enum fleetd.v1.AlertCondition
 */
export enum AlertCondition {
  /**
   * @generated from enum value: ALERT_CONDITION_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: ALERT_CONDITION_GREATER_THAN = 1;
   */
  GREATER_THAN = 1,

  /**
   * @generated from enum value: ALERT_CONDITION_LESS_THAN = 2;
   */
  LESS_THAN = 2,

  /**
   * @generated from enum value: ALERT_CONDITION_EQUAL = 3;
   */
  EQUAL = 3,

  /**
   * @generated from enum value: ALERT_CONDITION_NOT_EQUAL = 4;
   */
  NOT_EQUAL = 4,
}

/**
 * Describes the enum fleetd.v1.AlertCondition.
 */
export const AlertConditionSchema: GenEnum<AlertCondition> = /*@__PURE__*/
  enumDesc(file_fleetd_v1_telemetry, 2);

/**
 * @generated from service fleetd.v1.TelemetryService
 */
export const TelemetryService: GenService<{
  /**
   * Get telemetry data for devices
   *
   * @generated from rpc fleetd.v1.TelemetryService.GetTelemetry
   */
  getTelemetry: {
    methodKind: "unary";
    input: typeof GetTelemetryRequestSchema;
    output: typeof GetTelemetryResponseSchema;
  },
  /**
   * Get aggregated metrics
   *
   * @generated from rpc fleetd.v1.TelemetryService.GetMetrics
   */
  getMetrics: {
    methodKind: "unary";
    input: typeof GetMetricsRequestSchema;
    output: typeof GetMetricsResponseSchema;
  },
  /**
   * Stream real-time telemetry data
   *
   * @generated from rpc fleetd.v1.TelemetryService.StreamTelemetry
   */
  streamTelemetry: {
    methodKind: "server_streaming";
    input: typeof StreamTelemetryRequestSchema;
    output: typeof TelemetryDataSchema;
  },
  /**
   * Get system logs
   *
   * @generated from rpc fleetd.v1.TelemetryService.GetLogs
   */
  getLogs: {
    methodKind: "unary";
    input: typeof GetLogsRequestSchema;
    output: typeof GetLogsResponseSchema;
  },
  /**
   * Stream real-time logs
   *
   * @generated from rpc fleetd.v1.TelemetryService.StreamLogs
   */
  streamLogs: {
    methodKind: "server_streaming";
    input: typeof StreamLogsRequestSchema;
    output: typeof TelemetryLogEntrySchema;
  },
  /**
   * Configure alerts
   *
   * @generated from rpc fleetd.v1.TelemetryService.ConfigureAlert
   */
  configureAlert: {
    methodKind: "unary";
    input: typeof ConfigureAlertRequestSchema;
    output: typeof ConfigureAlertResponseSchema;
  },
  /**
   * List configured alerts
   *
   * @generated from rpc fleetd.v1.TelemetryService.ListAlerts
   */
  listAlerts: {
    methodKind: "unary";
    input: typeof ListAlertsRequestSchema;
    output: typeof ListAlertsResponseSchema;
  },
  /**
   * Delete an alert
   *
   * @generated from rpc fleetd.v1.TelemetryService.DeleteAlert
   */
  deleteAlert: {
    methodKind: "unary";
    input: typeof DeleteAlertRequestSchema;
    output: typeof DeleteAlertResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_fleetd_v1_telemetry, 0);

