// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: proto/agent/v1/update.proto

package agentv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// UpdateType defines the type of update
type UpdateType int32

const (
	UpdateType_UPDATE_TYPE_UNSPECIFIED   UpdateType = 0
	UpdateType_UPDATE_TYPE_FIRMWARE      UpdateType = 1
	UpdateType_UPDATE_TYPE_SOFTWARE      UpdateType = 2
	UpdateType_UPDATE_TYPE_CONFIGURATION UpdateType = 3
	UpdateType_UPDATE_TYPE_PATCH         UpdateType = 4
)

// Enum value maps for UpdateType.
var (
	UpdateType_name = map[int32]string{
		0: "UPDATE_TYPE_UNSPECIFIED",
		1: "UPDATE_TYPE_FIRMWARE",
		2: "UPDATE_TYPE_SOFTWARE",
		3: "UPDATE_TYPE_CONFIGURATION",
		4: "UPDATE_TYPE_PATCH",
	}
	UpdateType_value = map[string]int32{
		"UPDATE_TYPE_UNSPECIFIED":   0,
		"UPDATE_TYPE_FIRMWARE":      1,
		"UPDATE_TYPE_SOFTWARE":      2,
		"UPDATE_TYPE_CONFIGURATION": 3,
		"UPDATE_TYPE_PATCH":         4,
	}
)

func (x UpdateType) Enum() *UpdateType {
	p := new(UpdateType)
	*p = x
	return p
}

func (x UpdateType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_agent_v1_update_proto_enumTypes[0].Descriptor()
}

func (UpdateType) Type() protoreflect.EnumType {
	return &file_proto_agent_v1_update_proto_enumTypes[0]
}

func (x UpdateType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateType.Descriptor instead.
func (UpdateType) EnumDescriptor() ([]byte, []int) {
	return file_proto_agent_v1_update_proto_rawDescGZIP(), []int{0}
}

// UpdateStatus represents update progress status
type UpdateStatus int32

const (
	UpdateStatus_UPDATE_STATUS_UNSPECIFIED UpdateStatus = 0
	UpdateStatus_UPDATE_STATUS_CHECKING    UpdateStatus = 1
	UpdateStatus_UPDATE_STATUS_DOWNLOADING UpdateStatus = 2
	UpdateStatus_UPDATE_STATUS_VERIFYING   UpdateStatus = 3
	UpdateStatus_UPDATE_STATUS_INSTALLING  UpdateStatus = 4
	UpdateStatus_UPDATE_STATUS_REBOOTING   UpdateStatus = 5
	UpdateStatus_UPDATE_STATUS_COMPLETED   UpdateStatus = 6
	UpdateStatus_UPDATE_STATUS_FAILED      UpdateStatus = 7
	UpdateStatus_UPDATE_STATUS_ROLLED_BACK UpdateStatus = 8
)

// Enum value maps for UpdateStatus.
var (
	UpdateStatus_name = map[int32]string{
		0: "UPDATE_STATUS_UNSPECIFIED",
		1: "UPDATE_STATUS_CHECKING",
		2: "UPDATE_STATUS_DOWNLOADING",
		3: "UPDATE_STATUS_VERIFYING",
		4: "UPDATE_STATUS_INSTALLING",
		5: "UPDATE_STATUS_REBOOTING",
		6: "UPDATE_STATUS_COMPLETED",
		7: "UPDATE_STATUS_FAILED",
		8: "UPDATE_STATUS_ROLLED_BACK",
	}
	UpdateStatus_value = map[string]int32{
		"UPDATE_STATUS_UNSPECIFIED": 0,
		"UPDATE_STATUS_CHECKING":    1,
		"UPDATE_STATUS_DOWNLOADING": 2,
		"UPDATE_STATUS_VERIFYING":   3,
		"UPDATE_STATUS_INSTALLING":  4,
		"UPDATE_STATUS_REBOOTING":   5,
		"UPDATE_STATUS_COMPLETED":   6,
		"UPDATE_STATUS_FAILED":      7,
		"UPDATE_STATUS_ROLLED_BACK": 8,
	}
)

func (x UpdateStatus) Enum() *UpdateStatus {
	p := new(UpdateStatus)
	*p = x
	return p
}

func (x UpdateStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_agent_v1_update_proto_enumTypes[1].Descriptor()
}

func (UpdateStatus) Type() protoreflect.EnumType {
	return &file_proto_agent_v1_update_proto_enumTypes[1]
}

func (x UpdateStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateStatus.Descriptor instead.
func (UpdateStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_agent_v1_update_proto_rawDescGZIP(), []int{1}
}

// CheckUpdateRequest checks for available updates
type CheckUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId         string            `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	CurrentVersion   string            `protobuf:"bytes,2,opt,name=current_version,json=currentVersion,proto3" json:"current_version,omitempty"`
	UpdateChannel    string            `protobuf:"bytes,3,opt,name=update_channel,json=updateChannel,proto3" json:"update_channel,omitempty"` // stable, beta, etc.
	DeviceAttributes map[string]string `protobuf:"bytes,4,rep,name=device_attributes,json=deviceAttributes,proto3" json:"device_attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CheckUpdateRequest) Reset() {
	*x = CheckUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_v1_update_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckUpdateRequest) ProtoMessage() {}

func (x *CheckUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_v1_update_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckUpdateRequest.ProtoReflect.Descriptor instead.
func (*CheckUpdateRequest) Descriptor() ([]byte, []int) {
	return file_proto_agent_v1_update_proto_rawDescGZIP(), []int{0}
}

func (x *CheckUpdateRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *CheckUpdateRequest) GetCurrentVersion() string {
	if x != nil {
		return x.CurrentVersion
	}
	return ""
}

func (x *CheckUpdateRequest) GetUpdateChannel() string {
	if x != nil {
		return x.UpdateChannel
	}
	return ""
}

func (x *CheckUpdateRequest) GetDeviceAttributes() map[string]string {
	if x != nil {
		return x.DeviceAttributes
	}
	return nil
}

// CheckUpdateResponse contains update availability
type CheckUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdateAvailable bool        `protobuf:"varint,1,opt,name=update_available,json=updateAvailable,proto3" json:"update_available,omitempty"`
	UpdateInfo      *UpdateInfo `protobuf:"bytes,2,opt,name=update_info,json=updateInfo,proto3" json:"update_info,omitempty"`
}

func (x *CheckUpdateResponse) Reset() {
	*x = CheckUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_v1_update_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckUpdateResponse) ProtoMessage() {}

func (x *CheckUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_v1_update_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckUpdateResponse.ProtoReflect.Descriptor instead.
func (*CheckUpdateResponse) Descriptor() ([]byte, []int) {
	return file_proto_agent_v1_update_proto_rawDescGZIP(), []int{1}
}

func (x *CheckUpdateResponse) GetUpdateAvailable() bool {
	if x != nil {
		return x.UpdateAvailable
	}
	return false
}

func (x *CheckUpdateResponse) GetUpdateInfo() *UpdateInfo {
	if x != nil {
		return x.UpdateInfo
	}
	return nil
}

// DownloadUpdateRequest initiates update download
type DownloadUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId  string `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	UpdateId  string `protobuf:"bytes,2,opt,name=update_id,json=updateId,proto3" json:"update_id,omitempty"`
	ChunkSize int32  `protobuf:"varint,3,opt,name=chunk_size,json=chunkSize,proto3" json:"chunk_size,omitempty"` // Preferred chunk size in bytes
}

func (x *DownloadUpdateRequest) Reset() {
	*x = DownloadUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_v1_update_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadUpdateRequest) ProtoMessage() {}

func (x *DownloadUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_v1_update_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadUpdateRequest.ProtoReflect.Descriptor instead.
func (*DownloadUpdateRequest) Descriptor() ([]byte, []int) {
	return file_proto_agent_v1_update_proto_rawDescGZIP(), []int{2}
}

func (x *DownloadUpdateRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *DownloadUpdateRequest) GetUpdateId() string {
	if x != nil {
		return x.UpdateId
	}
	return ""
}

func (x *DownloadUpdateRequest) GetChunkSize() int32 {
	if x != nil {
		return x.ChunkSize
	}
	return 0
}

// DownloadUpdateResponse streams update chunks
type DownloadUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//
	//	*DownloadUpdateResponse_Metadata
	//	*DownloadUpdateResponse_Chunk
	Data isDownloadUpdateResponse_Data `protobuf_oneof:"data"`
}

func (x *DownloadUpdateResponse) Reset() {
	*x = DownloadUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_v1_update_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadUpdateResponse) ProtoMessage() {}

func (x *DownloadUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_v1_update_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadUpdateResponse.ProtoReflect.Descriptor instead.
func (*DownloadUpdateResponse) Descriptor() ([]byte, []int) {
	return file_proto_agent_v1_update_proto_rawDescGZIP(), []int{3}
}

func (m *DownloadUpdateResponse) GetData() isDownloadUpdateResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *DownloadUpdateResponse) GetMetadata() *UpdateMetadata {
	if x, ok := x.GetData().(*DownloadUpdateResponse_Metadata); ok {
		return x.Metadata
	}
	return nil
}

func (x *DownloadUpdateResponse) GetChunk() []byte {
	if x, ok := x.GetData().(*DownloadUpdateResponse_Chunk); ok {
		return x.Chunk
	}
	return nil
}

type isDownloadUpdateResponse_Data interface {
	isDownloadUpdateResponse_Data()
}

type DownloadUpdateResponse_Metadata struct {
	Metadata *UpdateMetadata `protobuf:"bytes,1,opt,name=metadata,proto3,oneof"`
}

type DownloadUpdateResponse_Chunk struct {
	Chunk []byte `protobuf:"bytes,2,opt,name=chunk,proto3,oneof"`
}

func (*DownloadUpdateResponse_Metadata) isDownloadUpdateResponse_Data() {}

func (*DownloadUpdateResponse_Chunk) isDownloadUpdateResponse_Data() {}

// ReportProgressRequest reports update progress
type ReportProgressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId        string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	UpdateId        string                 `protobuf:"bytes,2,opt,name=update_id,json=updateId,proto3" json:"update_id,omitempty"`
	Status          UpdateStatus           `protobuf:"varint,3,opt,name=status,proto3,enum=fleetd.agent.v1.UpdateStatus" json:"status,omitempty"`
	ProgressPercent int32                  `protobuf:"varint,4,opt,name=progress_percent,json=progressPercent,proto3" json:"progress_percent,omitempty"`
	Message         string                 `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	Timestamp       *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *ReportProgressRequest) Reset() {
	*x = ReportProgressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_v1_update_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportProgressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportProgressRequest) ProtoMessage() {}

func (x *ReportProgressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_v1_update_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportProgressRequest.ProtoReflect.Descriptor instead.
func (*ReportProgressRequest) Descriptor() ([]byte, []int) {
	return file_proto_agent_v1_update_proto_rawDescGZIP(), []int{4}
}

func (x *ReportProgressRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *ReportProgressRequest) GetUpdateId() string {
	if x != nil {
		return x.UpdateId
	}
	return ""
}

func (x *ReportProgressRequest) GetStatus() UpdateStatus {
	if x != nil {
		return x.Status
	}
	return UpdateStatus_UPDATE_STATUS_UNSPECIFIED
}

func (x *ReportProgressRequest) GetProgressPercent() int32 {
	if x != nil {
		return x.ProgressPercent
	}
	return 0
}

func (x *ReportProgressRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ReportProgressRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// ReportProgressResponse acknowledges progress report
type ReportProgressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Acknowledged bool `protobuf:"varint,1,opt,name=acknowledged,proto3" json:"acknowledged,omitempty"`
}

func (x *ReportProgressResponse) Reset() {
	*x = ReportProgressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_v1_update_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportProgressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportProgressResponse) ProtoMessage() {}

func (x *ReportProgressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_v1_update_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportProgressResponse.ProtoReflect.Descriptor instead.
func (*ReportProgressResponse) Descriptor() ([]byte, []int) {
	return file_proto_agent_v1_update_proto_rawDescGZIP(), []int{5}
}

func (x *ReportProgressResponse) GetAcknowledged() bool {
	if x != nil {
		return x.Acknowledged
	}
	return false
}

// ConfirmUpdateRequest confirms successful update
type ConfirmUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId    string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	UpdateId    string                 `protobuf:"bytes,2,opt,name=update_id,json=updateId,proto3" json:"update_id,omitempty"`
	NewVersion  string                 `protobuf:"bytes,3,opt,name=new_version,json=newVersion,proto3" json:"new_version,omitempty"`
	CompletedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
}

func (x *ConfirmUpdateRequest) Reset() {
	*x = ConfirmUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_v1_update_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfirmUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmUpdateRequest) ProtoMessage() {}

func (x *ConfirmUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_v1_update_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmUpdateRequest.ProtoReflect.Descriptor instead.
func (*ConfirmUpdateRequest) Descriptor() ([]byte, []int) {
	return file_proto_agent_v1_update_proto_rawDescGZIP(), []int{6}
}

func (x *ConfirmUpdateRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *ConfirmUpdateRequest) GetUpdateId() string {
	if x != nil {
		return x.UpdateId
	}
	return ""
}

func (x *ConfirmUpdateRequest) GetNewVersion() string {
	if x != nil {
		return x.NewVersion
	}
	return ""
}

func (x *ConfirmUpdateRequest) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

// ConfirmUpdateResponse acknowledges confirmation
type ConfirmUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Acknowledged bool `protobuf:"varint,1,opt,name=acknowledged,proto3" json:"acknowledged,omitempty"`
}

func (x *ConfirmUpdateResponse) Reset() {
	*x = ConfirmUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_v1_update_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfirmUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmUpdateResponse) ProtoMessage() {}

func (x *ConfirmUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_v1_update_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmUpdateResponse.ProtoReflect.Descriptor instead.
func (*ConfirmUpdateResponse) Descriptor() ([]byte, []int) {
	return file_proto_agent_v1_update_proto_rawDescGZIP(), []int{7}
}

func (x *ConfirmUpdateResponse) GetAcknowledged() bool {
	if x != nil {
		return x.Acknowledged
	}
	return false
}

// RollbackUpdateRequest requests update rollback
type RollbackUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId        string `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	UpdateId        string `protobuf:"bytes,2,opt,name=update_id,json=updateId,proto3" json:"update_id,omitempty"`
	Reason          string `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	PreviousVersion string `protobuf:"bytes,4,opt,name=previous_version,json=previousVersion,proto3" json:"previous_version,omitempty"`
}

func (x *RollbackUpdateRequest) Reset() {
	*x = RollbackUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_v1_update_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RollbackUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollbackUpdateRequest) ProtoMessage() {}

func (x *RollbackUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_v1_update_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollbackUpdateRequest.ProtoReflect.Descriptor instead.
func (*RollbackUpdateRequest) Descriptor() ([]byte, []int) {
	return file_proto_agent_v1_update_proto_rawDescGZIP(), []int{8}
}

func (x *RollbackUpdateRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *RollbackUpdateRequest) GetUpdateId() string {
	if x != nil {
		return x.UpdateId
	}
	return ""
}

func (x *RollbackUpdateRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *RollbackUpdateRequest) GetPreviousVersion() string {
	if x != nil {
		return x.PreviousVersion
	}
	return ""
}

// RollbackUpdateResponse confirms rollback
type RollbackUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *RollbackUpdateResponse) Reset() {
	*x = RollbackUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_v1_update_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RollbackUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollbackUpdateResponse) ProtoMessage() {}

func (x *RollbackUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_v1_update_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollbackUpdateResponse.ProtoReflect.Descriptor instead.
func (*RollbackUpdateResponse) Descriptor() ([]byte, []int) {
	return file_proto_agent_v1_update_proto_rawDescGZIP(), []int{9}
}

func (x *RollbackUpdateResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RollbackUpdateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// UpdateInfo contains update details
type UpdateInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdateId     string                 `protobuf:"bytes,1,opt,name=update_id,json=updateId,proto3" json:"update_id,omitempty"`
	Version      string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Description  string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	SizeBytes    int64                  `protobuf:"varint,4,opt,name=size_bytes,json=sizeBytes,proto3" json:"size_bytes,omitempty"`
	Checksum     string                 `protobuf:"bytes,5,opt,name=checksum,proto3" json:"checksum,omitempty"`
	ChecksumType string                 `protobuf:"bytes,6,opt,name=checksum_type,json=checksumType,proto3" json:"checksum_type,omitempty"` // sha256, md5, etc.
	Type         UpdateType             `protobuf:"varint,7,opt,name=type,proto3,enum=fleetd.agent.v1.UpdateType" json:"type,omitempty"`
	Mandatory    bool                   `protobuf:"varint,8,opt,name=mandatory,proto3" json:"mandatory,omitempty"`
	ReleasedAt   *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=released_at,json=releasedAt,proto3" json:"released_at,omitempty"`
	Metadata     map[string]string      `protobuf:"bytes,10,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *UpdateInfo) Reset() {
	*x = UpdateInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_v1_update_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInfo) ProtoMessage() {}

func (x *UpdateInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_v1_update_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInfo.ProtoReflect.Descriptor instead.
func (*UpdateInfo) Descriptor() ([]byte, []int) {
	return file_proto_agent_v1_update_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateInfo) GetUpdateId() string {
	if x != nil {
		return x.UpdateId
	}
	return ""
}

func (x *UpdateInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *UpdateInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateInfo) GetSizeBytes() int64 {
	if x != nil {
		return x.SizeBytes
	}
	return 0
}

func (x *UpdateInfo) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

func (x *UpdateInfo) GetChecksumType() string {
	if x != nil {
		return x.ChecksumType
	}
	return ""
}

func (x *UpdateInfo) GetType() UpdateType {
	if x != nil {
		return x.Type
	}
	return UpdateType_UPDATE_TYPE_UNSPECIFIED
}

func (x *UpdateInfo) GetMandatory() bool {
	if x != nil {
		return x.Mandatory
	}
	return false
}

func (x *UpdateInfo) GetReleasedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ReleasedAt
	}
	return nil
}

func (x *UpdateInfo) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// UpdateMetadata sent before update chunks
type UpdateMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdateId  string `protobuf:"bytes,1,opt,name=update_id,json=updateId,proto3" json:"update_id,omitempty"`
	Version   string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	TotalSize int64  `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	Checksum  string `protobuf:"bytes,4,opt,name=checksum,proto3" json:"checksum,omitempty"`
	Signature string `protobuf:"bytes,5,opt,name=signature,proto3" json:"signature,omitempty"` // Digital signature for verification
}

func (x *UpdateMetadata) Reset() {
	*x = UpdateMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_v1_update_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMetadata) ProtoMessage() {}

func (x *UpdateMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_v1_update_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMetadata.ProtoReflect.Descriptor instead.
func (*UpdateMetadata) Descriptor() ([]byte, []int) {
	return file_proto_agent_v1_update_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateMetadata) GetUpdateId() string {
	if x != nil {
		return x.UpdateId
	}
	return ""
}

func (x *UpdateMetadata) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *UpdateMetadata) GetTotalSize() int64 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *UpdateMetadata) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

func (x *UpdateMetadata) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

var File_proto_agent_v1_update_proto protoreflect.FileDescriptor

var file_proto_agent_v1_update_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31,
	0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x66,
	0x6c, 0x65, 0x65, 0x74, 0x64, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xae, 0x02, 0x0a, 0x12, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x12, 0x66, 0x0a, 0x11, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39,
	0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x64, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x10, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x1a, 0x43, 0x0a, 0x15, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x7e, 0x0a, 0x13, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x64,
	0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x70, 0x0a, 0x15, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x53, 0x69,
	0x7a, 0x65, 0x22, 0x77, 0x0a, 0x16, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x64, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x48,
	0x00, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x05, 0x63,
	0x68, 0x75, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x05, 0x63, 0x68,
	0x75, 0x6e, 0x6b, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x87, 0x02, 0x0a, 0x15,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12,
	0x35, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1d, 0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x64, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x3c, 0x0a, 0x16, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x61, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x61, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x64, 0x22, 0xb0, 0x01, 0x0a, 0x14, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x65, 0x77,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x3b, 0x0a, 0x15, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72,
	0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x61, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x61, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x64, 0x22, 0x94, 0x01, 0x0a, 0x15, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12,
	0x29, 0x0a, 0x10, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x65, 0x76, 0x69,
	0x6f, 0x75, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x4c, 0x0a, 0x16, 0x52, 0x6f,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xd5, 0x03, 0x0a, 0x0a, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x69, 0x7a, 0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x12, 0x23, 0x0a, 0x0d, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x2f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b,
	0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x64, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x6e, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6d, 0x61, 0x6e, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x12,
	0x3b, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0a, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x41, 0x74, 0x12, 0x45, 0x0a, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x64, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0xa0, 0x01, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x73, 0x75, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x2a, 0x93, 0x01, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x18, 0x0a, 0x14, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46,
	0x49, 0x52, 0x4d, 0x57, 0x41, 0x52, 0x45, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x55, 0x50, 0x44,
	0x41, 0x54, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x4f, 0x46, 0x54, 0x57, 0x41, 0x52,
	0x45, 0x10, 0x02, 0x12, 0x1d, 0x0a, 0x19, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x55, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x50, 0x41, 0x54, 0x43, 0x48, 0x10, 0x04, 0x2a, 0x96, 0x02, 0x0a, 0x0c, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x19, 0x55, 0x50,
	0x44, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x55, 0x50, 0x44,
	0x41, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x48, 0x45, 0x43, 0x4b,
	0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x4c, 0x4f, 0x41, 0x44, 0x49,
	0x4e, 0x47, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x56, 0x45, 0x52, 0x49, 0x46, 0x59, 0x49, 0x4e, 0x47, 0x10,
	0x03, 0x12, 0x1c, 0x0a, 0x18, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4c, 0x4c, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x12,
	0x1b, 0x0a, 0x17, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x52, 0x45, 0x42, 0x4f, 0x4f, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x05, 0x12, 0x1b, 0x0a, 0x17,
	0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x4f,
	0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x06, 0x12, 0x18, 0x0a, 0x14, 0x55, 0x50, 0x44,
	0x41, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45,
	0x44, 0x10, 0x07, 0x12, 0x1d, 0x0a, 0x19, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x4f, 0x4c, 0x4c, 0x45, 0x44, 0x5f, 0x42, 0x41, 0x43, 0x4b,
	0x10, 0x08, 0x32, 0xf4, 0x03, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x58, 0x0a, 0x0b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x23, 0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x64, 0x2e, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74,
	0x64, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63,
	0x0a, 0x0e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x26, 0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x64, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74,
	0x64, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x30, 0x01, 0x12, 0x61, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x26, 0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x64, 0x2e, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e,
	0x66, 0x6c, 0x65, 0x65, 0x74, 0x64, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72,
	0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x25, 0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x64,
	0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72,
	0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26,
	0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x64, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x0e, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x26, 0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74,
	0x64, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x27, 0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x64, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0xa6, 0x01, 0x0a, 0x13, 0x63, 0x6f,
	0x6d, 0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x64, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x42, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x24, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x64, 0x2e, 0x73, 0x68, 0x2f, 0x67, 0x65, 0x6e, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x3b, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x46, 0x41, 0x58, 0xaa, 0x02, 0x0f, 0x46,
	0x6c, 0x65, 0x65, 0x74, 0x64, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x56, 0x31, 0xca, 0x02,
	0x0f, 0x46, 0x6c, 0x65, 0x65, 0x74, 0x64, 0x5c, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x5c, 0x56, 0x31,
	0xe2, 0x02, 0x1b, 0x46, 0x6c, 0x65, 0x65, 0x74, 0x64, 0x5c, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x5c,
	0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,
	0x11, 0x46, 0x6c, 0x65, 0x65, 0x74, 0x64, 0x3a, 0x3a, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x3a, 0x3a,
	0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_agent_v1_update_proto_rawDescOnce sync.Once
	file_proto_agent_v1_update_proto_rawDescData = file_proto_agent_v1_update_proto_rawDesc
)

func file_proto_agent_v1_update_proto_rawDescGZIP() []byte {
	file_proto_agent_v1_update_proto_rawDescOnce.Do(func() {
		file_proto_agent_v1_update_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_agent_v1_update_proto_rawDescData)
	})
	return file_proto_agent_v1_update_proto_rawDescData
}

var file_proto_agent_v1_update_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_agent_v1_update_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_proto_agent_v1_update_proto_goTypes = []interface{}{
	(UpdateType)(0),                // 0: fleetd.agent.v1.UpdateType
	(UpdateStatus)(0),              // 1: fleetd.agent.v1.UpdateStatus
	(*CheckUpdateRequest)(nil),     // 2: fleetd.agent.v1.CheckUpdateRequest
	(*CheckUpdateResponse)(nil),    // 3: fleetd.agent.v1.CheckUpdateResponse
	(*DownloadUpdateRequest)(nil),  // 4: fleetd.agent.v1.DownloadUpdateRequest
	(*DownloadUpdateResponse)(nil), // 5: fleetd.agent.v1.DownloadUpdateResponse
	(*ReportProgressRequest)(nil),  // 6: fleetd.agent.v1.ReportProgressRequest
	(*ReportProgressResponse)(nil), // 7: fleetd.agent.v1.ReportProgressResponse
	(*ConfirmUpdateRequest)(nil),   // 8: fleetd.agent.v1.ConfirmUpdateRequest
	(*ConfirmUpdateResponse)(nil),  // 9: fleetd.agent.v1.ConfirmUpdateResponse
	(*RollbackUpdateRequest)(nil),  // 10: fleetd.agent.v1.RollbackUpdateRequest
	(*RollbackUpdateResponse)(nil), // 11: fleetd.agent.v1.RollbackUpdateResponse
	(*UpdateInfo)(nil),             // 12: fleetd.agent.v1.UpdateInfo
	(*UpdateMetadata)(nil),         // 13: fleetd.agent.v1.UpdateMetadata
	nil,                            // 14: fleetd.agent.v1.CheckUpdateRequest.DeviceAttributesEntry
	nil,                            // 15: fleetd.agent.v1.UpdateInfo.MetadataEntry
	(*timestamppb.Timestamp)(nil),  // 16: google.protobuf.Timestamp
}
var file_proto_agent_v1_update_proto_depIdxs = []int32{
	14, // 0: fleetd.agent.v1.CheckUpdateRequest.device_attributes:type_name -> fleetd.agent.v1.CheckUpdateRequest.DeviceAttributesEntry
	12, // 1: fleetd.agent.v1.CheckUpdateResponse.update_info:type_name -> fleetd.agent.v1.UpdateInfo
	13, // 2: fleetd.agent.v1.DownloadUpdateResponse.metadata:type_name -> fleetd.agent.v1.UpdateMetadata
	1,  // 3: fleetd.agent.v1.ReportProgressRequest.status:type_name -> fleetd.agent.v1.UpdateStatus
	16, // 4: fleetd.agent.v1.ReportProgressRequest.timestamp:type_name -> google.protobuf.Timestamp
	16, // 5: fleetd.agent.v1.ConfirmUpdateRequest.completed_at:type_name -> google.protobuf.Timestamp
	0,  // 6: fleetd.agent.v1.UpdateInfo.type:type_name -> fleetd.agent.v1.UpdateType
	16, // 7: fleetd.agent.v1.UpdateInfo.released_at:type_name -> google.protobuf.Timestamp
	15, // 8: fleetd.agent.v1.UpdateInfo.metadata:type_name -> fleetd.agent.v1.UpdateInfo.MetadataEntry
	2,  // 9: fleetd.agent.v1.UpdateService.CheckUpdate:input_type -> fleetd.agent.v1.CheckUpdateRequest
	4,  // 10: fleetd.agent.v1.UpdateService.DownloadUpdate:input_type -> fleetd.agent.v1.DownloadUpdateRequest
	6,  // 11: fleetd.agent.v1.UpdateService.ReportProgress:input_type -> fleetd.agent.v1.ReportProgressRequest
	8,  // 12: fleetd.agent.v1.UpdateService.ConfirmUpdate:input_type -> fleetd.agent.v1.ConfirmUpdateRequest
	10, // 13: fleetd.agent.v1.UpdateService.RollbackUpdate:input_type -> fleetd.agent.v1.RollbackUpdateRequest
	3,  // 14: fleetd.agent.v1.UpdateService.CheckUpdate:output_type -> fleetd.agent.v1.CheckUpdateResponse
	5,  // 15: fleetd.agent.v1.UpdateService.DownloadUpdate:output_type -> fleetd.agent.v1.DownloadUpdateResponse
	7,  // 16: fleetd.agent.v1.UpdateService.ReportProgress:output_type -> fleetd.agent.v1.ReportProgressResponse
	9,  // 17: fleetd.agent.v1.UpdateService.ConfirmUpdate:output_type -> fleetd.agent.v1.ConfirmUpdateResponse
	11, // 18: fleetd.agent.v1.UpdateService.RollbackUpdate:output_type -> fleetd.agent.v1.RollbackUpdateResponse
	14, // [14:19] is the sub-list for method output_type
	9,  // [9:14] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_proto_agent_v1_update_proto_init() }
func file_proto_agent_v1_update_proto_init() {
	if File_proto_agent_v1_update_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_agent_v1_update_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_v1_update_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_v1_update_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_v1_update_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_v1_update_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportProgressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_v1_update_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportProgressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_v1_update_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfirmUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_v1_update_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfirmUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_v1_update_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RollbackUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_v1_update_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RollbackUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_v1_update_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_v1_update_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_agent_v1_update_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*DownloadUpdateResponse_Metadata)(nil),
		(*DownloadUpdateResponse_Chunk)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_agent_v1_update_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_agent_v1_update_proto_goTypes,
		DependencyIndexes: file_proto_agent_v1_update_proto_depIdxs,
		EnumInfos:         file_proto_agent_v1_update_proto_enumTypes,
		MessageInfos:      file_proto_agent_v1_update_proto_msgTypes,
	}.Build()
	File_proto_agent_v1_update_proto = out.File
	file_proto_agent_v1_update_proto_rawDesc = nil
	file_proto_agent_v1_update_proto_goTypes = nil
	file_proto_agent_v1_update_proto_depIdxs = nil
}
