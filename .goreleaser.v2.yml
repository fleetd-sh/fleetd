version: 2

project_name: fleetd

before:
  hooks:
    - go mod tidy

builds:
  - id: fleetctl
    main: ./cmd/fleetctl
    binary: fleetctl
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
      - arm
    goarm:
      - "7"
    ignore:
      - goos: windows
        goarch: arm64
      - goos: windows
        goarch: arm
    ldflags:
      - -s -w
      - -X fleetd.sh/internal/version.Version={{.Version}}
      - -X fleetd.sh/internal/version.CommitSHA={{.Commit}}
      - -X fleetd.sh/internal/version.BuildTime={{.Date}}

  - id: device-api
    main: ./cmd/device-api
    binary: device-api
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
    goarch:
      - amd64
      - arm64
    ldflags:
      - -s -w
      - -X fleetd.sh/internal/version.Version={{.Version}}
      - -X fleetd.sh/internal/version.CommitSHA={{.Commit}}
      - -X fleetd.sh/internal/version.BuildTime={{.Date}}

  - id: platform-api
    main: ./cmd/platform-api
    binary: platform-api
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
    goarch:
      - amd64
      - arm64
    ldflags:
      - -s -w
      - -X fleetd.sh/internal/version.Version={{.Version}}
      - -X fleetd.sh/internal/version.CommitSHA={{.Commit}}
      - -X fleetd.sh/internal/version.BuildTime={{.Date}}

archives:
  - id: fleetctl
    builds:
      - fleetctl
    name_template: "fleetctl_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}"
    format_overrides:
      - goos: windows
        format: zip
    files:
      - LICENSE
      - README.md
      - QUICK_START.md
      - src: config.toml.example
        dst: config.toml.example

  - id: servers
    builds:
      - device-api
      - platform-api
    name_template: "fleetd-servers_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
    files:
      - LICENSE
      - README.md
      - src: config.toml.example
        dst: config.toml.example
      - src: deployments/docker-compose.yml
        dst: docker-compose.yml

checksum:
  name_template: 'checksums.txt'

snapshot:
  version_template: "{{ incpatch .Version }}-dev"

changelog:
  sort: asc
  use: github
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - '^chore:'
      - Merge pull request
      - Merge branch
  groups:
    - title: 'üöÄ New Features'
      regexp: '^.*?feat(\([[:word:]]+\))??!?:.+$'
      order: 0
    - title: 'üêõ Bug Fixes'
      regexp: '^.*?fix(\([[:word:]]+\))??!?:.+$'
      order: 1
    - title: '‚ö° Performance'
      regexp: '^.*?perf(\([[:word:]]+\))??!?:.+$'
      order: 2
    - title: 'üîí Security'
      regexp: '^.*?sec(\([[:word:]]+\))??!?:.+$'
      order: 3
    - title: Other Changes
      order: 999

release:
  github:
    owner: fleetd-sh
    name: fleetd
  draft: false
  prerelease: auto
  mode: keep-existing
  name_template: "v{{.Version}}"
  header: |
    ## FleetD {{.Version}}

    Self-hosted edge device fleet management platform with automatic TLS, OTA updates, and comprehensive monitoring.

  footer: |
    ## Installation

    ### Quick Start
    ```bash
    curl -sSL https://get.fleetd.sh | bash
    ```

    ### Binary Installation
    Download the appropriate binary for your platform from the assets below.

    ### Docker
    ```bash
    docker pull ghcr.io/fleetd-sh/platform-api:{{.Version}}
    docker pull ghcr.io/fleetd-sh/device-api:{{.Version}}
    ```

    ### Documentation
    - [Getting Started](https://github.com/fleetd-sh/fleetd/wiki/getting_started)
    - [TLS Configuration](https://github.com/fleetd-sh/fleetd/wiki/tls_configuration)
    - [API Reference](https://github.com/fleetd-sh/fleetd/wiki/api_reference)

    **Full Changelog**: https://github.com/fleetd-sh/fleetd/compare/{{.PreviousTag}}...{{.Tag}}

dockers:
  - id: device-api
    ids:
      - device-api
    image_templates:
      - "ghcr.io/fleetd-sh/device-api:{{ .Tag }}"
      - "ghcr.io/fleetd-sh/device-api:{{ .Major }}.{{ .Minor }}"
      - "ghcr.io/fleetd-sh/device-api:latest"
    dockerfile: Dockerfile.device-api
    use: buildx
    build_flag_templates:
      - "--platform=linux/amd64,linux/arm64"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title=fleetd-device-api"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source=https://github.com/fleetd-sh/fleetd"
      - "--label=org.opencontainers.image.description=FleetD Device API - Edge device communication endpoint"

  - id: platform-api
    ids:
      - platform-api
    image_templates:
      - "ghcr.io/fleetd-sh/platform-api:{{ .Tag }}"
      - "ghcr.io/fleetd-sh/platform-api:{{ .Major }}.{{ .Minor }}"
      - "ghcr.io/fleetd-sh/platform-api:latest"
    dockerfile: Dockerfile.platform-api
    use: buildx
    build_flag_templates:
      - "--platform=linux/amd64,linux/arm64"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title=fleetd-platform-api"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source=https://github.com/fleetd-sh/fleetd"
      - "--label=org.opencontainers.image.description=FleetD Platform API - Fleet management control plane"

nfpms:
  - id: fleetctl
    package_name: fleetctl
    builds:
      - fleetctl
    vendor: FleetD
    homepage: https://fleetd.sh
    maintainer: FleetD Maintainers <maintainers@fleetd.sh>
    description: Fleet management CLI tool for edge device orchestration
    license: MIT
    formats:
      - deb
      - rpm
      - apk
    dependencies:
      - ca-certificates
    section: utils
    priority: optional
    contents:
      - src: LICENSE
        dst: /usr/share/doc/fleetctl/LICENSE
      - src: README.md
        dst: /usr/share/doc/fleetctl/README.md
      - src: config.toml.example
        dst: /etc/fleetd/config.toml.example
        type: config
    scripts:
      postinstall: |
        #!/bin/sh
        echo "FleetCTL installed successfully!"
        echo "Run 'fleetctl --help' to get started"
        echo ""
        echo "Quick start:"
        echo "  fleetctl init        # Initialize FleetD"
        echo "  fleetctl start       # Start all services"
        echo "  fleetctl status      # Check service status"

sboms:
  - id: source
    artifacts: source
  - id: binary
    artifacts: binary
  - id: archive
    artifacts: archive

signs:
  - cmd: cosign
    env:
      - COSIGN_EXPERIMENTAL=1
    certificate: '${artifact}.pem'
    signature: '${artifact}.sig'
    args:
      - sign-blob
      - '--output-certificate=${certificate}'
      - '--output-signature=${signature}'
      - '${artifact}'
      - '--yes'
    artifacts: all
    output: true

announce:
  discord:
    enabled: true
    message_template: |
      **FleetD {{ .Tag }} Released!** üöÄ

      {{ .ProjectName }} {{ .Tag }} is now available!

      **Highlights:**
      ‚Ä¢ Automatic TLS with Let's Encrypt
      ‚Ä¢ OTA updates with rollback
      ‚Ä¢ Real-time health monitoring
      ‚Ä¢ Multi-architecture support

      **Downloads:** {{ .ReleaseURL }}
      **Documentation:** https://github.com/fleetd-sh/fleetd/wiki