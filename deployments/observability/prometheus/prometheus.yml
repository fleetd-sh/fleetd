global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    monitor: 'fleetd-monitor'
    environment: 'production'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
            - alertmanager:9093

# Load rules once and periodically evaluate them
rule_files:
  - "alert-rules.yml"

scrape_configs:
  # FleetD Platform API metrics
  - job_name: 'fleetd-platform-api'
    static_configs:
      - targets: ['platform-api:9091']
        labels:
          service: 'platform-api'
          component: 'api'
    metrics_path: /metrics
    scrape_interval: 10s

  # FleetD Device API metrics
  - job_name: 'fleetd-device-api'
    static_configs:
      - targets: ['device-api:9092']
        labels:
          service: 'device-api'
          component: 'api'
    metrics_path: /metrics
    scrape_interval: 10s

  # FleetD Agent metrics (service discovery would be used in production)
  - job_name: 'fleetd-agent'
    static_configs:
      - targets: ['agent:9093']
        labels:
          service: 'fleetd-agent'
          component: 'agent'
    metrics_path: /metrics
    scrape_interval: 30s

  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
        labels:
          service: 'prometheus'
          component: 'monitoring'

  # Node Exporter for system metrics
  - job_name: 'node'
    static_configs:
      - targets: ['node-exporter:9100']
        labels:
          service: 'node-exporter'
          component: 'system'

  # PostgreSQL Exporter
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
        labels:
          service: 'postgres'
          component: 'database'

  # Grafana metrics
  - job_name: 'grafana'
    static_configs:
      - targets: ['grafana:3000']
        labels:
          service: 'grafana'
          component: 'visualization'

  # Loki metrics
  - job_name: 'loki'
    static_configs:
      - targets: ['loki:3100']
        labels:
          service: 'loki'
          component: 'logs'

  # Jaeger metrics
  - job_name: 'jaeger'
    static_configs:
      - targets: ['jaeger:14269']
        labels:
          service: 'jaeger'
          component: 'tracing'

  # OpenTelemetry Collector metrics
  - job_name: 'otel-collector'
    static_configs:
      - targets: ['otel-collector:8888']
        labels:
          service: 'otel-collector'
          component: 'telemetry'

  # Service discovery for FleetD agents (example configuration)
  # In production, use Consul, Kubernetes, or DNS service discovery
  - job_name: 'fleetd-agents-sd'
    consul_sd_configs:
      - server: 'consul:8500'
        services: ['fleetd-agent']
    relabel_configs:
      - source_labels: [__meta_consul_service]
        target_label: service
      - source_labels: [__meta_consul_node]
        target_label: node
      - source_labels: [__meta_consul_tags]
        target_label: tags