# Platform API Deployment
apiVersion: v1
kind: Service
metadata:
  name: platform-api
  namespace: fleetd
  labels:
    app: platform-api
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: 8080
      name: http
  selector:
    app: platform-api
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: platform-api
  namespace: fleetd
  labels:
    app: platform-api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: platform-api
  template:
    metadata:
      labels:
        app: platform-api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: default
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
        - name: platform-api
          # Replace with your registry
          image: ghcr.io/fleetd-sh/platform-api:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: fleetd-secrets
                  key: database-url
            - name: VALKEY_URL
              valueFrom:
                secretKeyRef:
                  name: fleetd-secrets
                  key: valkey-url
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: fleetd-secrets
                  key: jwt-secret
            - name: SERVER_PORT
              value: "8080"
            - name: SERVER_HOST
              value: "0.0.0.0"
            - name: LOG_LEVEL
              value: "info"
            - name: METRICS_ENABLED
              value: "true"
            - name: RATE_LIMIT_ENABLED
              value: "true"
            - name: RATE_LIMIT_RPS
              value: "100"
            - name: CORS_ORIGINS
              value: "https://fleet.yourdomain.com"
            - name: TLS_MODE
              value: "self-signed"  # Change to "auto" for Let's Encrypt
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          resources:
            requests:
              cpu: 250m
              memory: 256Mi
            limits:
              cpu: 1000m
              memory: 1Gi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          volumeMounts:
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: tmp
          emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - platform-api
                topologyKey: kubernetes.io/hostname