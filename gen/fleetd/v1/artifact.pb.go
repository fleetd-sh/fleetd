// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: fleetd/v1/artifact.proto

package fleetpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Artifact types
type ArtifactType int32

const (
	ArtifactType_ARTIFACT_TYPE_UNSPECIFIED ArtifactType = 0
	ArtifactType_ARTIFACT_TYPE_BINARY      ArtifactType = 1 // Standalone executable
	ArtifactType_ARTIFACT_TYPE_OCI_IMAGE   ArtifactType = 2 // Docker/Podman container
	ArtifactType_ARTIFACT_TYPE_ARCHIVE     ArtifactType = 3 // tar.gz, zip
	ArtifactType_ARTIFACT_TYPE_PACKAGE     ArtifactType = 4 // deb, rpm, apk
	ArtifactType_ARTIFACT_TYPE_NIXPACK     ArtifactType = 5 // Nix package
	ArtifactType_ARTIFACT_TYPE_SCRIPT      ArtifactType = 6 // Shell/Python script
)

// Enum value maps for ArtifactType.
var (
	ArtifactType_name = map[int32]string{
		0: "ARTIFACT_TYPE_UNSPECIFIED",
		1: "ARTIFACT_TYPE_BINARY",
		2: "ARTIFACT_TYPE_OCI_IMAGE",
		3: "ARTIFACT_TYPE_ARCHIVE",
		4: "ARTIFACT_TYPE_PACKAGE",
		5: "ARTIFACT_TYPE_NIXPACK",
		6: "ARTIFACT_TYPE_SCRIPT",
	}
	ArtifactType_value = map[string]int32{
		"ARTIFACT_TYPE_UNSPECIFIED": 0,
		"ARTIFACT_TYPE_BINARY":      1,
		"ARTIFACT_TYPE_OCI_IMAGE":   2,
		"ARTIFACT_TYPE_ARCHIVE":     3,
		"ARTIFACT_TYPE_PACKAGE":     4,
		"ARTIFACT_TYPE_NIXPACK":     5,
		"ARTIFACT_TYPE_SCRIPT":      6,
	}
)

func (x ArtifactType) Enum() *ArtifactType {
	p := new(ArtifactType)
	*p = x
	return p
}

func (x ArtifactType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ArtifactType) Descriptor() protoreflect.EnumDescriptor {
	return file_fleetd_v1_artifact_proto_enumTypes[0].Descriptor()
}

func (ArtifactType) Type() protoreflect.EnumType {
	return &file_fleetd_v1_artifact_proto_enumTypes[0]
}

func (x ArtifactType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ArtifactType.Descriptor instead.
func (ArtifactType) EnumDescriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{0}
}

type RuntimeType int32

const (
	RuntimeType_RUNTIME_TYPE_UNSPECIFIED RuntimeType = 0
	RuntimeType_RUNTIME_TYPE_SYSTEMD     RuntimeType = 1
	RuntimeType_RUNTIME_TYPE_DOCKER      RuntimeType = 2
	RuntimeType_RUNTIME_TYPE_SUPERVISOR  RuntimeType = 3
	RuntimeType_RUNTIME_TYPE_RAW         RuntimeType = 4
)

// Enum value maps for RuntimeType.
var (
	RuntimeType_name = map[int32]string{
		0: "RUNTIME_TYPE_UNSPECIFIED",
		1: "RUNTIME_TYPE_SYSTEMD",
		2: "RUNTIME_TYPE_DOCKER",
		3: "RUNTIME_TYPE_SUPERVISOR",
		4: "RUNTIME_TYPE_RAW",
	}
	RuntimeType_value = map[string]int32{
		"RUNTIME_TYPE_UNSPECIFIED": 0,
		"RUNTIME_TYPE_SYSTEMD":     1,
		"RUNTIME_TYPE_DOCKER":      2,
		"RUNTIME_TYPE_SUPERVISOR":  3,
		"RUNTIME_TYPE_RAW":         4,
	}
)

func (x RuntimeType) Enum() *RuntimeType {
	p := new(RuntimeType)
	*p = x
	return p
}

func (x RuntimeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RuntimeType) Descriptor() protoreflect.EnumDescriptor {
	return file_fleetd_v1_artifact_proto_enumTypes[1].Descriptor()
}

func (RuntimeType) Type() protoreflect.EnumType {
	return &file_fleetd_v1_artifact_proto_enumTypes[1]
}

func (x RuntimeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RuntimeType.Descriptor instead.
func (RuntimeType) EnumDescriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{1}
}

type RestartPolicy int32

const (
	RestartPolicy_RESTART_POLICY_UNSPECIFIED RestartPolicy = 0
	RestartPolicy_RESTART_POLICY_ALWAYS      RestartPolicy = 1
	RestartPolicy_RESTART_POLICY_ON_FAILURE  RestartPolicy = 2
	RestartPolicy_RESTART_POLICY_NEVER       RestartPolicy = 3
)

// Enum value maps for RestartPolicy.
var (
	RestartPolicy_name = map[int32]string{
		0: "RESTART_POLICY_UNSPECIFIED",
		1: "RESTART_POLICY_ALWAYS",
		2: "RESTART_POLICY_ON_FAILURE",
		3: "RESTART_POLICY_NEVER",
	}
	RestartPolicy_value = map[string]int32{
		"RESTART_POLICY_UNSPECIFIED": 0,
		"RESTART_POLICY_ALWAYS":      1,
		"RESTART_POLICY_ON_FAILURE":  2,
		"RESTART_POLICY_NEVER":       3,
	}
)

func (x RestartPolicy) Enum() *RestartPolicy {
	p := new(RestartPolicy)
	*p = x
	return p
}

func (x RestartPolicy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RestartPolicy) Descriptor() protoreflect.EnumDescriptor {
	return file_fleetd_v1_artifact_proto_enumTypes[2].Descriptor()
}

func (RestartPolicy) Type() protoreflect.EnumType {
	return &file_fleetd_v1_artifact_proto_enumTypes[2]
}

func (x RestartPolicy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RestartPolicy.Descriptor instead.
func (RestartPolicy) EnumDescriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{2}
}

type TriggerType int32

const (
	TriggerType_TRIGGER_TYPE_UNSPECIFIED          TriggerType = 0
	TriggerType_TRIGGER_TYPE_CRASH_LOOP           TriggerType = 1
	TriggerType_TRIGGER_TYPE_HIGH_ERROR_RATE      TriggerType = 2
	TriggerType_TRIGGER_TYPE_HEALTH_CHECK_FAILURE TriggerType = 3
	TriggerType_TRIGGER_TYPE_HIGH_CPU             TriggerType = 4
	TriggerType_TRIGGER_TYPE_HIGH_MEMORY          TriggerType = 5
)

// Enum value maps for TriggerType.
var (
	TriggerType_name = map[int32]string{
		0: "TRIGGER_TYPE_UNSPECIFIED",
		1: "TRIGGER_TYPE_CRASH_LOOP",
		2: "TRIGGER_TYPE_HIGH_ERROR_RATE",
		3: "TRIGGER_TYPE_HEALTH_CHECK_FAILURE",
		4: "TRIGGER_TYPE_HIGH_CPU",
		5: "TRIGGER_TYPE_HIGH_MEMORY",
	}
	TriggerType_value = map[string]int32{
		"TRIGGER_TYPE_UNSPECIFIED":          0,
		"TRIGGER_TYPE_CRASH_LOOP":           1,
		"TRIGGER_TYPE_HIGH_ERROR_RATE":      2,
		"TRIGGER_TYPE_HEALTH_CHECK_FAILURE": 3,
		"TRIGGER_TYPE_HIGH_CPU":             4,
		"TRIGGER_TYPE_HIGH_MEMORY":          5,
	}
)

func (x TriggerType) Enum() *TriggerType {
	p := new(TriggerType)
	*p = x
	return p
}

func (x TriggerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TriggerType) Descriptor() protoreflect.EnumDescriptor {
	return file_fleetd_v1_artifact_proto_enumTypes[3].Descriptor()
}

func (TriggerType) Type() protoreflect.EnumType {
	return &file_fleetd_v1_artifact_proto_enumTypes[3]
}

func (x TriggerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TriggerType.Descriptor instead.
func (TriggerType) EnumDescriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{3}
}

type DeploymentStatus int32

const (
	DeploymentStatus_DEPLOYMENT_STATUS_UNSPECIFIED  DeploymentStatus = 0
	DeploymentStatus_DEPLOYMENT_STATUS_PENDING      DeploymentStatus = 1
	DeploymentStatus_DEPLOYMENT_STATUS_IN_PROGRESS  DeploymentStatus = 2
	DeploymentStatus_DEPLOYMENT_STATUS_SUCCEEDED    DeploymentStatus = 3
	DeploymentStatus_DEPLOYMENT_STATUS_FAILED       DeploymentStatus = 4
	DeploymentStatus_DEPLOYMENT_STATUS_ROLLING_BACK DeploymentStatus = 5
	DeploymentStatus_DEPLOYMENT_STATUS_ROLLED_BACK  DeploymentStatus = 6
	DeploymentStatus_DEPLOYMENT_STATUS_CANCELLED    DeploymentStatus = 7
)

// Enum value maps for DeploymentStatus.
var (
	DeploymentStatus_name = map[int32]string{
		0: "DEPLOYMENT_STATUS_UNSPECIFIED",
		1: "DEPLOYMENT_STATUS_PENDING",
		2: "DEPLOYMENT_STATUS_IN_PROGRESS",
		3: "DEPLOYMENT_STATUS_SUCCEEDED",
		4: "DEPLOYMENT_STATUS_FAILED",
		5: "DEPLOYMENT_STATUS_ROLLING_BACK",
		6: "DEPLOYMENT_STATUS_ROLLED_BACK",
		7: "DEPLOYMENT_STATUS_CANCELLED",
	}
	DeploymentStatus_value = map[string]int32{
		"DEPLOYMENT_STATUS_UNSPECIFIED":  0,
		"DEPLOYMENT_STATUS_PENDING":      1,
		"DEPLOYMENT_STATUS_IN_PROGRESS":  2,
		"DEPLOYMENT_STATUS_SUCCEEDED":    3,
		"DEPLOYMENT_STATUS_FAILED":       4,
		"DEPLOYMENT_STATUS_ROLLING_BACK": 5,
		"DEPLOYMENT_STATUS_ROLLED_BACK":  6,
		"DEPLOYMENT_STATUS_CANCELLED":    7,
	}
)

func (x DeploymentStatus) Enum() *DeploymentStatus {
	p := new(DeploymentStatus)
	*p = x
	return p
}

func (x DeploymentStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeploymentStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_fleetd_v1_artifact_proto_enumTypes[4].Descriptor()
}

func (DeploymentStatus) Type() protoreflect.EnumType {
	return &file_fleetd_v1_artifact_proto_enumTypes[4]
}

func (x DeploymentStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeploymentStatus.Descriptor instead.
func (DeploymentStatus) EnumDescriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{4}
}

type ProcessState int32

const (
	ProcessState_PROCESS_STATE_UNSPECIFIED ProcessState = 0
	ProcessState_PROCESS_STATE_STARTING    ProcessState = 1
	ProcessState_PROCESS_STATE_RUNNING     ProcessState = 2
	ProcessState_PROCESS_STATE_STOPPING    ProcessState = 3
	ProcessState_PROCESS_STATE_STOPPED     ProcessState = 4
	ProcessState_PROCESS_STATE_CRASHED     ProcessState = 5
	ProcessState_PROCESS_STATE_RESTARTING  ProcessState = 6
)

// Enum value maps for ProcessState.
var (
	ProcessState_name = map[int32]string{
		0: "PROCESS_STATE_UNSPECIFIED",
		1: "PROCESS_STATE_STARTING",
		2: "PROCESS_STATE_RUNNING",
		3: "PROCESS_STATE_STOPPING",
		4: "PROCESS_STATE_STOPPED",
		5: "PROCESS_STATE_CRASHED",
		6: "PROCESS_STATE_RESTARTING",
	}
	ProcessState_value = map[string]int32{
		"PROCESS_STATE_UNSPECIFIED": 0,
		"PROCESS_STATE_STARTING":    1,
		"PROCESS_STATE_RUNNING":     2,
		"PROCESS_STATE_STOPPING":    3,
		"PROCESS_STATE_STOPPED":     4,
		"PROCESS_STATE_CRASHED":     5,
		"PROCESS_STATE_RESTARTING":  6,
	}
)

func (x ProcessState) Enum() *ProcessState {
	p := new(ProcessState)
	*p = x
	return p
}

func (x ProcessState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProcessState) Descriptor() protoreflect.EnumDescriptor {
	return file_fleetd_v1_artifact_proto_enumTypes[5].Descriptor()
}

func (ProcessState) Type() protoreflect.EnumType {
	return &file_fleetd_v1_artifact_proto_enumTypes[5]
}

func (x ProcessState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProcessState.Descriptor instead.
func (ProcessState) EnumDescriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{5}
}

// Artifact represents a deployable software package
type Artifact struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Id      string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name    string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Version string                 `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Type    ArtifactType           `protobuf:"varint,4,opt,name=type,proto3,enum=fleetd.v1.ArtifactType" json:"type,omitempty"`
	// Build information
	BuildInfo *BuildInfo `protobuf:"bytes,5,opt,name=build_info,json=buildInfo,proto3" json:"build_info,omitempty"`
	// Runtime requirements
	Requirements *Requirements `protobuf:"bytes,6,opt,name=requirements,proto3" json:"requirements,omitempty"`
	// Security
	Signatures []*Signature      `protobuf:"bytes,7,rep,name=signatures,proto3" json:"signatures,omitempty"`
	Checksums  map[string]string `protobuf:"bytes,8,rep,name=checksums,proto3" json:"checksums,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Storage
	Size       int64  `protobuf:"varint,9,opt,name=size,proto3" json:"size,omitempty"`
	StorageUrl string `protobuf:"bytes,10,opt,name=storage_url,json=storageUrl,proto3" json:"storage_url,omitempty"`
	// Platform compatibility
	Platforms []*Platform `protobuf:"bytes,11,rep,name=platforms,proto3" json:"platforms,omitempty"`
	// Metadata
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,13,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Description   string                 `protobuf:"bytes,14,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Artifact) Reset() {
	*x = Artifact{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Artifact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Artifact) ProtoMessage() {}

func (x *Artifact) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Artifact.ProtoReflect.Descriptor instead.
func (*Artifact) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{0}
}

func (x *Artifact) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Artifact) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Artifact) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Artifact) GetType() ArtifactType {
	if x != nil {
		return x.Type
	}
	return ArtifactType_ARTIFACT_TYPE_UNSPECIFIED
}

func (x *Artifact) GetBuildInfo() *BuildInfo {
	if x != nil {
		return x.BuildInfo
	}
	return nil
}

func (x *Artifact) GetRequirements() *Requirements {
	if x != nil {
		return x.Requirements
	}
	return nil
}

func (x *Artifact) GetSignatures() []*Signature {
	if x != nil {
		return x.Signatures
	}
	return nil
}

func (x *Artifact) GetChecksums() map[string]string {
	if x != nil {
		return x.Checksums
	}
	return nil
}

func (x *Artifact) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Artifact) GetStorageUrl() string {
	if x != nil {
		return x.StorageUrl
	}
	return ""
}

func (x *Artifact) GetPlatforms() []*Platform {
	if x != nil {
		return x.Platforms
	}
	return nil
}

func (x *Artifact) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Artifact) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Artifact) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type BuildInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommitSha     string                 `protobuf:"bytes,1,opt,name=commit_sha,json=commitSha,proto3" json:"commit_sha,omitempty"`
	Branch        string                 `protobuf:"bytes,2,opt,name=branch,proto3" json:"branch,omitempty"`
	BuildNumber   string                 `protobuf:"bytes,3,opt,name=build_number,json=buildNumber,proto3" json:"build_number,omitempty"`
	Builder       string                 `protobuf:"bytes,4,opt,name=builder,proto3" json:"builder,omitempty"`
	BuildTime     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=build_time,json=buildTime,proto3" json:"build_time,omitempty"`
	BuildArgs     map[string]string      `protobuf:"bytes,6,rep,name=build_args,json=buildArgs,proto3" json:"build_args,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BuildInfo) Reset() {
	*x = BuildInfo{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuildInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildInfo) ProtoMessage() {}

func (x *BuildInfo) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildInfo.ProtoReflect.Descriptor instead.
func (*BuildInfo) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{1}
}

func (x *BuildInfo) GetCommitSha() string {
	if x != nil {
		return x.CommitSha
	}
	return ""
}

func (x *BuildInfo) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

func (x *BuildInfo) GetBuildNumber() string {
	if x != nil {
		return x.BuildNumber
	}
	return ""
}

func (x *BuildInfo) GetBuilder() string {
	if x != nil {
		return x.Builder
	}
	return ""
}

func (x *BuildInfo) GetBuildTime() *timestamppb.Timestamp {
	if x != nil {
		return x.BuildTime
	}
	return nil
}

func (x *BuildInfo) GetBuildArgs() map[string]string {
	if x != nil {
		return x.BuildArgs
	}
	return nil
}

type Requirements struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MinMemory     int64                  `protobuf:"varint,1,opt,name=min_memory,json=minMemory,proto3" json:"min_memory,omitempty"`    // bytes
	MinStorage    int64                  `protobuf:"varint,2,opt,name=min_storage,json=minStorage,proto3" json:"min_storage,omitempty"` // bytes
	MinCpuMhz     int32                  `protobuf:"varint,3,opt,name=min_cpu_mhz,json=minCpuMhz,proto3" json:"min_cpu_mhz,omitempty"`
	Capabilities  []string               `protobuf:"bytes,4,rep,name=capabilities,proto3" json:"capabilities,omitempty"`            // "docker", "systemd", "gpu"
	OsFamily      string                 `protobuf:"bytes,5,opt,name=os_family,json=osFamily,proto3" json:"os_family,omitempty"`    // "linux", "rtos"
	MinKernel     string                 `protobuf:"bytes,6,opt,name=min_kernel,json=minKernel,proto3" json:"min_kernel,omitempty"` // "5.10"
	Architectures []string               `protobuf:"bytes,7,rep,name=architectures,proto3" json:"architectures,omitempty"`          // ["arm64", "amd64"]
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Requirements) Reset() {
	*x = Requirements{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Requirements) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Requirements) ProtoMessage() {}

func (x *Requirements) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Requirements.ProtoReflect.Descriptor instead.
func (*Requirements) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{2}
}

func (x *Requirements) GetMinMemory() int64 {
	if x != nil {
		return x.MinMemory
	}
	return 0
}

func (x *Requirements) GetMinStorage() int64 {
	if x != nil {
		return x.MinStorage
	}
	return 0
}

func (x *Requirements) GetMinCpuMhz() int32 {
	if x != nil {
		return x.MinCpuMhz
	}
	return 0
}

func (x *Requirements) GetCapabilities() []string {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *Requirements) GetOsFamily() string {
	if x != nil {
		return x.OsFamily
	}
	return ""
}

func (x *Requirements) GetMinKernel() string {
	if x != nil {
		return x.MinKernel
	}
	return ""
}

func (x *Requirements) GetArchitectures() []string {
	if x != nil {
		return x.Architectures
	}
	return nil
}

type Signature struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Algorithm     string                 `protobuf:"bytes,1,opt,name=algorithm,proto3" json:"algorithm,omitempty"` // "ed25519", "rsa-sha256"
	KeyId         string                 `protobuf:"bytes,2,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	Signature     []byte                 `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	Signer        string                 `protobuf:"bytes,4,opt,name=signer,proto3" json:"signer,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Signature) Reset() {
	*x = Signature{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Signature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Signature) ProtoMessage() {}

func (x *Signature) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Signature.ProtoReflect.Descriptor instead.
func (*Signature) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{3}
}

func (x *Signature) GetAlgorithm() string {
	if x != nil {
		return x.Algorithm
	}
	return ""
}

func (x *Signature) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *Signature) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *Signature) GetSigner() string {
	if x != nil {
		return x.Signer
	}
	return ""
}

type Platform struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Os            string                 `protobuf:"bytes,1,opt,name=os,proto3" json:"os,omitempty"`
	Arch          string                 `protobuf:"bytes,2,opt,name=arch,proto3" json:"arch,omitempty"`
	Variant       string                 `protobuf:"bytes,3,opt,name=variant,proto3" json:"variant,omitempty"` // "v7", "v8" for ARM
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Platform) Reset() {
	*x = Platform{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Platform) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Platform) ProtoMessage() {}

func (x *Platform) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Platform.ProtoReflect.Descriptor instead.
func (*Platform) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{4}
}

func (x *Platform) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *Platform) GetArch() string {
	if x != nil {
		return x.Arch
	}
	return ""
}

func (x *Platform) GetVariant() string {
	if x != nil {
		return x.Variant
	}
	return ""
}

// Application represents a complete application definition
type Application struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Id      string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name    string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Version string                 `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	// Artifacts that compose this application
	Artifacts []*ArtifactRef `protobuf:"bytes,4,rep,name=artifacts,proto3" json:"artifacts,omitempty"`
	// Execution settings
	Args          []string          `protobuf:"bytes,5,rep,name=args,proto3" json:"args,omitempty"`
	Environment   map[string]string `protobuf:"bytes,6,rep,name=environment,proto3" json:"environment,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	WorkingDir    string            `protobuf:"bytes,7,opt,name=working_dir,json=workingDir,proto3" json:"working_dir,omitempty"`
	RestartPolicy RestartPolicy     `protobuf:"varint,8,opt,name=restart_policy,json=restartPolicy,proto3,enum=fleetd.v1.RestartPolicy" json:"restart_policy,omitempty"`
	// Configuration
	Configuration *Configuration `protobuf:"bytes,9,opt,name=configuration,proto3" json:"configuration,omitempty"`
	// Runtime settings
	Runtime *RuntimeConfig `protobuf:"bytes,10,opt,name=runtime,proto3" json:"runtime,omitempty"`
	// Health check
	HealthCheck *HealthCheck `protobuf:"bytes,11,opt,name=health_check,json=healthCheck,proto3" json:"health_check,omitempty"`
	// Resource limits
	Resources *Resources `protobuf:"bytes,12,opt,name=resources,proto3" json:"resources,omitempty"`
	// Placement constraints
	Placement *PlacementConstraints `protobuf:"bytes,13,opt,name=placement,proto3" json:"placement,omitempty"`
	// Metadata
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,16,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Application) Reset() {
	*x = Application{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Application) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Application) ProtoMessage() {}

func (x *Application) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Application.ProtoReflect.Descriptor instead.
func (*Application) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{5}
}

func (x *Application) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Application) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Application) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Application) GetArtifacts() []*ArtifactRef {
	if x != nil {
		return x.Artifacts
	}
	return nil
}

func (x *Application) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *Application) GetEnvironment() map[string]string {
	if x != nil {
		return x.Environment
	}
	return nil
}

func (x *Application) GetWorkingDir() string {
	if x != nil {
		return x.WorkingDir
	}
	return ""
}

func (x *Application) GetRestartPolicy() RestartPolicy {
	if x != nil {
		return x.RestartPolicy
	}
	return RestartPolicy_RESTART_POLICY_UNSPECIFIED
}

func (x *Application) GetConfiguration() *Configuration {
	if x != nil {
		return x.Configuration
	}
	return nil
}

func (x *Application) GetRuntime() *RuntimeConfig {
	if x != nil {
		return x.Runtime
	}
	return nil
}

func (x *Application) GetHealthCheck() *HealthCheck {
	if x != nil {
		return x.HealthCheck
	}
	return nil
}

func (x *Application) GetResources() *Resources {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *Application) GetPlacement() *PlacementConstraints {
	if x != nil {
		return x.Placement
	}
	return nil
}

func (x *Application) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Application) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Application) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type ArtifactRef struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Type          ArtifactType           `protobuf:"varint,3,opt,name=type,proto3,enum=fleetd.v1.ArtifactType" json:"type,omitempty"`
	Required      bool                   `protobuf:"varint,4,opt,name=required,proto3" json:"required,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ArtifactRef) Reset() {
	*x = ArtifactRef{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArtifactRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtifactRef) ProtoMessage() {}

func (x *ArtifactRef) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtifactRef.ProtoReflect.Descriptor instead.
func (*ArtifactRef) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{6}
}

func (x *ArtifactRef) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ArtifactRef) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ArtifactRef) GetType() ArtifactType {
	if x != nil {
		return x.Type
	}
	return ArtifactType_ARTIFACT_TYPE_UNSPECIFIED
}

func (x *ArtifactRef) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

type Configuration struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Environment   map[string]string      `protobuf:"bytes,1,rep,name=environment,proto3" json:"environment,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Files         []*ConfigFile          `protobuf:"bytes,2,rep,name=files,proto3" json:"files,omitempty"`
	Args          []string               `protobuf:"bytes,3,rep,name=args,proto3" json:"args,omitempty"`
	WorkingDir    string                 `protobuf:"bytes,4,opt,name=working_dir,json=workingDir,proto3" json:"working_dir,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Configuration) Reset() {
	*x = Configuration{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Configuration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Configuration) ProtoMessage() {}

func (x *Configuration) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Configuration.ProtoReflect.Descriptor instead.
func (*Configuration) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{7}
}

func (x *Configuration) GetEnvironment() map[string]string {
	if x != nil {
		return x.Environment
	}
	return nil
}

func (x *Configuration) GetFiles() []*ConfigFile {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *Configuration) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *Configuration) GetWorkingDir() string {
	if x != nil {
		return x.WorkingDir
	}
	return ""
}

type ConfigFile struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Content       string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Mode          string                 `protobuf:"bytes,3,opt,name=mode,proto3" json:"mode,omitempty"` // "0644"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigFile) Reset() {
	*x = ConfigFile{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigFile) ProtoMessage() {}

func (x *ConfigFile) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigFile.ProtoReflect.Descriptor instead.
func (*ConfigFile) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{8}
}

func (x *ConfigFile) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ConfigFile) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ConfigFile) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

type RuntimeConfig struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Type                  RuntimeType            `protobuf:"varint,1,opt,name=type,proto3,enum=fleetd.v1.RuntimeType" json:"type,omitempty"`
	RestartPolicy         RestartPolicy          `protobuf:"varint,2,opt,name=restart_policy,json=restartPolicy,proto3,enum=fleetd.v1.RestartPolicy" json:"restart_policy,omitempty"`
	StartupTimeoutSeconds int32                  `protobuf:"varint,3,opt,name=startup_timeout_seconds,json=startupTimeoutSeconds,proto3" json:"startup_timeout_seconds,omitempty"`
	StopTimeoutSeconds    int32                  `protobuf:"varint,4,opt,name=stop_timeout_seconds,json=stopTimeoutSeconds,proto3" json:"stop_timeout_seconds,omitempty"`
	User                  string                 `protobuf:"bytes,5,opt,name=user,proto3" json:"user,omitempty"`
	Group                 string                 `protobuf:"bytes,6,opt,name=group,proto3" json:"group,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *RuntimeConfig) Reset() {
	*x = RuntimeConfig{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuntimeConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeConfig) ProtoMessage() {}

func (x *RuntimeConfig) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeConfig.ProtoReflect.Descriptor instead.
func (*RuntimeConfig) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{9}
}

func (x *RuntimeConfig) GetType() RuntimeType {
	if x != nil {
		return x.Type
	}
	return RuntimeType_RUNTIME_TYPE_UNSPECIFIED
}

func (x *RuntimeConfig) GetRestartPolicy() RestartPolicy {
	if x != nil {
		return x.RestartPolicy
	}
	return RestartPolicy_RESTART_POLICY_UNSPECIFIED
}

func (x *RuntimeConfig) GetStartupTimeoutSeconds() int32 {
	if x != nil {
		return x.StartupTimeoutSeconds
	}
	return 0
}

func (x *RuntimeConfig) GetStopTimeoutSeconds() int32 {
	if x != nil {
		return x.StopTimeoutSeconds
	}
	return 0
}

func (x *RuntimeConfig) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *RuntimeConfig) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

type HealthCheck struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Check:
	//
	//	*HealthCheck_Http
	//	*HealthCheck_Tcp
	//	*HealthCheck_Exec
	Check              isHealthCheck_Check `protobuf_oneof:"check"`
	IntervalSeconds    int32               `protobuf:"varint,4,opt,name=interval_seconds,json=intervalSeconds,proto3" json:"interval_seconds,omitempty"`
	TimeoutSeconds     int32               `protobuf:"varint,5,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"`
	Retries            int32               `protobuf:"varint,6,opt,name=retries,proto3" json:"retries,omitempty"`
	StartPeriodSeconds int32               `protobuf:"varint,7,opt,name=start_period_seconds,json=startPeriodSeconds,proto3" json:"start_period_seconds,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *HealthCheck) Reset() {
	*x = HealthCheck{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheck) ProtoMessage() {}

func (x *HealthCheck) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheck.ProtoReflect.Descriptor instead.
func (*HealthCheck) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{10}
}

func (x *HealthCheck) GetCheck() isHealthCheck_Check {
	if x != nil {
		return x.Check
	}
	return nil
}

func (x *HealthCheck) GetHttp() *HTTPHealthCheck {
	if x != nil {
		if x, ok := x.Check.(*HealthCheck_Http); ok {
			return x.Http
		}
	}
	return nil
}

func (x *HealthCheck) GetTcp() *TCPHealthCheck {
	if x != nil {
		if x, ok := x.Check.(*HealthCheck_Tcp); ok {
			return x.Tcp
		}
	}
	return nil
}

func (x *HealthCheck) GetExec() *ExecHealthCheck {
	if x != nil {
		if x, ok := x.Check.(*HealthCheck_Exec); ok {
			return x.Exec
		}
	}
	return nil
}

func (x *HealthCheck) GetIntervalSeconds() int32 {
	if x != nil {
		return x.IntervalSeconds
	}
	return 0
}

func (x *HealthCheck) GetTimeoutSeconds() int32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

func (x *HealthCheck) GetRetries() int32 {
	if x != nil {
		return x.Retries
	}
	return 0
}

func (x *HealthCheck) GetStartPeriodSeconds() int32 {
	if x != nil {
		return x.StartPeriodSeconds
	}
	return 0
}

type isHealthCheck_Check interface {
	isHealthCheck_Check()
}

type HealthCheck_Http struct {
	Http *HTTPHealthCheck `protobuf:"bytes,1,opt,name=http,proto3,oneof"`
}

type HealthCheck_Tcp struct {
	Tcp *TCPHealthCheck `protobuf:"bytes,2,opt,name=tcp,proto3,oneof"`
}

type HealthCheck_Exec struct {
	Exec *ExecHealthCheck `protobuf:"bytes,3,opt,name=exec,proto3,oneof"`
}

func (*HealthCheck_Http) isHealthCheck_Check() {}

func (*HealthCheck_Tcp) isHealthCheck_Check() {}

func (*HealthCheck_Exec) isHealthCheck_Check() {}

type HTTPHealthCheck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Port          int32                  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Scheme        string                 `protobuf:"bytes,3,opt,name=scheme,proto3" json:"scheme,omitempty"` // "http" or "https"
	Headers       map[string]string      `protobuf:"bytes,4,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HTTPHealthCheck) Reset() {
	*x = HTTPHealthCheck{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HTTPHealthCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HTTPHealthCheck) ProtoMessage() {}

func (x *HTTPHealthCheck) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HTTPHealthCheck.ProtoReflect.Descriptor instead.
func (*HTTPHealthCheck) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{11}
}

func (x *HTTPHealthCheck) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *HTTPHealthCheck) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *HTTPHealthCheck) GetScheme() string {
	if x != nil {
		return x.Scheme
	}
	return ""
}

func (x *HTTPHealthCheck) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

type TCPHealthCheck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Port          int32                  `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TCPHealthCheck) Reset() {
	*x = TCPHealthCheck{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TCPHealthCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TCPHealthCheck) ProtoMessage() {}

func (x *TCPHealthCheck) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TCPHealthCheck.ProtoReflect.Descriptor instead.
func (*TCPHealthCheck) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{12}
}

func (x *TCPHealthCheck) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type ExecHealthCheck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Command       []string               `protobuf:"bytes,1,rep,name=command,proto3" json:"command,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecHealthCheck) Reset() {
	*x = ExecHealthCheck{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecHealthCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecHealthCheck) ProtoMessage() {}

func (x *ExecHealthCheck) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecHealthCheck.ProtoReflect.Descriptor instead.
func (*ExecHealthCheck) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{13}
}

func (x *ExecHealthCheck) GetCommand() []string {
	if x != nil {
		return x.Command
	}
	return nil
}

type Resources struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limits        *ResourceSpec          `protobuf:"bytes,1,opt,name=limits,proto3" json:"limits,omitempty"`
	Requests      *ResourceSpec          `protobuf:"bytes,2,opt,name=requests,proto3" json:"requests,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Resources) Reset() {
	*x = Resources{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Resources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resources) ProtoMessage() {}

func (x *Resources) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resources.ProtoReflect.Descriptor instead.
func (*Resources) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{14}
}

func (x *Resources) GetLimits() *ResourceSpec {
	if x != nil {
		return x.Limits
	}
	return nil
}

func (x *Resources) GetRequests() *ResourceSpec {
	if x != nil {
		return x.Requests
	}
	return nil
}

type ResourceSpec struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Memory          int64                  `protobuf:"varint,1,opt,name=memory,proto3" json:"memory,omitempty"`                                    // bytes
	CpuMillicores   int32                  `protobuf:"varint,2,opt,name=cpu_millicores,json=cpuMillicores,proto3" json:"cpu_millicores,omitempty"` // 1000 = 1 CPU
	Storage         int64                  `protobuf:"varint,3,opt,name=storage,proto3" json:"storage,omitempty"`                                  // bytes
	GpuCount        int32                  `protobuf:"varint,4,opt,name=gpu_count,json=gpuCount,proto3" json:"gpu_count,omitempty"`
	FileDescriptors int32                  `protobuf:"varint,5,opt,name=file_descriptors,json=fileDescriptors,proto3" json:"file_descriptors,omitempty"` // max open files
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ResourceSpec) Reset() {
	*x = ResourceSpec{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceSpec) ProtoMessage() {}

func (x *ResourceSpec) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceSpec.ProtoReflect.Descriptor instead.
func (*ResourceSpec) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{15}
}

func (x *ResourceSpec) GetMemory() int64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *ResourceSpec) GetCpuMillicores() int32 {
	if x != nil {
		return x.CpuMillicores
	}
	return 0
}

func (x *ResourceSpec) GetStorage() int64 {
	if x != nil {
		return x.Storage
	}
	return 0
}

func (x *ResourceSpec) GetGpuCount() int32 {
	if x != nil {
		return x.GpuCount
	}
	return 0
}

func (x *ResourceSpec) GetFileDescriptors() int32 {
	if x != nil {
		return x.FileDescriptors
	}
	return 0
}

type PlacementConstraints struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	DeviceSelector       map[string]string      `protobuf:"bytes,1,rep,name=device_selector,json=deviceSelector,proto3" json:"device_selector,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	NodeAffinities       []*NodeAffinity        `protobuf:"bytes,2,rep,name=node_affinities,json=nodeAffinities,proto3" json:"node_affinities,omitempty"`
	RequiredCapabilities []string               `protobuf:"bytes,3,rep,name=required_capabilities,json=requiredCapabilities,proto3" json:"required_capabilities,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *PlacementConstraints) Reset() {
	*x = PlacementConstraints{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlacementConstraints) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlacementConstraints) ProtoMessage() {}

func (x *PlacementConstraints) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlacementConstraints.ProtoReflect.Descriptor instead.
func (*PlacementConstraints) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{16}
}

func (x *PlacementConstraints) GetDeviceSelector() map[string]string {
	if x != nil {
		return x.DeviceSelector
	}
	return nil
}

func (x *PlacementConstraints) GetNodeAffinities() []*NodeAffinity {
	if x != nil {
		return x.NodeAffinities
	}
	return nil
}

func (x *PlacementConstraints) GetRequiredCapabilities() []string {
	if x != nil {
		return x.RequiredCapabilities
	}
	return nil
}

type NodeAffinity struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Operator      string                 `protobuf:"bytes,2,opt,name=operator,proto3" json:"operator,omitempty"` // "In", "NotIn", "Exists", "DoesNotExist"
	Values        []string               `protobuf:"bytes,3,rep,name=values,proto3" json:"values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeAffinity) Reset() {
	*x = NodeAffinity{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeAffinity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeAffinity) ProtoMessage() {}

func (x *NodeAffinity) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeAffinity.ProtoReflect.Descriptor instead.
func (*NodeAffinity) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{17}
}

func (x *NodeAffinity) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *NodeAffinity) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *NodeAffinity) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

// Deployment represents a software rollout to devices
type Deployment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ApplicationId string                 `protobuf:"bytes,2,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
	Version       string                 `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	// Target devices
	Target *DeploymentTarget `protobuf:"bytes,4,opt,name=target,proto3" json:"target,omitempty"`
	// Deployment strategy
	Strategy *DeploymentStrategy `protobuf:"bytes,5,opt,name=strategy,proto3" json:"strategy,omitempty"`
	// Current status
	Status DeploymentStatus `protobuf:"varint,6,opt,name=status,proto3,enum=fleetd.v1.DeploymentStatus" json:"status,omitempty"`
	// Rollback configuration
	Rollback *RollbackConfig `protobuf:"bytes,7,opt,name=rollback,proto3" json:"rollback,omitempty"`
	// Timestamps
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	StartedAt   *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	CompletedAt *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	// Results
	Result        *DeploymentResult `protobuf:"bytes,11,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Deployment) Reset() {
	*x = Deployment{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Deployment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deployment) ProtoMessage() {}

func (x *Deployment) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deployment.ProtoReflect.Descriptor instead.
func (*Deployment) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{18}
}

func (x *Deployment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Deployment) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

func (x *Deployment) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Deployment) GetTarget() *DeploymentTarget {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *Deployment) GetStrategy() *DeploymentStrategy {
	if x != nil {
		return x.Strategy
	}
	return nil
}

func (x *Deployment) GetStatus() DeploymentStatus {
	if x != nil {
		return x.Status
	}
	return DeploymentStatus_DEPLOYMENT_STATUS_UNSPECIFIED
}

func (x *Deployment) GetRollback() *RollbackConfig {
	if x != nil {
		return x.Rollback
	}
	return nil
}

func (x *Deployment) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Deployment) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *Deployment) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

func (x *Deployment) GetResult() *DeploymentResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type DeploymentTarget struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceIds     []string               `protobuf:"bytes,1,rep,name=device_ids,json=deviceIds,proto3" json:"device_ids,omitempty"`
	GroupIds      []string               `protobuf:"bytes,2,rep,name=group_ids,json=groupIds,proto3" json:"group_ids,omitempty"`
	Selector      map[string]string      `protobuf:"bytes,3,rep,name=selector,proto3" json:"selector,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	MaxDevices    int32                  `protobuf:"varint,4,opt,name=max_devices,json=maxDevices,proto3" json:"max_devices,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeploymentTarget) Reset() {
	*x = DeploymentTarget{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeploymentTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentTarget) ProtoMessage() {}

func (x *DeploymentTarget) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentTarget.ProtoReflect.Descriptor instead.
func (*DeploymentTarget) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{19}
}

func (x *DeploymentTarget) GetDeviceIds() []string {
	if x != nil {
		return x.DeviceIds
	}
	return nil
}

func (x *DeploymentTarget) GetGroupIds() []string {
	if x != nil {
		return x.GroupIds
	}
	return nil
}

func (x *DeploymentTarget) GetSelector() map[string]string {
	if x != nil {
		return x.Selector
	}
	return nil
}

func (x *DeploymentTarget) GetMaxDevices() int32 {
	if x != nil {
		return x.MaxDevices
	}
	return 0
}

type DeploymentStrategy struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Strategy:
	//
	//	*DeploymentStrategy_Canary
	//	*DeploymentStrategy_Rolling
	//	*DeploymentStrategy_BlueGreen
	//	*DeploymentStrategy_AllAtOnce
	Strategy      isDeploymentStrategy_Strategy `protobuf_oneof:"strategy"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeploymentStrategy) Reset() {
	*x = DeploymentStrategy{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeploymentStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentStrategy) ProtoMessage() {}

func (x *DeploymentStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentStrategy.ProtoReflect.Descriptor instead.
func (*DeploymentStrategy) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{20}
}

func (x *DeploymentStrategy) GetStrategy() isDeploymentStrategy_Strategy {
	if x != nil {
		return x.Strategy
	}
	return nil
}

func (x *DeploymentStrategy) GetCanary() *CanaryStrategy {
	if x != nil {
		if x, ok := x.Strategy.(*DeploymentStrategy_Canary); ok {
			return x.Canary
		}
	}
	return nil
}

func (x *DeploymentStrategy) GetRolling() *RollingUpdateStrategy {
	if x != nil {
		if x, ok := x.Strategy.(*DeploymentStrategy_Rolling); ok {
			return x.Rolling
		}
	}
	return nil
}

func (x *DeploymentStrategy) GetBlueGreen() *BlueGreenStrategy {
	if x != nil {
		if x, ok := x.Strategy.(*DeploymentStrategy_BlueGreen); ok {
			return x.BlueGreen
		}
	}
	return nil
}

func (x *DeploymentStrategy) GetAllAtOnce() *AllAtOnceStrategy {
	if x != nil {
		if x, ok := x.Strategy.(*DeploymentStrategy_AllAtOnce); ok {
			return x.AllAtOnce
		}
	}
	return nil
}

type isDeploymentStrategy_Strategy interface {
	isDeploymentStrategy_Strategy()
}

type DeploymentStrategy_Canary struct {
	Canary *CanaryStrategy `protobuf:"bytes,1,opt,name=canary,proto3,oneof"`
}

type DeploymentStrategy_Rolling struct {
	Rolling *RollingUpdateStrategy `protobuf:"bytes,2,opt,name=rolling,proto3,oneof"`
}

type DeploymentStrategy_BlueGreen struct {
	BlueGreen *BlueGreenStrategy `protobuf:"bytes,3,opt,name=blue_green,json=blueGreen,proto3,oneof"`
}

type DeploymentStrategy_AllAtOnce struct {
	AllAtOnce *AllAtOnceStrategy `protobuf:"bytes,4,opt,name=all_at_once,json=allAtOnce,proto3,oneof"`
}

func (*DeploymentStrategy_Canary) isDeploymentStrategy_Strategy() {}

func (*DeploymentStrategy_Rolling) isDeploymentStrategy_Strategy() {}

func (*DeploymentStrategy_BlueGreen) isDeploymentStrategy_Strategy() {}

func (*DeploymentStrategy_AllAtOnce) isDeploymentStrategy_Strategy() {}

type CanaryStrategy struct {
	state                    protoimpl.MessageState `protogen:"open.v1"`
	InitialPercentage        int32                  `protobuf:"varint,1,opt,name=initial_percentage,json=initialPercentage,proto3" json:"initial_percentage,omitempty"`
	IncrementPercentage      int32                  `protobuf:"varint,2,opt,name=increment_percentage,json=incrementPercentage,proto3" json:"increment_percentage,omitempty"`
	IncrementIntervalSeconds int32                  `protobuf:"varint,3,opt,name=increment_interval_seconds,json=incrementIntervalSeconds,proto3" json:"increment_interval_seconds,omitempty"`
	SuccessCriteria          *SuccessCriteria       `protobuf:"bytes,4,opt,name=success_criteria,json=successCriteria,proto3" json:"success_criteria,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *CanaryStrategy) Reset() {
	*x = CanaryStrategy{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CanaryStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CanaryStrategy) ProtoMessage() {}

func (x *CanaryStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CanaryStrategy.ProtoReflect.Descriptor instead.
func (*CanaryStrategy) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{21}
}

func (x *CanaryStrategy) GetInitialPercentage() int32 {
	if x != nil {
		return x.InitialPercentage
	}
	return 0
}

func (x *CanaryStrategy) GetIncrementPercentage() int32 {
	if x != nil {
		return x.IncrementPercentage
	}
	return 0
}

func (x *CanaryStrategy) GetIncrementIntervalSeconds() int32 {
	if x != nil {
		return x.IncrementIntervalSeconds
	}
	return 0
}

func (x *CanaryStrategy) GetSuccessCriteria() *SuccessCriteria {
	if x != nil {
		return x.SuccessCriteria
	}
	return nil
}

type RollingUpdateStrategy struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	MaxUnavailable       int32                  `protobuf:"varint,1,opt,name=max_unavailable,json=maxUnavailable,proto3" json:"max_unavailable,omitempty"`
	MaxSurge             int32                  `protobuf:"varint,2,opt,name=max_surge,json=maxSurge,proto3" json:"max_surge,omitempty"`
	BatchSize            int32                  `protobuf:"varint,3,opt,name=batch_size,json=batchSize,proto3" json:"batch_size,omitempty"`
	BatchIntervalSeconds int32                  `protobuf:"varint,4,opt,name=batch_interval_seconds,json=batchIntervalSeconds,proto3" json:"batch_interval_seconds,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *RollingUpdateStrategy) Reset() {
	*x = RollingUpdateStrategy{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollingUpdateStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollingUpdateStrategy) ProtoMessage() {}

func (x *RollingUpdateStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollingUpdateStrategy.ProtoReflect.Descriptor instead.
func (*RollingUpdateStrategy) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{22}
}

func (x *RollingUpdateStrategy) GetMaxUnavailable() int32 {
	if x != nil {
		return x.MaxUnavailable
	}
	return 0
}

func (x *RollingUpdateStrategy) GetMaxSurge() int32 {
	if x != nil {
		return x.MaxSurge
	}
	return 0
}

func (x *RollingUpdateStrategy) GetBatchSize() int32 {
	if x != nil {
		return x.BatchSize
	}
	return 0
}

func (x *RollingUpdateStrategy) GetBatchIntervalSeconds() int32 {
	if x != nil {
		return x.BatchIntervalSeconds
	}
	return 0
}

type BlueGreenStrategy struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	TrafficSwitchDelaySeconds int32                  `protobuf:"varint,1,opt,name=traffic_switch_delay_seconds,json=trafficSwitchDelaySeconds,proto3" json:"traffic_switch_delay_seconds,omitempty"`
	ValidationPeriodSeconds   int32                  `protobuf:"varint,2,opt,name=validation_period_seconds,json=validationPeriodSeconds,proto3" json:"validation_period_seconds,omitempty"`
	AutoPromote               bool                   `protobuf:"varint,3,opt,name=auto_promote,json=autoPromote,proto3" json:"auto_promote,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *BlueGreenStrategy) Reset() {
	*x = BlueGreenStrategy{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlueGreenStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlueGreenStrategy) ProtoMessage() {}

func (x *BlueGreenStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlueGreenStrategy.ProtoReflect.Descriptor instead.
func (*BlueGreenStrategy) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{23}
}

func (x *BlueGreenStrategy) GetTrafficSwitchDelaySeconds() int32 {
	if x != nil {
		return x.TrafficSwitchDelaySeconds
	}
	return 0
}

func (x *BlueGreenStrategy) GetValidationPeriodSeconds() int32 {
	if x != nil {
		return x.ValidationPeriodSeconds
	}
	return 0
}

func (x *BlueGreenStrategy) GetAutoPromote() bool {
	if x != nil {
		return x.AutoPromote
	}
	return false
}

type AllAtOnceStrategy struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TimeoutSeconds int32                  `protobuf:"varint,1,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AllAtOnceStrategy) Reset() {
	*x = AllAtOnceStrategy{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AllAtOnceStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllAtOnceStrategy) ProtoMessage() {}

func (x *AllAtOnceStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllAtOnceStrategy.ProtoReflect.Descriptor instead.
func (*AllAtOnceStrategy) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{24}
}

func (x *AllAtOnceStrategy) GetTimeoutSeconds() int32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

type SuccessCriteria struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	MinSuccessRate    float32                `protobuf:"fixed32,1,opt,name=min_success_rate,json=minSuccessRate,proto3" json:"min_success_rate,omitempty"` // 0.95 = 95%
	MinHealthySeconds int32                  `protobuf:"varint,2,opt,name=min_healthy_seconds,json=minHealthySeconds,proto3" json:"min_healthy_seconds,omitempty"`
	MaxErrorRate      float32                `protobuf:"fixed32,3,opt,name=max_error_rate,json=maxErrorRate,proto3" json:"max_error_rate,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *SuccessCriteria) Reset() {
	*x = SuccessCriteria{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SuccessCriteria) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuccessCriteria) ProtoMessage() {}

func (x *SuccessCriteria) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuccessCriteria.ProtoReflect.Descriptor instead.
func (*SuccessCriteria) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{25}
}

func (x *SuccessCriteria) GetMinSuccessRate() float32 {
	if x != nil {
		return x.MinSuccessRate
	}
	return 0
}

func (x *SuccessCriteria) GetMinHealthySeconds() int32 {
	if x != nil {
		return x.MinHealthySeconds
	}
	return 0
}

func (x *SuccessCriteria) GetMaxErrorRate() float32 {
	if x != nil {
		return x.MaxErrorRate
	}
	return 0
}

type RollbackConfig struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Enabled         bool                   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Triggers        []*RollbackTrigger     `protobuf:"bytes,2,rep,name=triggers,proto3" json:"triggers,omitempty"`
	FallbackVersion string                 `protobuf:"bytes,3,opt,name=fallback_version,json=fallbackVersion,proto3" json:"fallback_version,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RollbackConfig) Reset() {
	*x = RollbackConfig{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollbackConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollbackConfig) ProtoMessage() {}

func (x *RollbackConfig) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollbackConfig.ProtoReflect.Descriptor instead.
func (*RollbackConfig) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{26}
}

func (x *RollbackConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *RollbackConfig) GetTriggers() []*RollbackTrigger {
	if x != nil {
		return x.Triggers
	}
	return nil
}

func (x *RollbackConfig) GetFallbackVersion() string {
	if x != nil {
		return x.FallbackVersion
	}
	return ""
}

type RollbackTrigger struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Type            TriggerType            `protobuf:"varint,1,opt,name=type,proto3,enum=fleetd.v1.TriggerType" json:"type,omitempty"`
	Threshold       float32                `protobuf:"fixed32,2,opt,name=threshold,proto3" json:"threshold,omitempty"`
	DurationSeconds int32                  `protobuf:"varint,3,opt,name=duration_seconds,json=durationSeconds,proto3" json:"duration_seconds,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RollbackTrigger) Reset() {
	*x = RollbackTrigger{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollbackTrigger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollbackTrigger) ProtoMessage() {}

func (x *RollbackTrigger) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollbackTrigger.ProtoReflect.Descriptor instead.
func (*RollbackTrigger) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{27}
}

func (x *RollbackTrigger) GetType() TriggerType {
	if x != nil {
		return x.Type
	}
	return TriggerType_TRIGGER_TYPE_UNSPECIFIED
}

func (x *RollbackTrigger) GetThreshold() float32 {
	if x != nil {
		return x.Threshold
	}
	return 0
}

func (x *RollbackTrigger) GetDurationSeconds() int32 {
	if x != nil {
		return x.DurationSeconds
	}
	return 0
}

type DeploymentResult struct {
	state          protoimpl.MessageState    `protogen:"open.v1"`
	TotalDevices   int32                     `protobuf:"varint,1,opt,name=total_devices,json=totalDevices,proto3" json:"total_devices,omitempty"`
	Succeeded      int32                     `protobuf:"varint,2,opt,name=succeeded,proto3" json:"succeeded,omitempty"`
	Failed         int32                     `protobuf:"varint,3,opt,name=failed,proto3" json:"failed,omitempty"`
	InProgress     int32                     `protobuf:"varint,4,opt,name=in_progress,json=inProgress,proto3" json:"in_progress,omitempty"`
	DeviceStatuses []*DeviceDeploymentStatus `protobuf:"bytes,5,rep,name=device_statuses,json=deviceStatuses,proto3" json:"device_statuses,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DeploymentResult) Reset() {
	*x = DeploymentResult{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeploymentResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentResult) ProtoMessage() {}

func (x *DeploymentResult) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentResult.ProtoReflect.Descriptor instead.
func (*DeploymentResult) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{28}
}

func (x *DeploymentResult) GetTotalDevices() int32 {
	if x != nil {
		return x.TotalDevices
	}
	return 0
}

func (x *DeploymentResult) GetSucceeded() int32 {
	if x != nil {
		return x.Succeeded
	}
	return 0
}

func (x *DeploymentResult) GetFailed() int32 {
	if x != nil {
		return x.Failed
	}
	return 0
}

func (x *DeploymentResult) GetInProgress() int32 {
	if x != nil {
		return x.InProgress
	}
	return 0
}

func (x *DeploymentResult) GetDeviceStatuses() []*DeviceDeploymentStatus {
	if x != nil {
		return x.DeviceStatuses
	}
	return nil
}

type DeviceDeploymentStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceId      string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Status        DeploymentStatus       `protobuf:"varint,2,opt,name=status,proto3,enum=fleetd.v1.DeploymentStatus" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeviceDeploymentStatus) Reset() {
	*x = DeviceDeploymentStatus{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceDeploymentStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceDeploymentStatus) ProtoMessage() {}

func (x *DeviceDeploymentStatus) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceDeploymentStatus.ProtoReflect.Descriptor instead.
func (*DeviceDeploymentStatus) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{29}
}

func (x *DeviceDeploymentStatus) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *DeviceDeploymentStatus) GetStatus() DeploymentStatus {
	if x != nil {
		return x.Status
	}
	return DeploymentStatus_DEPLOYMENT_STATUS_UNSPECIFIED
}

func (x *DeviceDeploymentStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeviceDeploymentStatus) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// Process monitoring
type ProcessStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AppId         string                 `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	DeviceId      string                 `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Pid           int32                  `protobuf:"varint,3,opt,name=pid,proto3" json:"pid,omitempty"`
	State         ProcessState           `protobuf:"varint,4,opt,name=state,proto3,enum=fleetd.v1.ProcessState" json:"state,omitempty"`
	RestartCount  int32                  `protobuf:"varint,5,opt,name=restart_count,json=restartCount,proto3" json:"restart_count,omitempty"`
	UptimeSeconds int64                  `protobuf:"varint,6,opt,name=uptime_seconds,json=uptimeSeconds,proto3" json:"uptime_seconds,omitempty"`
	// Resource usage
	CpuPercent     float32 `protobuf:"fixed32,7,opt,name=cpu_percent,json=cpuPercent,proto3" json:"cpu_percent,omitempty"`
	MemoryBytes    int64   `protobuf:"varint,8,opt,name=memory_bytes,json=memoryBytes,proto3" json:"memory_bytes,omitempty"`
	DiskReadBytes  int64   `protobuf:"varint,9,opt,name=disk_read_bytes,json=diskReadBytes,proto3" json:"disk_read_bytes,omitempty"`
	DiskWriteBytes int64   `protobuf:"varint,10,opt,name=disk_write_bytes,json=diskWriteBytes,proto3" json:"disk_write_bytes,omitempty"`
	// Health
	Healthy       bool                   `protobuf:"varint,11,opt,name=healthy,proto3" json:"healthy,omitempty"`
	HealthMessage string                 `protobuf:"bytes,12,opt,name=health_message,json=healthMessage,proto3" json:"health_message,omitempty"`
	StartedAt     *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessStatus) Reset() {
	*x = ProcessStatus{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessStatus) ProtoMessage() {}

func (x *ProcessStatus) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessStatus.ProtoReflect.Descriptor instead.
func (*ProcessStatus) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{30}
}

func (x *ProcessStatus) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *ProcessStatus) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *ProcessStatus) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *ProcessStatus) GetState() ProcessState {
	if x != nil {
		return x.State
	}
	return ProcessState_PROCESS_STATE_UNSPECIFIED
}

func (x *ProcessStatus) GetRestartCount() int32 {
	if x != nil {
		return x.RestartCount
	}
	return 0
}

func (x *ProcessStatus) GetUptimeSeconds() int64 {
	if x != nil {
		return x.UptimeSeconds
	}
	return 0
}

func (x *ProcessStatus) GetCpuPercent() float32 {
	if x != nil {
		return x.CpuPercent
	}
	return 0
}

func (x *ProcessStatus) GetMemoryBytes() int64 {
	if x != nil {
		return x.MemoryBytes
	}
	return 0
}

func (x *ProcessStatus) GetDiskReadBytes() int64 {
	if x != nil {
		return x.DiskReadBytes
	}
	return 0
}

func (x *ProcessStatus) GetDiskWriteBytes() int64 {
	if x != nil {
		return x.DiskWriteBytes
	}
	return 0
}

func (x *ProcessStatus) GetHealthy() bool {
	if x != nil {
		return x.Healthy
	}
	return false
}

func (x *ProcessStatus) GetHealthMessage() string {
	if x != nil {
		return x.HealthMessage
	}
	return ""
}

func (x *ProcessStatus) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

// RPC Messages
type UploadArtifactRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Data:
	//
	//	*UploadArtifactRequest_Metadata
	//	*UploadArtifactRequest_Chunk
	Data          isUploadArtifactRequest_Data `protobuf_oneof:"data"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadArtifactRequest) Reset() {
	*x = UploadArtifactRequest{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadArtifactRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadArtifactRequest) ProtoMessage() {}

func (x *UploadArtifactRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadArtifactRequest.ProtoReflect.Descriptor instead.
func (*UploadArtifactRequest) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{31}
}

func (x *UploadArtifactRequest) GetData() isUploadArtifactRequest_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UploadArtifactRequest) GetMetadata() *ArtifactMetadata {
	if x != nil {
		if x, ok := x.Data.(*UploadArtifactRequest_Metadata); ok {
			return x.Metadata
		}
	}
	return nil
}

func (x *UploadArtifactRequest) GetChunk() []byte {
	if x != nil {
		if x, ok := x.Data.(*UploadArtifactRequest_Chunk); ok {
			return x.Chunk
		}
	}
	return nil
}

type isUploadArtifactRequest_Data interface {
	isUploadArtifactRequest_Data()
}

type UploadArtifactRequest_Metadata struct {
	Metadata *ArtifactMetadata `protobuf:"bytes,1,opt,name=metadata,proto3,oneof"`
}

type UploadArtifactRequest_Chunk struct {
	Chunk []byte `protobuf:"bytes,2,opt,name=chunk,proto3,oneof"`
}

func (*UploadArtifactRequest_Metadata) isUploadArtifactRequest_Data() {}

func (*UploadArtifactRequest_Chunk) isUploadArtifactRequest_Data() {}

type ArtifactMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Type          ArtifactType           `protobuf:"varint,3,opt,name=type,proto3,enum=fleetd.v1.ArtifactType" json:"type,omitempty"`
	Platforms     []*Platform            `protobuf:"bytes,4,rep,name=platforms,proto3" json:"platforms,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	BuildInfo     *BuildInfo             `protobuf:"bytes,6,opt,name=build_info,json=buildInfo,proto3" json:"build_info,omitempty"`
	Requirements  *Requirements          `protobuf:"bytes,7,opt,name=requirements,proto3" json:"requirements,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ArtifactMetadata) Reset() {
	*x = ArtifactMetadata{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArtifactMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtifactMetadata) ProtoMessage() {}

func (x *ArtifactMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtifactMetadata.ProtoReflect.Descriptor instead.
func (*ArtifactMetadata) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{32}
}

func (x *ArtifactMetadata) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ArtifactMetadata) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ArtifactMetadata) GetType() ArtifactType {
	if x != nil {
		return x.Type
	}
	return ArtifactType_ARTIFACT_TYPE_UNSPECIFIED
}

func (x *ArtifactMetadata) GetPlatforms() []*Platform {
	if x != nil {
		return x.Platforms
	}
	return nil
}

func (x *ArtifactMetadata) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ArtifactMetadata) GetBuildInfo() *BuildInfo {
	if x != nil {
		return x.BuildInfo
	}
	return nil
}

func (x *ArtifactMetadata) GetRequirements() *Requirements {
	if x != nil {
		return x.Requirements
	}
	return nil
}

type UploadArtifactResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ArtifactId    string                 `protobuf:"bytes,1,opt,name=artifact_id,json=artifactId,proto3" json:"artifact_id,omitempty"`
	DownloadUrl   string                 `protobuf:"bytes,2,opt,name=download_url,json=downloadUrl,proto3" json:"download_url,omitempty"`
	Checksums     map[string]string      `protobuf:"bytes,3,rep,name=checksums,proto3" json:"checksums,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadArtifactResponse) Reset() {
	*x = UploadArtifactResponse{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadArtifactResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadArtifactResponse) ProtoMessage() {}

func (x *UploadArtifactResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadArtifactResponse.ProtoReflect.Descriptor instead.
func (*UploadArtifactResponse) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{33}
}

func (x *UploadArtifactResponse) GetArtifactId() string {
	if x != nil {
		return x.ArtifactId
	}
	return ""
}

func (x *UploadArtifactResponse) GetDownloadUrl() string {
	if x != nil {
		return x.DownloadUrl
	}
	return ""
}

func (x *UploadArtifactResponse) GetChecksums() map[string]string {
	if x != nil {
		return x.Checksums
	}
	return nil
}

type GetArtifactRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetArtifactRequest) Reset() {
	*x = GetArtifactRequest{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetArtifactRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArtifactRequest) ProtoMessage() {}

func (x *GetArtifactRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArtifactRequest.ProtoReflect.Descriptor instead.
func (*GetArtifactRequest) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{34}
}

func (x *GetArtifactRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetArtifactRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type GetArtifactResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Artifact      *Artifact              `protobuf:"bytes,1,opt,name=artifact,proto3" json:"artifact,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetArtifactResponse) Reset() {
	*x = GetArtifactResponse{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetArtifactResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArtifactResponse) ProtoMessage() {}

func (x *GetArtifactResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArtifactResponse.ProtoReflect.Descriptor instead.
func (*GetArtifactResponse) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{35}
}

func (x *GetArtifactResponse) GetArtifact() *Artifact {
	if x != nil {
		return x.Artifact
	}
	return nil
}

type ListArtifactsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	PageSize      int32                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken     string                 `protobuf:"bytes,4,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListArtifactsRequest) Reset() {
	*x = ListArtifactsRequest{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListArtifactsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListArtifactsRequest) ProtoMessage() {}

func (x *ListArtifactsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListArtifactsRequest.ProtoReflect.Descriptor instead.
func (*ListArtifactsRequest) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{36}
}

func (x *ListArtifactsRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListArtifactsRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ListArtifactsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListArtifactsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListArtifactsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Artifacts     []*Artifact            `protobuf:"bytes,1,rep,name=artifacts,proto3" json:"artifacts,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListArtifactsResponse) Reset() {
	*x = ListArtifactsResponse{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListArtifactsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListArtifactsResponse) ProtoMessage() {}

func (x *ListArtifactsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListArtifactsResponse.ProtoReflect.Descriptor instead.
func (*ListArtifactsResponse) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{37}
}

func (x *ListArtifactsResponse) GetArtifacts() []*Artifact {
	if x != nil {
		return x.Artifacts
	}
	return nil
}

func (x *ListArtifactsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type DeleteArtifactRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ArtifactId    string                 `protobuf:"bytes,1,opt,name=artifact_id,json=artifactId,proto3" json:"artifact_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteArtifactRequest) Reset() {
	*x = DeleteArtifactRequest{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteArtifactRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteArtifactRequest) ProtoMessage() {}

func (x *DeleteArtifactRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteArtifactRequest.ProtoReflect.Descriptor instead.
func (*DeleteArtifactRequest) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{38}
}

func (x *DeleteArtifactRequest) GetArtifactId() string {
	if x != nil {
		return x.ArtifactId
	}
	return ""
}

type DeleteArtifactResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteArtifactResponse) Reset() {
	*x = DeleteArtifactResponse{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteArtifactResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteArtifactResponse) ProtoMessage() {}

func (x *DeleteArtifactResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteArtifactResponse.ProtoReflect.Descriptor instead.
func (*DeleteArtifactResponse) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{39}
}

func (x *DeleteArtifactResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type GetDownloadURLRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ArtifactId    string                 `protobuf:"bytes,1,opt,name=artifact_id,json=artifactId,proto3" json:"artifact_id,omitempty"`
	DeviceId      string                 `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	ExpirySeconds int32                  `protobuf:"varint,3,opt,name=expiry_seconds,json=expirySeconds,proto3" json:"expiry_seconds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDownloadURLRequest) Reset() {
	*x = GetDownloadURLRequest{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDownloadURLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDownloadURLRequest) ProtoMessage() {}

func (x *GetDownloadURLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDownloadURLRequest.ProtoReflect.Descriptor instead.
func (*GetDownloadURLRequest) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{40}
}

func (x *GetDownloadURLRequest) GetArtifactId() string {
	if x != nil {
		return x.ArtifactId
	}
	return ""
}

func (x *GetDownloadURLRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *GetDownloadURLRequest) GetExpirySeconds() int32 {
	if x != nil {
		return x.ExpirySeconds
	}
	return 0
}

type GetDownloadURLResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	ExpiresAt     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	Headers       map[string]string      `protobuf:"bytes,3,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // For authentication
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDownloadURLResponse) Reset() {
	*x = GetDownloadURLResponse{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDownloadURLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDownloadURLResponse) ProtoMessage() {}

func (x *GetDownloadURLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDownloadURLResponse.ProtoReflect.Descriptor instead.
func (*GetDownloadURLResponse) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{41}
}

func (x *GetDownloadURLResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *GetDownloadURLResponse) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *GetDownloadURLResponse) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

type CreateApplicationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Application   *Application           `protobuf:"bytes,1,opt,name=application,proto3" json:"application,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateApplicationRequest) Reset() {
	*x = CreateApplicationRequest{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateApplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateApplicationRequest) ProtoMessage() {}

func (x *CreateApplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateApplicationRequest.ProtoReflect.Descriptor instead.
func (*CreateApplicationRequest) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{42}
}

func (x *CreateApplicationRequest) GetApplication() *Application {
	if x != nil {
		return x.Application
	}
	return nil
}

type CreateApplicationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ApplicationId string                 `protobuf:"bytes,1,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateApplicationResponse) Reset() {
	*x = CreateApplicationResponse{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateApplicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateApplicationResponse) ProtoMessage() {}

func (x *CreateApplicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateApplicationResponse.ProtoReflect.Descriptor instead.
func (*CreateApplicationResponse) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{43}
}

func (x *CreateApplicationResponse) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

type GetApplicationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ApplicationId string                 `protobuf:"bytes,1,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetApplicationRequest) Reset() {
	*x = GetApplicationRequest{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetApplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApplicationRequest) ProtoMessage() {}

func (x *GetApplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApplicationRequest.ProtoReflect.Descriptor instead.
func (*GetApplicationRequest) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{44}
}

func (x *GetApplicationRequest) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

type GetApplicationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Application   *Application           `protobuf:"bytes,1,opt,name=application,proto3" json:"application,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetApplicationResponse) Reset() {
	*x = GetApplicationResponse{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetApplicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApplicationResponse) ProtoMessage() {}

func (x *GetApplicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApplicationResponse.ProtoReflect.Descriptor instead.
func (*GetApplicationResponse) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{45}
}

func (x *GetApplicationResponse) GetApplication() *Application {
	if x != nil {
		return x.Application
	}
	return nil
}

type ListApplicationsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Labels        map[string]string      `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	PageSize      int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken     string                 `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListApplicationsRequest) Reset() {
	*x = ListApplicationsRequest{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListApplicationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListApplicationsRequest) ProtoMessage() {}

func (x *ListApplicationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListApplicationsRequest.ProtoReflect.Descriptor instead.
func (*ListApplicationsRequest) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{46}
}

func (x *ListApplicationsRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ListApplicationsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListApplicationsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListApplicationsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Applications  []*Application         `protobuf:"bytes,1,rep,name=applications,proto3" json:"applications,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListApplicationsResponse) Reset() {
	*x = ListApplicationsResponse{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListApplicationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListApplicationsResponse) ProtoMessage() {}

func (x *ListApplicationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListApplicationsResponse.ProtoReflect.Descriptor instead.
func (*ListApplicationsResponse) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{47}
}

func (x *ListApplicationsResponse) GetApplications() []*Application {
	if x != nil {
		return x.Applications
	}
	return nil
}

func (x *ListApplicationsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type DeleteApplicationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ApplicationId string                 `protobuf:"bytes,1,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteApplicationRequest) Reset() {
	*x = DeleteApplicationRequest{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteApplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteApplicationRequest) ProtoMessage() {}

func (x *DeleteApplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteApplicationRequest.ProtoReflect.Descriptor instead.
func (*DeleteApplicationRequest) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{48}
}

func (x *DeleteApplicationRequest) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

type DeleteApplicationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteApplicationResponse) Reset() {
	*x = DeleteApplicationResponse{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteApplicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteApplicationResponse) ProtoMessage() {}

func (x *DeleteApplicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteApplicationResponse.ProtoReflect.Descriptor instead.
func (*DeleteApplicationResponse) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{49}
}

func (x *DeleteApplicationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type CreateDeploymentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Deployment    *Deployment            `protobuf:"bytes,1,opt,name=deployment,proto3" json:"deployment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDeploymentRequest) Reset() {
	*x = CreateDeploymentRequest{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDeploymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeploymentRequest) ProtoMessage() {}

func (x *CreateDeploymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeploymentRequest.ProtoReflect.Descriptor instead.
func (*CreateDeploymentRequest) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{50}
}

func (x *CreateDeploymentRequest) GetDeployment() *Deployment {
	if x != nil {
		return x.Deployment
	}
	return nil
}

type CreateDeploymentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeploymentId  string                 `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDeploymentResponse) Reset() {
	*x = CreateDeploymentResponse{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDeploymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeploymentResponse) ProtoMessage() {}

func (x *CreateDeploymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeploymentResponse.ProtoReflect.Descriptor instead.
func (*CreateDeploymentResponse) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{51}
}

func (x *CreateDeploymentResponse) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

type GetDeploymentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeploymentId  string                 `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDeploymentRequest) Reset() {
	*x = GetDeploymentRequest{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeploymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeploymentRequest) ProtoMessage() {}

func (x *GetDeploymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeploymentRequest.ProtoReflect.Descriptor instead.
func (*GetDeploymentRequest) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{52}
}

func (x *GetDeploymentRequest) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

type GetDeploymentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Deployment    *Deployment            `protobuf:"bytes,1,opt,name=deployment,proto3" json:"deployment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDeploymentResponse) Reset() {
	*x = GetDeploymentResponse{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeploymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeploymentResponse) ProtoMessage() {}

func (x *GetDeploymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeploymentResponse.ProtoReflect.Descriptor instead.
func (*GetDeploymentResponse) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{53}
}

func (x *GetDeploymentResponse) GetDeployment() *Deployment {
	if x != nil {
		return x.Deployment
	}
	return nil
}

type ListDeploymentsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ApplicationId string                 `protobuf:"bytes,1,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
	Status        DeploymentStatus       `protobuf:"varint,2,opt,name=status,proto3,enum=fleetd.v1.DeploymentStatus" json:"status,omitempty"`
	PageSize      int32                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken     string                 `protobuf:"bytes,4,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDeploymentsRequest) Reset() {
	*x = ListDeploymentsRequest{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDeploymentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDeploymentsRequest) ProtoMessage() {}

func (x *ListDeploymentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDeploymentsRequest.ProtoReflect.Descriptor instead.
func (*ListDeploymentsRequest) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{54}
}

func (x *ListDeploymentsRequest) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

func (x *ListDeploymentsRequest) GetStatus() DeploymentStatus {
	if x != nil {
		return x.Status
	}
	return DeploymentStatus_DEPLOYMENT_STATUS_UNSPECIFIED
}

func (x *ListDeploymentsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListDeploymentsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListDeploymentsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Deployments   []*Deployment          `protobuf:"bytes,1,rep,name=deployments,proto3" json:"deployments,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDeploymentsResponse) Reset() {
	*x = ListDeploymentsResponse{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDeploymentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDeploymentsResponse) ProtoMessage() {}

func (x *ListDeploymentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDeploymentsResponse.ProtoReflect.Descriptor instead.
func (*ListDeploymentsResponse) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{55}
}

func (x *ListDeploymentsResponse) GetDeployments() []*Deployment {
	if x != nil {
		return x.Deployments
	}
	return nil
}

func (x *ListDeploymentsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type CancelDeploymentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeploymentId  string                 `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	Rollback      bool                   `protobuf:"varint,2,opt,name=rollback,proto3" json:"rollback,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelDeploymentRequest) Reset() {
	*x = CancelDeploymentRequest{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelDeploymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelDeploymentRequest) ProtoMessage() {}

func (x *CancelDeploymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelDeploymentRequest.ProtoReflect.Descriptor instead.
func (*CancelDeploymentRequest) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{56}
}

func (x *CancelDeploymentRequest) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

func (x *CancelDeploymentRequest) GetRollback() bool {
	if x != nil {
		return x.Rollback
	}
	return false
}

type CancelDeploymentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelDeploymentResponse) Reset() {
	*x = CancelDeploymentResponse{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelDeploymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelDeploymentResponse) ProtoMessage() {}

func (x *CancelDeploymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelDeploymentResponse.ProtoReflect.Descriptor instead.
func (*CancelDeploymentResponse) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{57}
}

func (x *CancelDeploymentResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type GetDeploymentMetricsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeploymentId  string                 `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDeploymentMetricsRequest) Reset() {
	*x = GetDeploymentMetricsRequest{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeploymentMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeploymentMetricsRequest) ProtoMessage() {}

func (x *GetDeploymentMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeploymentMetricsRequest.ProtoReflect.Descriptor instead.
func (*GetDeploymentMetricsRequest) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{58}
}

func (x *GetDeploymentMetricsRequest) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

func (x *GetDeploymentMetricsRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *GetDeploymentMetricsRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

type GetDeploymentMetricsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metrics       []*DeploymentMetric    `protobuf:"bytes,1,rep,name=metrics,proto3" json:"metrics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDeploymentMetricsResponse) Reset() {
	*x = GetDeploymentMetricsResponse{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeploymentMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeploymentMetricsResponse) ProtoMessage() {}

func (x *GetDeploymentMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeploymentMetricsResponse.ProtoReflect.Descriptor instead.
func (*GetDeploymentMetricsResponse) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{59}
}

func (x *GetDeploymentMetricsResponse) GetMetrics() []*DeploymentMetric {
	if x != nil {
		return x.Metrics
	}
	return nil
}

type DeploymentMetric struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Timestamp         *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	SuccessRate       float32                `protobuf:"fixed32,2,opt,name=success_rate,json=successRate,proto3" json:"success_rate,omitempty"`
	ErrorRate         float32                `protobuf:"fixed32,3,opt,name=error_rate,json=errorRate,proto3" json:"error_rate,omitempty"`
	DevicesUpdated    int32                  `protobuf:"varint,4,opt,name=devices_updated,json=devicesUpdated,proto3" json:"devices_updated,omitempty"`
	DevicesFailed     int32                  `protobuf:"varint,5,opt,name=devices_failed,json=devicesFailed,proto3" json:"devices_failed,omitempty"`
	AvgDeploymentTime float32                `protobuf:"fixed32,6,opt,name=avg_deployment_time,json=avgDeploymentTime,proto3" json:"avg_deployment_time,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *DeploymentMetric) Reset() {
	*x = DeploymentMetric{}
	mi := &file_fleetd_v1_artifact_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeploymentMetric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentMetric) ProtoMessage() {}

func (x *DeploymentMetric) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_artifact_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentMetric.ProtoReflect.Descriptor instead.
func (*DeploymentMetric) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_artifact_proto_rawDescGZIP(), []int{60}
}

func (x *DeploymentMetric) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *DeploymentMetric) GetSuccessRate() float32 {
	if x != nil {
		return x.SuccessRate
	}
	return 0
}

func (x *DeploymentMetric) GetErrorRate() float32 {
	if x != nil {
		return x.ErrorRate
	}
	return 0
}

func (x *DeploymentMetric) GetDevicesUpdated() int32 {
	if x != nil {
		return x.DevicesUpdated
	}
	return 0
}

func (x *DeploymentMetric) GetDevicesFailed() int32 {
	if x != nil {
		return x.DevicesFailed
	}
	return 0
}

func (x *DeploymentMetric) GetAvgDeploymentTime() float32 {
	if x != nil {
		return x.AvgDeploymentTime
	}
	return 0
}

var File_fleetd_v1_artifact_proto protoreflect.FileDescriptor

const file_fleetd_v1_artifact_proto_rawDesc = "" +
	"\n" +
	"\x18fleetd/v1/artifact.proto\x12\tfleetd.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\xd6\x05\n" +
	"\bArtifact\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x12+\n" +
	"\x04type\x18\x04 \x01(\x0e2\x17.fleetd.v1.ArtifactTypeR\x04type\x123\n" +
	"\n" +
	"build_info\x18\x05 \x01(\v2\x14.fleetd.v1.BuildInfoR\tbuildInfo\x12;\n" +
	"\frequirements\x18\x06 \x01(\v2\x17.fleetd.v1.RequirementsR\frequirements\x124\n" +
	"\n" +
	"signatures\x18\a \x03(\v2\x14.fleetd.v1.SignatureR\n" +
	"signatures\x12@\n" +
	"\tchecksums\x18\b \x03(\v2\".fleetd.v1.Artifact.ChecksumsEntryR\tchecksums\x12\x12\n" +
	"\x04size\x18\t \x01(\x03R\x04size\x12\x1f\n" +
	"\vstorage_url\x18\n" +
	" \x01(\tR\n" +
	"storageUrl\x121\n" +
	"\tplatforms\x18\v \x03(\v2\x13.fleetd.v1.PlatformR\tplatforms\x129\n" +
	"\n" +
	"created_at\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x127\n" +
	"\x06labels\x18\r \x03(\v2\x1f.fleetd.v1.Artifact.LabelsEntryR\x06labels\x12 \n" +
	"\vdescription\x18\x0e \x01(\tR\vdescription\x1a<\n" +
	"\x0eChecksumsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xbc\x02\n" +
	"\tBuildInfo\x12\x1d\n" +
	"\n" +
	"commit_sha\x18\x01 \x01(\tR\tcommitSha\x12\x16\n" +
	"\x06branch\x18\x02 \x01(\tR\x06branch\x12!\n" +
	"\fbuild_number\x18\x03 \x01(\tR\vbuildNumber\x12\x18\n" +
	"\abuilder\x18\x04 \x01(\tR\abuilder\x129\n" +
	"\n" +
	"build_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tbuildTime\x12B\n" +
	"\n" +
	"build_args\x18\x06 \x03(\v2#.fleetd.v1.BuildInfo.BuildArgsEntryR\tbuildArgs\x1a<\n" +
	"\x0eBuildArgsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xf4\x01\n" +
	"\fRequirements\x12\x1d\n" +
	"\n" +
	"min_memory\x18\x01 \x01(\x03R\tminMemory\x12\x1f\n" +
	"\vmin_storage\x18\x02 \x01(\x03R\n" +
	"minStorage\x12\x1e\n" +
	"\vmin_cpu_mhz\x18\x03 \x01(\x05R\tminCpuMhz\x12\"\n" +
	"\fcapabilities\x18\x04 \x03(\tR\fcapabilities\x12\x1b\n" +
	"\tos_family\x18\x05 \x01(\tR\bosFamily\x12\x1d\n" +
	"\n" +
	"min_kernel\x18\x06 \x01(\tR\tminKernel\x12$\n" +
	"\rarchitectures\x18\a \x03(\tR\rarchitectures\"v\n" +
	"\tSignature\x12\x1c\n" +
	"\talgorithm\x18\x01 \x01(\tR\talgorithm\x12\x15\n" +
	"\x06key_id\x18\x02 \x01(\tR\x05keyId\x12\x1c\n" +
	"\tsignature\x18\x03 \x01(\fR\tsignature\x12\x16\n" +
	"\x06signer\x18\x04 \x01(\tR\x06signer\"H\n" +
	"\bPlatform\x12\x0e\n" +
	"\x02os\x18\x01 \x01(\tR\x02os\x12\x12\n" +
	"\x04arch\x18\x02 \x01(\tR\x04arch\x12\x18\n" +
	"\avariant\x18\x03 \x01(\tR\avariant\"\x91\a\n" +
	"\vApplication\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x124\n" +
	"\tartifacts\x18\x04 \x03(\v2\x16.fleetd.v1.ArtifactRefR\tartifacts\x12\x12\n" +
	"\x04args\x18\x05 \x03(\tR\x04args\x12I\n" +
	"\venvironment\x18\x06 \x03(\v2'.fleetd.v1.Application.EnvironmentEntryR\venvironment\x12\x1f\n" +
	"\vworking_dir\x18\a \x01(\tR\n" +
	"workingDir\x12?\n" +
	"\x0erestart_policy\x18\b \x01(\x0e2\x18.fleetd.v1.RestartPolicyR\rrestartPolicy\x12>\n" +
	"\rconfiguration\x18\t \x01(\v2\x18.fleetd.v1.ConfigurationR\rconfiguration\x122\n" +
	"\aruntime\x18\n" +
	" \x01(\v2\x18.fleetd.v1.RuntimeConfigR\aruntime\x129\n" +
	"\fhealth_check\x18\v \x01(\v2\x16.fleetd.v1.HealthCheckR\vhealthCheck\x122\n" +
	"\tresources\x18\f \x01(\v2\x14.fleetd.v1.ResourcesR\tresources\x12=\n" +
	"\tplacement\x18\r \x01(\v2\x1f.fleetd.v1.PlacementConstraintsR\tplacement\x129\n" +
	"\n" +
	"created_at\x18\x0e \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x0f \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12:\n" +
	"\x06labels\x18\x10 \x03(\v2\".fleetd.v1.Application.LabelsEntryR\x06labels\x1a>\n" +
	"\x10EnvironmentEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x84\x01\n" +
	"\vArtifactRef\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12+\n" +
	"\x04type\x18\x03 \x01(\x0e2\x17.fleetd.v1.ArtifactTypeR\x04type\x12\x1a\n" +
	"\brequired\x18\x04 \x01(\bR\brequired\"\xfe\x01\n" +
	"\rConfiguration\x12K\n" +
	"\venvironment\x18\x01 \x03(\v2).fleetd.v1.Configuration.EnvironmentEntryR\venvironment\x12+\n" +
	"\x05files\x18\x02 \x03(\v2\x15.fleetd.v1.ConfigFileR\x05files\x12\x12\n" +
	"\x04args\x18\x03 \x03(\tR\x04args\x12\x1f\n" +
	"\vworking_dir\x18\x04 \x01(\tR\n" +
	"workingDir\x1a>\n" +
	"\x10EnvironmentEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"N\n" +
	"\n" +
	"ConfigFile\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\x12\x12\n" +
	"\x04mode\x18\x03 \x01(\tR\x04mode\"\x90\x02\n" +
	"\rRuntimeConfig\x12*\n" +
	"\x04type\x18\x01 \x01(\x0e2\x16.fleetd.v1.RuntimeTypeR\x04type\x12?\n" +
	"\x0erestart_policy\x18\x02 \x01(\x0e2\x18.fleetd.v1.RestartPolicyR\rrestartPolicy\x126\n" +
	"\x17startup_timeout_seconds\x18\x03 \x01(\x05R\x15startupTimeoutSeconds\x120\n" +
	"\x14stop_timeout_seconds\x18\x04 \x01(\x05R\x12stopTimeoutSeconds\x12\x12\n" +
	"\x04user\x18\x05 \x01(\tR\x04user\x12\x14\n" +
	"\x05group\x18\x06 \x01(\tR\x05group\"\xc9\x02\n" +
	"\vHealthCheck\x120\n" +
	"\x04http\x18\x01 \x01(\v2\x1a.fleetd.v1.HTTPHealthCheckH\x00R\x04http\x12-\n" +
	"\x03tcp\x18\x02 \x01(\v2\x19.fleetd.v1.TCPHealthCheckH\x00R\x03tcp\x120\n" +
	"\x04exec\x18\x03 \x01(\v2\x1a.fleetd.v1.ExecHealthCheckH\x00R\x04exec\x12)\n" +
	"\x10interval_seconds\x18\x04 \x01(\x05R\x0fintervalSeconds\x12'\n" +
	"\x0ftimeout_seconds\x18\x05 \x01(\x05R\x0etimeoutSeconds\x12\x18\n" +
	"\aretries\x18\x06 \x01(\x05R\aretries\x120\n" +
	"\x14start_period_seconds\x18\a \x01(\x05R\x12startPeriodSecondsB\a\n" +
	"\x05check\"\xd0\x01\n" +
	"\x0fHTTPHealthCheck\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x12\n" +
	"\x04port\x18\x02 \x01(\x05R\x04port\x12\x16\n" +
	"\x06scheme\x18\x03 \x01(\tR\x06scheme\x12A\n" +
	"\aheaders\x18\x04 \x03(\v2'.fleetd.v1.HTTPHealthCheck.HeadersEntryR\aheaders\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"$\n" +
	"\x0eTCPHealthCheck\x12\x12\n" +
	"\x04port\x18\x01 \x01(\x05R\x04port\"+\n" +
	"\x0fExecHealthCheck\x12\x18\n" +
	"\acommand\x18\x01 \x03(\tR\acommand\"q\n" +
	"\tResources\x12/\n" +
	"\x06limits\x18\x01 \x01(\v2\x17.fleetd.v1.ResourceSpecR\x06limits\x123\n" +
	"\brequests\x18\x02 \x01(\v2\x17.fleetd.v1.ResourceSpecR\brequests\"\xaf\x01\n" +
	"\fResourceSpec\x12\x16\n" +
	"\x06memory\x18\x01 \x01(\x03R\x06memory\x12%\n" +
	"\x0ecpu_millicores\x18\x02 \x01(\x05R\rcpuMillicores\x12\x18\n" +
	"\astorage\x18\x03 \x01(\x03R\astorage\x12\x1b\n" +
	"\tgpu_count\x18\x04 \x01(\x05R\bgpuCount\x12)\n" +
	"\x10file_descriptors\x18\x05 \x01(\x05R\x0ffileDescriptors\"\xae\x02\n" +
	"\x14PlacementConstraints\x12\\\n" +
	"\x0fdevice_selector\x18\x01 \x03(\v23.fleetd.v1.PlacementConstraints.DeviceSelectorEntryR\x0edeviceSelector\x12@\n" +
	"\x0fnode_affinities\x18\x02 \x03(\v2\x17.fleetd.v1.NodeAffinityR\x0enodeAffinities\x123\n" +
	"\x15required_capabilities\x18\x03 \x03(\tR\x14requiredCapabilities\x1aA\n" +
	"\x13DeviceSelectorEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"T\n" +
	"\fNodeAffinity\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x1a\n" +
	"\boperator\x18\x02 \x01(\tR\boperator\x12\x16\n" +
	"\x06values\x18\x03 \x03(\tR\x06values\"\xa3\x04\n" +
	"\n" +
	"Deployment\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12%\n" +
	"\x0eapplication_id\x18\x02 \x01(\tR\rapplicationId\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x123\n" +
	"\x06target\x18\x04 \x01(\v2\x1b.fleetd.v1.DeploymentTargetR\x06target\x129\n" +
	"\bstrategy\x18\x05 \x01(\v2\x1d.fleetd.v1.DeploymentStrategyR\bstrategy\x123\n" +
	"\x06status\x18\x06 \x01(\x0e2\x1b.fleetd.v1.DeploymentStatusR\x06status\x125\n" +
	"\brollback\x18\a \x01(\v2\x19.fleetd.v1.RollbackConfigR\brollback\x129\n" +
	"\n" +
	"created_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"started_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tstartedAt\x12=\n" +
	"\fcompleted_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\vcompletedAt\x123\n" +
	"\x06result\x18\v \x01(\v2\x1b.fleetd.v1.DeploymentResultR\x06result\"\xf3\x01\n" +
	"\x10DeploymentTarget\x12\x1d\n" +
	"\n" +
	"device_ids\x18\x01 \x03(\tR\tdeviceIds\x12\x1b\n" +
	"\tgroup_ids\x18\x02 \x03(\tR\bgroupIds\x12E\n" +
	"\bselector\x18\x03 \x03(\v2).fleetd.v1.DeploymentTarget.SelectorEntryR\bselector\x12\x1f\n" +
	"\vmax_devices\x18\x04 \x01(\x05R\n" +
	"maxDevices\x1a;\n" +
	"\rSelectorEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x92\x02\n" +
	"\x12DeploymentStrategy\x123\n" +
	"\x06canary\x18\x01 \x01(\v2\x19.fleetd.v1.CanaryStrategyH\x00R\x06canary\x12<\n" +
	"\arolling\x18\x02 \x01(\v2 .fleetd.v1.RollingUpdateStrategyH\x00R\arolling\x12=\n" +
	"\n" +
	"blue_green\x18\x03 \x01(\v2\x1c.fleetd.v1.BlueGreenStrategyH\x00R\tblueGreen\x12>\n" +
	"\vall_at_once\x18\x04 \x01(\v2\x1c.fleetd.v1.AllAtOnceStrategyH\x00R\tallAtOnceB\n" +
	"\n" +
	"\bstrategy\"\xf7\x01\n" +
	"\x0eCanaryStrategy\x12-\n" +
	"\x12initial_percentage\x18\x01 \x01(\x05R\x11initialPercentage\x121\n" +
	"\x14increment_percentage\x18\x02 \x01(\x05R\x13incrementPercentage\x12<\n" +
	"\x1aincrement_interval_seconds\x18\x03 \x01(\x05R\x18incrementIntervalSeconds\x12E\n" +
	"\x10success_criteria\x18\x04 \x01(\v2\x1a.fleetd.v1.SuccessCriteriaR\x0fsuccessCriteria\"\xb2\x01\n" +
	"\x15RollingUpdateStrategy\x12'\n" +
	"\x0fmax_unavailable\x18\x01 \x01(\x05R\x0emaxUnavailable\x12\x1b\n" +
	"\tmax_surge\x18\x02 \x01(\x05R\bmaxSurge\x12\x1d\n" +
	"\n" +
	"batch_size\x18\x03 \x01(\x05R\tbatchSize\x124\n" +
	"\x16batch_interval_seconds\x18\x04 \x01(\x05R\x14batchIntervalSeconds\"\xb3\x01\n" +
	"\x11BlueGreenStrategy\x12?\n" +
	"\x1ctraffic_switch_delay_seconds\x18\x01 \x01(\x05R\x19trafficSwitchDelaySeconds\x12:\n" +
	"\x19validation_period_seconds\x18\x02 \x01(\x05R\x17validationPeriodSeconds\x12!\n" +
	"\fauto_promote\x18\x03 \x01(\bR\vautoPromote\"<\n" +
	"\x11AllAtOnceStrategy\x12'\n" +
	"\x0ftimeout_seconds\x18\x01 \x01(\x05R\x0etimeoutSeconds\"\x91\x01\n" +
	"\x0fSuccessCriteria\x12(\n" +
	"\x10min_success_rate\x18\x01 \x01(\x02R\x0eminSuccessRate\x12.\n" +
	"\x13min_healthy_seconds\x18\x02 \x01(\x05R\x11minHealthySeconds\x12$\n" +
	"\x0emax_error_rate\x18\x03 \x01(\x02R\fmaxErrorRate\"\x8d\x01\n" +
	"\x0eRollbackConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x126\n" +
	"\btriggers\x18\x02 \x03(\v2\x1a.fleetd.v1.RollbackTriggerR\btriggers\x12)\n" +
	"\x10fallback_version\x18\x03 \x01(\tR\x0ffallbackVersion\"\x86\x01\n" +
	"\x0fRollbackTrigger\x12*\n" +
	"\x04type\x18\x01 \x01(\x0e2\x16.fleetd.v1.TriggerTypeR\x04type\x12\x1c\n" +
	"\tthreshold\x18\x02 \x01(\x02R\tthreshold\x12)\n" +
	"\x10duration_seconds\x18\x03 \x01(\x05R\x0fdurationSeconds\"\xda\x01\n" +
	"\x10DeploymentResult\x12#\n" +
	"\rtotal_devices\x18\x01 \x01(\x05R\ftotalDevices\x12\x1c\n" +
	"\tsucceeded\x18\x02 \x01(\x05R\tsucceeded\x12\x16\n" +
	"\x06failed\x18\x03 \x01(\x05R\x06failed\x12\x1f\n" +
	"\vin_progress\x18\x04 \x01(\x05R\n" +
	"inProgress\x12J\n" +
	"\x0fdevice_statuses\x18\x05 \x03(\v2!.fleetd.v1.DeviceDeploymentStatusR\x0edeviceStatuses\"\xbf\x01\n" +
	"\x16DeviceDeploymentStatus\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x123\n" +
	"\x06status\x18\x02 \x01(\x0e2\x1b.fleetd.v1.DeploymentStatusR\x06status\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x129\n" +
	"\n" +
	"updated_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"\xe2\x03\n" +
	"\rProcessStatus\x12\x15\n" +
	"\x06app_id\x18\x01 \x01(\tR\x05appId\x12\x1b\n" +
	"\tdevice_id\x18\x02 \x01(\tR\bdeviceId\x12\x10\n" +
	"\x03pid\x18\x03 \x01(\x05R\x03pid\x12-\n" +
	"\x05state\x18\x04 \x01(\x0e2\x17.fleetd.v1.ProcessStateR\x05state\x12#\n" +
	"\rrestart_count\x18\x05 \x01(\x05R\frestartCount\x12%\n" +
	"\x0euptime_seconds\x18\x06 \x01(\x03R\ruptimeSeconds\x12\x1f\n" +
	"\vcpu_percent\x18\a \x01(\x02R\n" +
	"cpuPercent\x12!\n" +
	"\fmemory_bytes\x18\b \x01(\x03R\vmemoryBytes\x12&\n" +
	"\x0fdisk_read_bytes\x18\t \x01(\x03R\rdiskReadBytes\x12(\n" +
	"\x10disk_write_bytes\x18\n" +
	" \x01(\x03R\x0ediskWriteBytes\x12\x18\n" +
	"\ahealthy\x18\v \x01(\bR\ahealthy\x12%\n" +
	"\x0ehealth_message\x18\f \x01(\tR\rhealthMessage\x129\n" +
	"\n" +
	"started_at\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\tstartedAt\"r\n" +
	"\x15UploadArtifactRequest\x129\n" +
	"\bmetadata\x18\x01 \x01(\v2\x1b.fleetd.v1.ArtifactMetadataH\x00R\bmetadata\x12\x16\n" +
	"\x05chunk\x18\x02 \x01(\fH\x00R\x05chunkB\x06\n" +
	"\x04data\"\x8e\x03\n" +
	"\x10ArtifactMetadata\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12+\n" +
	"\x04type\x18\x03 \x01(\x0e2\x17.fleetd.v1.ArtifactTypeR\x04type\x121\n" +
	"\tplatforms\x18\x04 \x03(\v2\x13.fleetd.v1.PlatformR\tplatforms\x12?\n" +
	"\x06labels\x18\x05 \x03(\v2'.fleetd.v1.ArtifactMetadata.LabelsEntryR\x06labels\x123\n" +
	"\n" +
	"build_info\x18\x06 \x01(\v2\x14.fleetd.v1.BuildInfoR\tbuildInfo\x12;\n" +
	"\frequirements\x18\a \x01(\v2\x17.fleetd.v1.RequirementsR\frequirements\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xea\x01\n" +
	"\x16UploadArtifactResponse\x12\x1f\n" +
	"\vartifact_id\x18\x01 \x01(\tR\n" +
	"artifactId\x12!\n" +
	"\fdownload_url\x18\x02 \x01(\tR\vdownloadUrl\x12N\n" +
	"\tchecksums\x18\x03 \x03(\v20.fleetd.v1.UploadArtifactResponse.ChecksumsEntryR\tchecksums\x1a<\n" +
	"\x0eChecksumsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"B\n" +
	"\x12GetArtifactRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\"F\n" +
	"\x13GetArtifactResponse\x12/\n" +
	"\bartifact\x18\x01 \x01(\v2\x13.fleetd.v1.ArtifactR\bartifact\"\xe6\x01\n" +
	"\x14ListArtifactsRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12C\n" +
	"\x06labels\x18\x02 \x03(\v2+.fleetd.v1.ListArtifactsRequest.LabelsEntryR\x06labels\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x04 \x01(\tR\tpageToken\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"r\n" +
	"\x15ListArtifactsResponse\x121\n" +
	"\tartifacts\x18\x01 \x03(\v2\x13.fleetd.v1.ArtifactR\tartifacts\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"8\n" +
	"\x15DeleteArtifactRequest\x12\x1f\n" +
	"\vartifact_id\x18\x01 \x01(\tR\n" +
	"artifactId\"2\n" +
	"\x16DeleteArtifactResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"|\n" +
	"\x15GetDownloadURLRequest\x12\x1f\n" +
	"\vartifact_id\x18\x01 \x01(\tR\n" +
	"artifactId\x12\x1b\n" +
	"\tdevice_id\x18\x02 \x01(\tR\bdeviceId\x12%\n" +
	"\x0eexpiry_seconds\x18\x03 \x01(\x05R\rexpirySeconds\"\xeb\x01\n" +
	"\x16GetDownloadURLResponse\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\x129\n" +
	"\n" +
	"expires_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\x12H\n" +
	"\aheaders\x18\x03 \x03(\v2..fleetd.v1.GetDownloadURLResponse.HeadersEntryR\aheaders\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"T\n" +
	"\x18CreateApplicationRequest\x128\n" +
	"\vapplication\x18\x01 \x01(\v2\x16.fleetd.v1.ApplicationR\vapplication\"B\n" +
	"\x19CreateApplicationResponse\x12%\n" +
	"\x0eapplication_id\x18\x01 \x01(\tR\rapplicationId\">\n" +
	"\x15GetApplicationRequest\x12%\n" +
	"\x0eapplication_id\x18\x01 \x01(\tR\rapplicationId\"R\n" +
	"\x16GetApplicationResponse\x128\n" +
	"\vapplication\x18\x01 \x01(\v2\x16.fleetd.v1.ApplicationR\vapplication\"\xd8\x01\n" +
	"\x17ListApplicationsRequest\x12F\n" +
	"\x06labels\x18\x01 \x03(\v2..fleetd.v1.ListApplicationsRequest.LabelsEntryR\x06labels\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tR\tpageToken\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"~\n" +
	"\x18ListApplicationsResponse\x12:\n" +
	"\fapplications\x18\x01 \x03(\v2\x16.fleetd.v1.ApplicationR\fapplications\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"A\n" +
	"\x18DeleteApplicationRequest\x12%\n" +
	"\x0eapplication_id\x18\x01 \x01(\tR\rapplicationId\"5\n" +
	"\x19DeleteApplicationResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"P\n" +
	"\x17CreateDeploymentRequest\x125\n" +
	"\n" +
	"deployment\x18\x01 \x01(\v2\x15.fleetd.v1.DeploymentR\n" +
	"deployment\"?\n" +
	"\x18CreateDeploymentResponse\x12#\n" +
	"\rdeployment_id\x18\x01 \x01(\tR\fdeploymentId\";\n" +
	"\x14GetDeploymentRequest\x12#\n" +
	"\rdeployment_id\x18\x01 \x01(\tR\fdeploymentId\"N\n" +
	"\x15GetDeploymentResponse\x125\n" +
	"\n" +
	"deployment\x18\x01 \x01(\v2\x15.fleetd.v1.DeploymentR\n" +
	"deployment\"\xb0\x01\n" +
	"\x16ListDeploymentsRequest\x12%\n" +
	"\x0eapplication_id\x18\x01 \x01(\tR\rapplicationId\x123\n" +
	"\x06status\x18\x02 \x01(\x0e2\x1b.fleetd.v1.DeploymentStatusR\x06status\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x04 \x01(\tR\tpageToken\"z\n" +
	"\x17ListDeploymentsResponse\x127\n" +
	"\vdeployments\x18\x01 \x03(\v2\x15.fleetd.v1.DeploymentR\vdeployments\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"Z\n" +
	"\x17CancelDeploymentRequest\x12#\n" +
	"\rdeployment_id\x18\x01 \x01(\tR\fdeploymentId\x12\x1a\n" +
	"\brollback\x18\x02 \x01(\bR\brollback\"4\n" +
	"\x18CancelDeploymentResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"\xb4\x01\n" +
	"\x1bGetDeploymentMetricsRequest\x12#\n" +
	"\rdeployment_id\x18\x01 \x01(\tR\fdeploymentId\x129\n" +
	"\n" +
	"start_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\"U\n" +
	"\x1cGetDeploymentMetricsResponse\x125\n" +
	"\ametrics\x18\x01 \x03(\v2\x1b.fleetd.v1.DeploymentMetricR\ametrics\"\x8e\x02\n" +
	"\x10DeploymentMetric\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12!\n" +
	"\fsuccess_rate\x18\x02 \x01(\x02R\vsuccessRate\x12\x1d\n" +
	"\n" +
	"error_rate\x18\x03 \x01(\x02R\terrorRate\x12'\n" +
	"\x0fdevices_updated\x18\x04 \x01(\x05R\x0edevicesUpdated\x12%\n" +
	"\x0edevices_failed\x18\x05 \x01(\x05R\rdevicesFailed\x12.\n" +
	"\x13avg_deployment_time\x18\x06 \x01(\x02R\x11avgDeploymentTime*\xcf\x01\n" +
	"\fArtifactType\x12\x1d\n" +
	"\x19ARTIFACT_TYPE_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14ARTIFACT_TYPE_BINARY\x10\x01\x12\x1b\n" +
	"\x17ARTIFACT_TYPE_OCI_IMAGE\x10\x02\x12\x19\n" +
	"\x15ARTIFACT_TYPE_ARCHIVE\x10\x03\x12\x19\n" +
	"\x15ARTIFACT_TYPE_PACKAGE\x10\x04\x12\x19\n" +
	"\x15ARTIFACT_TYPE_NIXPACK\x10\x05\x12\x18\n" +
	"\x14ARTIFACT_TYPE_SCRIPT\x10\x06*\x91\x01\n" +
	"\vRuntimeType\x12\x1c\n" +
	"\x18RUNTIME_TYPE_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14RUNTIME_TYPE_SYSTEMD\x10\x01\x12\x17\n" +
	"\x13RUNTIME_TYPE_DOCKER\x10\x02\x12\x1b\n" +
	"\x17RUNTIME_TYPE_SUPERVISOR\x10\x03\x12\x14\n" +
	"\x10RUNTIME_TYPE_RAW\x10\x04*\x83\x01\n" +
	"\rRestartPolicy\x12\x1e\n" +
	"\x1aRESTART_POLICY_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15RESTART_POLICY_ALWAYS\x10\x01\x12\x1d\n" +
	"\x19RESTART_POLICY_ON_FAILURE\x10\x02\x12\x18\n" +
	"\x14RESTART_POLICY_NEVER\x10\x03*\xca\x01\n" +
	"\vTriggerType\x12\x1c\n" +
	"\x18TRIGGER_TYPE_UNSPECIFIED\x10\x00\x12\x1b\n" +
	"\x17TRIGGER_TYPE_CRASH_LOOP\x10\x01\x12 \n" +
	"\x1cTRIGGER_TYPE_HIGH_ERROR_RATE\x10\x02\x12%\n" +
	"!TRIGGER_TYPE_HEALTH_CHECK_FAILURE\x10\x03\x12\x19\n" +
	"\x15TRIGGER_TYPE_HIGH_CPU\x10\x04\x12\x1c\n" +
	"\x18TRIGGER_TYPE_HIGH_MEMORY\x10\x05*\x9e\x02\n" +
	"\x10DeploymentStatus\x12!\n" +
	"\x1dDEPLOYMENT_STATUS_UNSPECIFIED\x10\x00\x12\x1d\n" +
	"\x19DEPLOYMENT_STATUS_PENDING\x10\x01\x12!\n" +
	"\x1dDEPLOYMENT_STATUS_IN_PROGRESS\x10\x02\x12\x1f\n" +
	"\x1bDEPLOYMENT_STATUS_SUCCEEDED\x10\x03\x12\x1c\n" +
	"\x18DEPLOYMENT_STATUS_FAILED\x10\x04\x12\"\n" +
	"\x1eDEPLOYMENT_STATUS_ROLLING_BACK\x10\x05\x12!\n" +
	"\x1dDEPLOYMENT_STATUS_ROLLED_BACK\x10\x06\x12\x1f\n" +
	"\x1bDEPLOYMENT_STATUS_CANCELLED\x10\a*\xd4\x01\n" +
	"\fProcessState\x12\x1d\n" +
	"\x19PROCESS_STATE_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16PROCESS_STATE_STARTING\x10\x01\x12\x19\n" +
	"\x15PROCESS_STATE_RUNNING\x10\x02\x12\x1a\n" +
	"\x16PROCESS_STATE_STOPPING\x10\x03\x12\x19\n" +
	"\x15PROCESS_STATE_STOPPED\x10\x04\x12\x19\n" +
	"\x15PROCESS_STATE_CRASHED\x10\x05\x12\x1c\n" +
	"\x18PROCESS_STATE_RESTARTING\x10\x062\xba\x03\n" +
	"\x0fArtifactService\x12W\n" +
	"\x0eUploadArtifact\x12 .fleetd.v1.UploadArtifactRequest\x1a!.fleetd.v1.UploadArtifactResponse(\x01\x12L\n" +
	"\vGetArtifact\x12\x1d.fleetd.v1.GetArtifactRequest\x1a\x1e.fleetd.v1.GetArtifactResponse\x12R\n" +
	"\rListArtifacts\x12\x1f.fleetd.v1.ListArtifactsRequest\x1a .fleetd.v1.ListArtifactsResponse\x12U\n" +
	"\x0eDeleteArtifact\x12 .fleetd.v1.DeleteArtifactRequest\x1a!.fleetd.v1.DeleteArtifactResponse\x12U\n" +
	"\x0eGetDownloadURL\x12 .fleetd.v1.GetDownloadURLRequest\x1a!.fleetd.v1.GetDownloadURLResponse2\x88\x03\n" +
	"\x12ApplicationService\x12^\n" +
	"\x11CreateApplication\x12#.fleetd.v1.CreateApplicationRequest\x1a$.fleetd.v1.CreateApplicationResponse\x12U\n" +
	"\x0eGetApplication\x12 .fleetd.v1.GetApplicationRequest\x1a!.fleetd.v1.GetApplicationResponse\x12[\n" +
	"\x10ListApplications\x12\".fleetd.v1.ListApplicationsRequest\x1a#.fleetd.v1.ListApplicationsResponse\x12^\n" +
	"\x11DeleteApplication\x12#.fleetd.v1.DeleteApplicationRequest\x1a$.fleetd.v1.DeleteApplicationResponse2\xe4\x03\n" +
	"\x11DeploymentService\x12[\n" +
	"\x10CreateDeployment\x12\".fleetd.v1.CreateDeploymentRequest\x1a#.fleetd.v1.CreateDeploymentResponse\x12R\n" +
	"\rGetDeployment\x12\x1f.fleetd.v1.GetDeploymentRequest\x1a .fleetd.v1.GetDeploymentResponse\x12X\n" +
	"\x0fListDeployments\x12!.fleetd.v1.ListDeploymentsRequest\x1a\".fleetd.v1.ListDeploymentsResponse\x12[\n" +
	"\x10CancelDeployment\x12\".fleetd.v1.CancelDeploymentRequest\x1a#.fleetd.v1.CancelDeploymentResponse\x12g\n" +
	"\x14GetDeploymentMetrics\x12&.fleetd.v1.GetDeploymentMetricsRequest\x1a'.fleetd.v1.GetDeploymentMetricsResponseB\x84\x01\n" +
	"\rcom.fleetd.v1B\rArtifactProtoP\x01Z\x1ffleetd.sh/gen/fleetd/v1;fleetpb\xa2\x02\x03FXX\xaa\x02\tFleetd.V1\xca\x02\tFleetd\\V1\xe2\x02\x15Fleetd\\V1\\GPBMetadata\xea\x02\n" +
	"Fleetd::V1b\x06proto3"

var (
	file_fleetd_v1_artifact_proto_rawDescOnce sync.Once
	file_fleetd_v1_artifact_proto_rawDescData []byte
)

func file_fleetd_v1_artifact_proto_rawDescGZIP() []byte {
	file_fleetd_v1_artifact_proto_rawDescOnce.Do(func() {
		file_fleetd_v1_artifact_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_fleetd_v1_artifact_proto_rawDesc), len(file_fleetd_v1_artifact_proto_rawDesc)))
	})
	return file_fleetd_v1_artifact_proto_rawDescData
}

var file_fleetd_v1_artifact_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_fleetd_v1_artifact_proto_msgTypes = make([]protoimpl.MessageInfo, 75)
var file_fleetd_v1_artifact_proto_goTypes = []any{
	(ArtifactType)(0),                    // 0: fleetd.v1.ArtifactType
	(RuntimeType)(0),                     // 1: fleetd.v1.RuntimeType
	(RestartPolicy)(0),                   // 2: fleetd.v1.RestartPolicy
	(TriggerType)(0),                     // 3: fleetd.v1.TriggerType
	(DeploymentStatus)(0),                // 4: fleetd.v1.DeploymentStatus
	(ProcessState)(0),                    // 5: fleetd.v1.ProcessState
	(*Artifact)(nil),                     // 6: fleetd.v1.Artifact
	(*BuildInfo)(nil),                    // 7: fleetd.v1.BuildInfo
	(*Requirements)(nil),                 // 8: fleetd.v1.Requirements
	(*Signature)(nil),                    // 9: fleetd.v1.Signature
	(*Platform)(nil),                     // 10: fleetd.v1.Platform
	(*Application)(nil),                  // 11: fleetd.v1.Application
	(*ArtifactRef)(nil),                  // 12: fleetd.v1.ArtifactRef
	(*Configuration)(nil),                // 13: fleetd.v1.Configuration
	(*ConfigFile)(nil),                   // 14: fleetd.v1.ConfigFile
	(*RuntimeConfig)(nil),                // 15: fleetd.v1.RuntimeConfig
	(*HealthCheck)(nil),                  // 16: fleetd.v1.HealthCheck
	(*HTTPHealthCheck)(nil),              // 17: fleetd.v1.HTTPHealthCheck
	(*TCPHealthCheck)(nil),               // 18: fleetd.v1.TCPHealthCheck
	(*ExecHealthCheck)(nil),              // 19: fleetd.v1.ExecHealthCheck
	(*Resources)(nil),                    // 20: fleetd.v1.Resources
	(*ResourceSpec)(nil),                 // 21: fleetd.v1.ResourceSpec
	(*PlacementConstraints)(nil),         // 22: fleetd.v1.PlacementConstraints
	(*NodeAffinity)(nil),                 // 23: fleetd.v1.NodeAffinity
	(*Deployment)(nil),                   // 24: fleetd.v1.Deployment
	(*DeploymentTarget)(nil),             // 25: fleetd.v1.DeploymentTarget
	(*DeploymentStrategy)(nil),           // 26: fleetd.v1.DeploymentStrategy
	(*CanaryStrategy)(nil),               // 27: fleetd.v1.CanaryStrategy
	(*RollingUpdateStrategy)(nil),        // 28: fleetd.v1.RollingUpdateStrategy
	(*BlueGreenStrategy)(nil),            // 29: fleetd.v1.BlueGreenStrategy
	(*AllAtOnceStrategy)(nil),            // 30: fleetd.v1.AllAtOnceStrategy
	(*SuccessCriteria)(nil),              // 31: fleetd.v1.SuccessCriteria
	(*RollbackConfig)(nil),               // 32: fleetd.v1.RollbackConfig
	(*RollbackTrigger)(nil),              // 33: fleetd.v1.RollbackTrigger
	(*DeploymentResult)(nil),             // 34: fleetd.v1.DeploymentResult
	(*DeviceDeploymentStatus)(nil),       // 35: fleetd.v1.DeviceDeploymentStatus
	(*ProcessStatus)(nil),                // 36: fleetd.v1.ProcessStatus
	(*UploadArtifactRequest)(nil),        // 37: fleetd.v1.UploadArtifactRequest
	(*ArtifactMetadata)(nil),             // 38: fleetd.v1.ArtifactMetadata
	(*UploadArtifactResponse)(nil),       // 39: fleetd.v1.UploadArtifactResponse
	(*GetArtifactRequest)(nil),           // 40: fleetd.v1.GetArtifactRequest
	(*GetArtifactResponse)(nil),          // 41: fleetd.v1.GetArtifactResponse
	(*ListArtifactsRequest)(nil),         // 42: fleetd.v1.ListArtifactsRequest
	(*ListArtifactsResponse)(nil),        // 43: fleetd.v1.ListArtifactsResponse
	(*DeleteArtifactRequest)(nil),        // 44: fleetd.v1.DeleteArtifactRequest
	(*DeleteArtifactResponse)(nil),       // 45: fleetd.v1.DeleteArtifactResponse
	(*GetDownloadURLRequest)(nil),        // 46: fleetd.v1.GetDownloadURLRequest
	(*GetDownloadURLResponse)(nil),       // 47: fleetd.v1.GetDownloadURLResponse
	(*CreateApplicationRequest)(nil),     // 48: fleetd.v1.CreateApplicationRequest
	(*CreateApplicationResponse)(nil),    // 49: fleetd.v1.CreateApplicationResponse
	(*GetApplicationRequest)(nil),        // 50: fleetd.v1.GetApplicationRequest
	(*GetApplicationResponse)(nil),       // 51: fleetd.v1.GetApplicationResponse
	(*ListApplicationsRequest)(nil),      // 52: fleetd.v1.ListApplicationsRequest
	(*ListApplicationsResponse)(nil),     // 53: fleetd.v1.ListApplicationsResponse
	(*DeleteApplicationRequest)(nil),     // 54: fleetd.v1.DeleteApplicationRequest
	(*DeleteApplicationResponse)(nil),    // 55: fleetd.v1.DeleteApplicationResponse
	(*CreateDeploymentRequest)(nil),      // 56: fleetd.v1.CreateDeploymentRequest
	(*CreateDeploymentResponse)(nil),     // 57: fleetd.v1.CreateDeploymentResponse
	(*GetDeploymentRequest)(nil),         // 58: fleetd.v1.GetDeploymentRequest
	(*GetDeploymentResponse)(nil),        // 59: fleetd.v1.GetDeploymentResponse
	(*ListDeploymentsRequest)(nil),       // 60: fleetd.v1.ListDeploymentsRequest
	(*ListDeploymentsResponse)(nil),      // 61: fleetd.v1.ListDeploymentsResponse
	(*CancelDeploymentRequest)(nil),      // 62: fleetd.v1.CancelDeploymentRequest
	(*CancelDeploymentResponse)(nil),     // 63: fleetd.v1.CancelDeploymentResponse
	(*GetDeploymentMetricsRequest)(nil),  // 64: fleetd.v1.GetDeploymentMetricsRequest
	(*GetDeploymentMetricsResponse)(nil), // 65: fleetd.v1.GetDeploymentMetricsResponse
	(*DeploymentMetric)(nil),             // 66: fleetd.v1.DeploymentMetric
	nil,                                  // 67: fleetd.v1.Artifact.ChecksumsEntry
	nil,                                  // 68: fleetd.v1.Artifact.LabelsEntry
	nil,                                  // 69: fleetd.v1.BuildInfo.BuildArgsEntry
	nil,                                  // 70: fleetd.v1.Application.EnvironmentEntry
	nil,                                  // 71: fleetd.v1.Application.LabelsEntry
	nil,                                  // 72: fleetd.v1.Configuration.EnvironmentEntry
	nil,                                  // 73: fleetd.v1.HTTPHealthCheck.HeadersEntry
	nil,                                  // 74: fleetd.v1.PlacementConstraints.DeviceSelectorEntry
	nil,                                  // 75: fleetd.v1.DeploymentTarget.SelectorEntry
	nil,                                  // 76: fleetd.v1.ArtifactMetadata.LabelsEntry
	nil,                                  // 77: fleetd.v1.UploadArtifactResponse.ChecksumsEntry
	nil,                                  // 78: fleetd.v1.ListArtifactsRequest.LabelsEntry
	nil,                                  // 79: fleetd.v1.GetDownloadURLResponse.HeadersEntry
	nil,                                  // 80: fleetd.v1.ListApplicationsRequest.LabelsEntry
	(*timestamppb.Timestamp)(nil),        // 81: google.protobuf.Timestamp
}
var file_fleetd_v1_artifact_proto_depIdxs = []int32{
	0,  // 0: fleetd.v1.Artifact.type:type_name -> fleetd.v1.ArtifactType
	7,  // 1: fleetd.v1.Artifact.build_info:type_name -> fleetd.v1.BuildInfo
	8,  // 2: fleetd.v1.Artifact.requirements:type_name -> fleetd.v1.Requirements
	9,  // 3: fleetd.v1.Artifact.signatures:type_name -> fleetd.v1.Signature
	67, // 4: fleetd.v1.Artifact.checksums:type_name -> fleetd.v1.Artifact.ChecksumsEntry
	10, // 5: fleetd.v1.Artifact.platforms:type_name -> fleetd.v1.Platform
	81, // 6: fleetd.v1.Artifact.created_at:type_name -> google.protobuf.Timestamp
	68, // 7: fleetd.v1.Artifact.labels:type_name -> fleetd.v1.Artifact.LabelsEntry
	81, // 8: fleetd.v1.BuildInfo.build_time:type_name -> google.protobuf.Timestamp
	69, // 9: fleetd.v1.BuildInfo.build_args:type_name -> fleetd.v1.BuildInfo.BuildArgsEntry
	12, // 10: fleetd.v1.Application.artifacts:type_name -> fleetd.v1.ArtifactRef
	70, // 11: fleetd.v1.Application.environment:type_name -> fleetd.v1.Application.EnvironmentEntry
	2,  // 12: fleetd.v1.Application.restart_policy:type_name -> fleetd.v1.RestartPolicy
	13, // 13: fleetd.v1.Application.configuration:type_name -> fleetd.v1.Configuration
	15, // 14: fleetd.v1.Application.runtime:type_name -> fleetd.v1.RuntimeConfig
	16, // 15: fleetd.v1.Application.health_check:type_name -> fleetd.v1.HealthCheck
	20, // 16: fleetd.v1.Application.resources:type_name -> fleetd.v1.Resources
	22, // 17: fleetd.v1.Application.placement:type_name -> fleetd.v1.PlacementConstraints
	81, // 18: fleetd.v1.Application.created_at:type_name -> google.protobuf.Timestamp
	81, // 19: fleetd.v1.Application.updated_at:type_name -> google.protobuf.Timestamp
	71, // 20: fleetd.v1.Application.labels:type_name -> fleetd.v1.Application.LabelsEntry
	0,  // 21: fleetd.v1.ArtifactRef.type:type_name -> fleetd.v1.ArtifactType
	72, // 22: fleetd.v1.Configuration.environment:type_name -> fleetd.v1.Configuration.EnvironmentEntry
	14, // 23: fleetd.v1.Configuration.files:type_name -> fleetd.v1.ConfigFile
	1,  // 24: fleetd.v1.RuntimeConfig.type:type_name -> fleetd.v1.RuntimeType
	2,  // 25: fleetd.v1.RuntimeConfig.restart_policy:type_name -> fleetd.v1.RestartPolicy
	17, // 26: fleetd.v1.HealthCheck.http:type_name -> fleetd.v1.HTTPHealthCheck
	18, // 27: fleetd.v1.HealthCheck.tcp:type_name -> fleetd.v1.TCPHealthCheck
	19, // 28: fleetd.v1.HealthCheck.exec:type_name -> fleetd.v1.ExecHealthCheck
	73, // 29: fleetd.v1.HTTPHealthCheck.headers:type_name -> fleetd.v1.HTTPHealthCheck.HeadersEntry
	21, // 30: fleetd.v1.Resources.limits:type_name -> fleetd.v1.ResourceSpec
	21, // 31: fleetd.v1.Resources.requests:type_name -> fleetd.v1.ResourceSpec
	74, // 32: fleetd.v1.PlacementConstraints.device_selector:type_name -> fleetd.v1.PlacementConstraints.DeviceSelectorEntry
	23, // 33: fleetd.v1.PlacementConstraints.node_affinities:type_name -> fleetd.v1.NodeAffinity
	25, // 34: fleetd.v1.Deployment.target:type_name -> fleetd.v1.DeploymentTarget
	26, // 35: fleetd.v1.Deployment.strategy:type_name -> fleetd.v1.DeploymentStrategy
	4,  // 36: fleetd.v1.Deployment.status:type_name -> fleetd.v1.DeploymentStatus
	32, // 37: fleetd.v1.Deployment.rollback:type_name -> fleetd.v1.RollbackConfig
	81, // 38: fleetd.v1.Deployment.created_at:type_name -> google.protobuf.Timestamp
	81, // 39: fleetd.v1.Deployment.started_at:type_name -> google.protobuf.Timestamp
	81, // 40: fleetd.v1.Deployment.completed_at:type_name -> google.protobuf.Timestamp
	34, // 41: fleetd.v1.Deployment.result:type_name -> fleetd.v1.DeploymentResult
	75, // 42: fleetd.v1.DeploymentTarget.selector:type_name -> fleetd.v1.DeploymentTarget.SelectorEntry
	27, // 43: fleetd.v1.DeploymentStrategy.canary:type_name -> fleetd.v1.CanaryStrategy
	28, // 44: fleetd.v1.DeploymentStrategy.rolling:type_name -> fleetd.v1.RollingUpdateStrategy
	29, // 45: fleetd.v1.DeploymentStrategy.blue_green:type_name -> fleetd.v1.BlueGreenStrategy
	30, // 46: fleetd.v1.DeploymentStrategy.all_at_once:type_name -> fleetd.v1.AllAtOnceStrategy
	31, // 47: fleetd.v1.CanaryStrategy.success_criteria:type_name -> fleetd.v1.SuccessCriteria
	33, // 48: fleetd.v1.RollbackConfig.triggers:type_name -> fleetd.v1.RollbackTrigger
	3,  // 49: fleetd.v1.RollbackTrigger.type:type_name -> fleetd.v1.TriggerType
	35, // 50: fleetd.v1.DeploymentResult.device_statuses:type_name -> fleetd.v1.DeviceDeploymentStatus
	4,  // 51: fleetd.v1.DeviceDeploymentStatus.status:type_name -> fleetd.v1.DeploymentStatus
	81, // 52: fleetd.v1.DeviceDeploymentStatus.updated_at:type_name -> google.protobuf.Timestamp
	5,  // 53: fleetd.v1.ProcessStatus.state:type_name -> fleetd.v1.ProcessState
	81, // 54: fleetd.v1.ProcessStatus.started_at:type_name -> google.protobuf.Timestamp
	38, // 55: fleetd.v1.UploadArtifactRequest.metadata:type_name -> fleetd.v1.ArtifactMetadata
	0,  // 56: fleetd.v1.ArtifactMetadata.type:type_name -> fleetd.v1.ArtifactType
	10, // 57: fleetd.v1.ArtifactMetadata.platforms:type_name -> fleetd.v1.Platform
	76, // 58: fleetd.v1.ArtifactMetadata.labels:type_name -> fleetd.v1.ArtifactMetadata.LabelsEntry
	7,  // 59: fleetd.v1.ArtifactMetadata.build_info:type_name -> fleetd.v1.BuildInfo
	8,  // 60: fleetd.v1.ArtifactMetadata.requirements:type_name -> fleetd.v1.Requirements
	77, // 61: fleetd.v1.UploadArtifactResponse.checksums:type_name -> fleetd.v1.UploadArtifactResponse.ChecksumsEntry
	6,  // 62: fleetd.v1.GetArtifactResponse.artifact:type_name -> fleetd.v1.Artifact
	78, // 63: fleetd.v1.ListArtifactsRequest.labels:type_name -> fleetd.v1.ListArtifactsRequest.LabelsEntry
	6,  // 64: fleetd.v1.ListArtifactsResponse.artifacts:type_name -> fleetd.v1.Artifact
	81, // 65: fleetd.v1.GetDownloadURLResponse.expires_at:type_name -> google.protobuf.Timestamp
	79, // 66: fleetd.v1.GetDownloadURLResponse.headers:type_name -> fleetd.v1.GetDownloadURLResponse.HeadersEntry
	11, // 67: fleetd.v1.CreateApplicationRequest.application:type_name -> fleetd.v1.Application
	11, // 68: fleetd.v1.GetApplicationResponse.application:type_name -> fleetd.v1.Application
	80, // 69: fleetd.v1.ListApplicationsRequest.labels:type_name -> fleetd.v1.ListApplicationsRequest.LabelsEntry
	11, // 70: fleetd.v1.ListApplicationsResponse.applications:type_name -> fleetd.v1.Application
	24, // 71: fleetd.v1.CreateDeploymentRequest.deployment:type_name -> fleetd.v1.Deployment
	24, // 72: fleetd.v1.GetDeploymentResponse.deployment:type_name -> fleetd.v1.Deployment
	4,  // 73: fleetd.v1.ListDeploymentsRequest.status:type_name -> fleetd.v1.DeploymentStatus
	24, // 74: fleetd.v1.ListDeploymentsResponse.deployments:type_name -> fleetd.v1.Deployment
	81, // 75: fleetd.v1.GetDeploymentMetricsRequest.start_time:type_name -> google.protobuf.Timestamp
	81, // 76: fleetd.v1.GetDeploymentMetricsRequest.end_time:type_name -> google.protobuf.Timestamp
	66, // 77: fleetd.v1.GetDeploymentMetricsResponse.metrics:type_name -> fleetd.v1.DeploymentMetric
	81, // 78: fleetd.v1.DeploymentMetric.timestamp:type_name -> google.protobuf.Timestamp
	37, // 79: fleetd.v1.ArtifactService.UploadArtifact:input_type -> fleetd.v1.UploadArtifactRequest
	40, // 80: fleetd.v1.ArtifactService.GetArtifact:input_type -> fleetd.v1.GetArtifactRequest
	42, // 81: fleetd.v1.ArtifactService.ListArtifacts:input_type -> fleetd.v1.ListArtifactsRequest
	44, // 82: fleetd.v1.ArtifactService.DeleteArtifact:input_type -> fleetd.v1.DeleteArtifactRequest
	46, // 83: fleetd.v1.ArtifactService.GetDownloadURL:input_type -> fleetd.v1.GetDownloadURLRequest
	48, // 84: fleetd.v1.ApplicationService.CreateApplication:input_type -> fleetd.v1.CreateApplicationRequest
	50, // 85: fleetd.v1.ApplicationService.GetApplication:input_type -> fleetd.v1.GetApplicationRequest
	52, // 86: fleetd.v1.ApplicationService.ListApplications:input_type -> fleetd.v1.ListApplicationsRequest
	54, // 87: fleetd.v1.ApplicationService.DeleteApplication:input_type -> fleetd.v1.DeleteApplicationRequest
	56, // 88: fleetd.v1.DeploymentService.CreateDeployment:input_type -> fleetd.v1.CreateDeploymentRequest
	58, // 89: fleetd.v1.DeploymentService.GetDeployment:input_type -> fleetd.v1.GetDeploymentRequest
	60, // 90: fleetd.v1.DeploymentService.ListDeployments:input_type -> fleetd.v1.ListDeploymentsRequest
	62, // 91: fleetd.v1.DeploymentService.CancelDeployment:input_type -> fleetd.v1.CancelDeploymentRequest
	64, // 92: fleetd.v1.DeploymentService.GetDeploymentMetrics:input_type -> fleetd.v1.GetDeploymentMetricsRequest
	39, // 93: fleetd.v1.ArtifactService.UploadArtifact:output_type -> fleetd.v1.UploadArtifactResponse
	41, // 94: fleetd.v1.ArtifactService.GetArtifact:output_type -> fleetd.v1.GetArtifactResponse
	43, // 95: fleetd.v1.ArtifactService.ListArtifacts:output_type -> fleetd.v1.ListArtifactsResponse
	45, // 96: fleetd.v1.ArtifactService.DeleteArtifact:output_type -> fleetd.v1.DeleteArtifactResponse
	47, // 97: fleetd.v1.ArtifactService.GetDownloadURL:output_type -> fleetd.v1.GetDownloadURLResponse
	49, // 98: fleetd.v1.ApplicationService.CreateApplication:output_type -> fleetd.v1.CreateApplicationResponse
	51, // 99: fleetd.v1.ApplicationService.GetApplication:output_type -> fleetd.v1.GetApplicationResponse
	53, // 100: fleetd.v1.ApplicationService.ListApplications:output_type -> fleetd.v1.ListApplicationsResponse
	55, // 101: fleetd.v1.ApplicationService.DeleteApplication:output_type -> fleetd.v1.DeleteApplicationResponse
	57, // 102: fleetd.v1.DeploymentService.CreateDeployment:output_type -> fleetd.v1.CreateDeploymentResponse
	59, // 103: fleetd.v1.DeploymentService.GetDeployment:output_type -> fleetd.v1.GetDeploymentResponse
	61, // 104: fleetd.v1.DeploymentService.ListDeployments:output_type -> fleetd.v1.ListDeploymentsResponse
	63, // 105: fleetd.v1.DeploymentService.CancelDeployment:output_type -> fleetd.v1.CancelDeploymentResponse
	65, // 106: fleetd.v1.DeploymentService.GetDeploymentMetrics:output_type -> fleetd.v1.GetDeploymentMetricsResponse
	93, // [93:107] is the sub-list for method output_type
	79, // [79:93] is the sub-list for method input_type
	79, // [79:79] is the sub-list for extension type_name
	79, // [79:79] is the sub-list for extension extendee
	0,  // [0:79] is the sub-list for field type_name
}

func init() { file_fleetd_v1_artifact_proto_init() }
func file_fleetd_v1_artifact_proto_init() {
	if File_fleetd_v1_artifact_proto != nil {
		return
	}
	file_fleetd_v1_artifact_proto_msgTypes[10].OneofWrappers = []any{
		(*HealthCheck_Http)(nil),
		(*HealthCheck_Tcp)(nil),
		(*HealthCheck_Exec)(nil),
	}
	file_fleetd_v1_artifact_proto_msgTypes[20].OneofWrappers = []any{
		(*DeploymentStrategy_Canary)(nil),
		(*DeploymentStrategy_Rolling)(nil),
		(*DeploymentStrategy_BlueGreen)(nil),
		(*DeploymentStrategy_AllAtOnce)(nil),
	}
	file_fleetd_v1_artifact_proto_msgTypes[31].OneofWrappers = []any{
		(*UploadArtifactRequest_Metadata)(nil),
		(*UploadArtifactRequest_Chunk)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_fleetd_v1_artifact_proto_rawDesc), len(file_fleetd_v1_artifact_proto_rawDesc)),
			NumEnums:      6,
			NumMessages:   75,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_fleetd_v1_artifact_proto_goTypes,
		DependencyIndexes: file_fleetd_v1_artifact_proto_depIdxs,
		EnumInfos:         file_fleetd_v1_artifact_proto_enumTypes,
		MessageInfos:      file_fleetd_v1_artifact_proto_msgTypes,
	}.Build()
	File_fleetd_v1_artifact_proto = out.File
	file_fleetd_v1_artifact_proto_goTypes = nil
	file_fleetd_v1_artifact_proto_depIdxs = nil
}
