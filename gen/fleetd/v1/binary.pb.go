// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        (unknown)
// source: fleetd/v1/binary.proto

package fleetpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Binary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Version      string                 `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Platform     string                 `protobuf:"bytes,4,opt,name=platform,proto3" json:"platform,omitempty"`
	Architecture string                 `protobuf:"bytes,5,opt,name=architecture,proto3" json:"architecture,omitempty"`
	Size         int64                  `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`
	Sha256       string                 `protobuf:"bytes,7,opt,name=sha256,proto3" json:"sha256,omitempty"`
	Metadata     map[string]string      `protobuf:"bytes,8,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CreatedAt    *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *Binary) Reset() {
	*x = Binary{}
	mi := &file_fleetd_v1_binary_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Binary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Binary) ProtoMessage() {}

func (x *Binary) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_binary_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Binary.ProtoReflect.Descriptor instead.
func (*Binary) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_binary_proto_rawDescGZIP(), []int{0}
}

func (x *Binary) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Binary) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Binary) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Binary) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *Binary) GetArchitecture() string {
	if x != nil {
		return x.Architecture
	}
	return ""
}

func (x *Binary) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Binary) GetSha256() string {
	if x != nil {
		return x.Sha256
	}
	return ""
}

func (x *Binary) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Binary) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type UploadBinaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//
	//	*UploadBinaryRequest_Metadata
	//	*UploadBinaryRequest_Chunk
	Data isUploadBinaryRequest_Data `protobuf_oneof:"data"`
}

func (x *UploadBinaryRequest) Reset() {
	*x = UploadBinaryRequest{}
	mi := &file_fleetd_v1_binary_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadBinaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadBinaryRequest) ProtoMessage() {}

func (x *UploadBinaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_binary_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadBinaryRequest.ProtoReflect.Descriptor instead.
func (*UploadBinaryRequest) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_binary_proto_rawDescGZIP(), []int{1}
}

func (m *UploadBinaryRequest) GetData() isUploadBinaryRequest_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *UploadBinaryRequest) GetMetadata() *BinaryMetadata {
	if x, ok := x.GetData().(*UploadBinaryRequest_Metadata); ok {
		return x.Metadata
	}
	return nil
}

func (x *UploadBinaryRequest) GetChunk() []byte {
	if x, ok := x.GetData().(*UploadBinaryRequest_Chunk); ok {
		return x.Chunk
	}
	return nil
}

type isUploadBinaryRequest_Data interface {
	isUploadBinaryRequest_Data()
}

type UploadBinaryRequest_Metadata struct {
	Metadata *BinaryMetadata `protobuf:"bytes,1,opt,name=metadata,proto3,oneof"`
}

type UploadBinaryRequest_Chunk struct {
	Chunk []byte `protobuf:"bytes,2,opt,name=chunk,proto3,oneof"`
}

func (*UploadBinaryRequest_Metadata) isUploadBinaryRequest_Data() {}

func (*UploadBinaryRequest_Chunk) isUploadBinaryRequest_Data() {}

type BinaryMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version      string            `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Platform     string            `protobuf:"bytes,3,opt,name=platform,proto3" json:"platform,omitempty"`
	Architecture string            `protobuf:"bytes,4,opt,name=architecture,proto3" json:"architecture,omitempty"`
	Metadata     map[string]string `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *BinaryMetadata) Reset() {
	*x = BinaryMetadata{}
	mi := &file_fleetd_v1_binary_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BinaryMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BinaryMetadata) ProtoMessage() {}

func (x *BinaryMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_binary_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BinaryMetadata.ProtoReflect.Descriptor instead.
func (*BinaryMetadata) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_binary_proto_rawDescGZIP(), []int{2}
}

func (x *BinaryMetadata) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BinaryMetadata) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *BinaryMetadata) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *BinaryMetadata) GetArchitecture() string {
	if x != nil {
		return x.Architecture
	}
	return ""
}

func (x *BinaryMetadata) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type UploadBinaryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Sha256 string `protobuf:"bytes,2,opt,name=sha256,proto3" json:"sha256,omitempty"`
}

func (x *UploadBinaryResponse) Reset() {
	*x = UploadBinaryResponse{}
	mi := &file_fleetd_v1_binary_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadBinaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadBinaryResponse) ProtoMessage() {}

func (x *UploadBinaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_binary_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadBinaryResponse.ProtoReflect.Descriptor instead.
func (*UploadBinaryResponse) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_binary_proto_rawDescGZIP(), []int{3}
}

func (x *UploadBinaryResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UploadBinaryResponse) GetSha256() string {
	if x != nil {
		return x.Sha256
	}
	return ""
}

type GetBinaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetBinaryRequest) Reset() {
	*x = GetBinaryRequest{}
	mi := &file_fleetd_v1_binary_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBinaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBinaryRequest) ProtoMessage() {}

func (x *GetBinaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_binary_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBinaryRequest.ProtoReflect.Descriptor instead.
func (*GetBinaryRequest) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_binary_proto_rawDescGZIP(), []int{4}
}

func (x *GetBinaryRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetBinaryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Binary *Binary `protobuf:"bytes,1,opt,name=binary,proto3" json:"binary,omitempty"`
}

func (x *GetBinaryResponse) Reset() {
	*x = GetBinaryResponse{}
	mi := &file_fleetd_v1_binary_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBinaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBinaryResponse) ProtoMessage() {}

func (x *GetBinaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_binary_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBinaryResponse.ProtoReflect.Descriptor instead.
func (*GetBinaryResponse) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_binary_proto_rawDescGZIP(), []int{5}
}

func (x *GetBinaryResponse) GetBinary() *Binary {
	if x != nil {
		return x.Binary
	}
	return nil
}

type DownloadBinaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DownloadBinaryRequest) Reset() {
	*x = DownloadBinaryRequest{}
	mi := &file_fleetd_v1_binary_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadBinaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadBinaryRequest) ProtoMessage() {}

func (x *DownloadBinaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_binary_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadBinaryRequest.ProtoReflect.Descriptor instead.
func (*DownloadBinaryRequest) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_binary_proto_rawDescGZIP(), []int{6}
}

func (x *DownloadBinaryRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DownloadBinaryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chunk []byte `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`
}

func (x *DownloadBinaryResponse) Reset() {
	*x = DownloadBinaryResponse{}
	mi := &file_fleetd_v1_binary_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadBinaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadBinaryResponse) ProtoMessage() {}

func (x *DownloadBinaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_binary_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadBinaryResponse.ProtoReflect.Descriptor instead.
func (*DownloadBinaryResponse) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_binary_proto_rawDescGZIP(), []int{7}
}

func (x *DownloadBinaryResponse) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

type ListBinariesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version      string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Platform     string `protobuf:"bytes,3,opt,name=platform,proto3" json:"platform,omitempty"`
	Architecture string `protobuf:"bytes,4,opt,name=architecture,proto3" json:"architecture,omitempty"`
	PageSize     int32  `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken    string `protobuf:"bytes,6,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListBinariesRequest) Reset() {
	*x = ListBinariesRequest{}
	mi := &file_fleetd_v1_binary_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBinariesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBinariesRequest) ProtoMessage() {}

func (x *ListBinariesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_binary_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBinariesRequest.ProtoReflect.Descriptor instead.
func (*ListBinariesRequest) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_binary_proto_rawDescGZIP(), []int{8}
}

func (x *ListBinariesRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListBinariesRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ListBinariesRequest) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *ListBinariesRequest) GetArchitecture() string {
	if x != nil {
		return x.Architecture
	}
	return ""
}

func (x *ListBinariesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListBinariesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListBinariesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Binaries      []*Binary `protobuf:"bytes,1,rep,name=binaries,proto3" json:"binaries,omitempty"`
	NextPageToken string    `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListBinariesResponse) Reset() {
	*x = ListBinariesResponse{}
	mi := &file_fleetd_v1_binary_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBinariesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBinariesResponse) ProtoMessage() {}

func (x *ListBinariesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_binary_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBinariesResponse.ProtoReflect.Descriptor instead.
func (*ListBinariesResponse) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_binary_proto_rawDescGZIP(), []int{9}
}

func (x *ListBinariesResponse) GetBinaries() []*Binary {
	if x != nil {
		return x.Binaries
	}
	return nil
}

func (x *ListBinariesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

var File_fleetd_v1_binary_proto protoreflect.FileDescriptor

var file_fleetd_v1_binary_proto_rawDesc = []byte{
	0x0a, 0x16, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x69, 0x6e, 0x61,
	0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x64,
	0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe7, 0x02, 0x0a, 0x06, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x72, 0x63,
	0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x61, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x12, 0x3b, 0x0a, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66, 0x6c,
	0x65, 0x65, 0x74, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x6e,
	0x0a, 0x13, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16,
	0x0a, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52,
	0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x80,
	0x02, 0x0a, 0x0e, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x22, 0x0a, 0x0c, 0x61,
	0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x61, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x43, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69,
	0x6e, 0x61, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x3e, 0x0a, 0x14, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x69, 0x6e, 0x61, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x61,
	0x32, 0x35, 0x36, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35,
	0x36, 0x22, 0x22, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3e, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x42, 0x69, 0x6e, 0x61,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x62, 0x69,
	0x6e, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x66, 0x6c, 0x65,
	0x65, 0x74, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x06, 0x62,
	0x69, 0x6e, 0x61, 0x72, 0x79, 0x22, 0x27, 0x0a, 0x15, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2e,
	0x0a, 0x16, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x75, 0x6e,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x22, 0xbf,
	0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x69, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x12, 0x22, 0x0a, 0x0c, 0x61, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0x6d, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x62, 0x69, 0x6e, 0x61,
	0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x66, 0x6c, 0x65,
	0x65, 0x74, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x08, 0x62,
	0x69, 0x6e, 0x61, 0x72, 0x69, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x32,
	0xd4, 0x02, 0x0a, 0x0d, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x51, 0x0a, 0x0c, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x69, 0x6e, 0x61, 0x72,
	0x79, 0x12, 0x1e, 0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x28, 0x01, 0x12, 0x46, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x42, 0x69, 0x6e, 0x61, 0x72,
	0x79, 0x12, 0x1b, 0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c,
	0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x69,
	0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x0e,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x20,
	0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x4f, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x69, 0x6e,
	0x61, 0x72, 0x69, 0x65, 0x73, 0x12, 0x1e, 0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x82, 0x01, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x2e, 0x66,
	0x6c, 0x65, 0x65, 0x74, 0x64, 0x2e, 0x76, 0x31, 0x42, 0x0b, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x1f, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x64, 0x2e,
	0x73, 0x68, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x64, 0x2f, 0x76, 0x31,
	0x3b, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x70, 0x62, 0xa2, 0x02, 0x03, 0x46, 0x58, 0x58, 0xaa, 0x02,
	0x09, 0x46, 0x6c, 0x65, 0x65, 0x74, 0x64, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x09, 0x46, 0x6c, 0x65,
	0x65, 0x74, 0x64, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x15, 0x46, 0x6c, 0x65, 0x65, 0x74, 0x64, 0x5c,
	0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,
	0x0a, 0x46, 0x6c, 0x65, 0x65, 0x74, 0x64, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_fleetd_v1_binary_proto_rawDescOnce sync.Once
	file_fleetd_v1_binary_proto_rawDescData = file_fleetd_v1_binary_proto_rawDesc
)

func file_fleetd_v1_binary_proto_rawDescGZIP() []byte {
	file_fleetd_v1_binary_proto_rawDescOnce.Do(func() {
		file_fleetd_v1_binary_proto_rawDescData = protoimpl.X.CompressGZIP(file_fleetd_v1_binary_proto_rawDescData)
	})
	return file_fleetd_v1_binary_proto_rawDescData
}

var file_fleetd_v1_binary_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_fleetd_v1_binary_proto_goTypes = []any{
	(*Binary)(nil),                 // 0: fleetd.v1.Binary
	(*UploadBinaryRequest)(nil),    // 1: fleetd.v1.UploadBinaryRequest
	(*BinaryMetadata)(nil),         // 2: fleetd.v1.BinaryMetadata
	(*UploadBinaryResponse)(nil),   // 3: fleetd.v1.UploadBinaryResponse
	(*GetBinaryRequest)(nil),       // 4: fleetd.v1.GetBinaryRequest
	(*GetBinaryResponse)(nil),      // 5: fleetd.v1.GetBinaryResponse
	(*DownloadBinaryRequest)(nil),  // 6: fleetd.v1.DownloadBinaryRequest
	(*DownloadBinaryResponse)(nil), // 7: fleetd.v1.DownloadBinaryResponse
	(*ListBinariesRequest)(nil),    // 8: fleetd.v1.ListBinariesRequest
	(*ListBinariesResponse)(nil),   // 9: fleetd.v1.ListBinariesResponse
	nil,                            // 10: fleetd.v1.Binary.MetadataEntry
	nil,                            // 11: fleetd.v1.BinaryMetadata.MetadataEntry
	(*timestamppb.Timestamp)(nil),  // 12: google.protobuf.Timestamp
}
var file_fleetd_v1_binary_proto_depIdxs = []int32{
	10, // 0: fleetd.v1.Binary.metadata:type_name -> fleetd.v1.Binary.MetadataEntry
	12, // 1: fleetd.v1.Binary.created_at:type_name -> google.protobuf.Timestamp
	2,  // 2: fleetd.v1.UploadBinaryRequest.metadata:type_name -> fleetd.v1.BinaryMetadata
	11, // 3: fleetd.v1.BinaryMetadata.metadata:type_name -> fleetd.v1.BinaryMetadata.MetadataEntry
	0,  // 4: fleetd.v1.GetBinaryResponse.binary:type_name -> fleetd.v1.Binary
	0,  // 5: fleetd.v1.ListBinariesResponse.binaries:type_name -> fleetd.v1.Binary
	1,  // 6: fleetd.v1.BinaryService.UploadBinary:input_type -> fleetd.v1.UploadBinaryRequest
	4,  // 7: fleetd.v1.BinaryService.GetBinary:input_type -> fleetd.v1.GetBinaryRequest
	6,  // 8: fleetd.v1.BinaryService.DownloadBinary:input_type -> fleetd.v1.DownloadBinaryRequest
	8,  // 9: fleetd.v1.BinaryService.ListBinaries:input_type -> fleetd.v1.ListBinariesRequest
	3,  // 10: fleetd.v1.BinaryService.UploadBinary:output_type -> fleetd.v1.UploadBinaryResponse
	5,  // 11: fleetd.v1.BinaryService.GetBinary:output_type -> fleetd.v1.GetBinaryResponse
	7,  // 12: fleetd.v1.BinaryService.DownloadBinary:output_type -> fleetd.v1.DownloadBinaryResponse
	9,  // 13: fleetd.v1.BinaryService.ListBinaries:output_type -> fleetd.v1.ListBinariesResponse
	10, // [10:14] is the sub-list for method output_type
	6,  // [6:10] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_fleetd_v1_binary_proto_init() }
func file_fleetd_v1_binary_proto_init() {
	if File_fleetd_v1_binary_proto != nil {
		return
	}
	file_fleetd_v1_binary_proto_msgTypes[1].OneofWrappers = []any{
		(*UploadBinaryRequest_Metadata)(nil),
		(*UploadBinaryRequest_Chunk)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_fleetd_v1_binary_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_fleetd_v1_binary_proto_goTypes,
		DependencyIndexes: file_fleetd_v1_binary_proto_depIdxs,
		MessageInfos:      file_fleetd_v1_binary_proto_msgTypes,
	}.Build()
	File_fleetd_v1_binary_proto = out.File
	file_fleetd_v1_binary_proto_rawDesc = nil
	file_fleetd_v1_binary_proto_goTypes = nil
	file_fleetd_v1_binary_proto_depIdxs = nil
}
