// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: fleetd/v1/sync.proto

package fleetpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Device capability information for sync
type SyncDeviceCapability struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tier          int32                  `protobuf:"varint,1,opt,name=tier,proto3" json:"tier,omitempty"` // 1=Full, 2=Constrained, 3=Minimal
	TotalRam      int64                  `protobuf:"varint,2,opt,name=total_ram,json=totalRam,proto3" json:"total_ram,omitempty"`
	AvailableRam  int64                  `protobuf:"varint,3,opt,name=available_ram,json=availableRam,proto3" json:"available_ram,omitempty"`
	TotalDisk     int64                  `protobuf:"varint,4,opt,name=total_disk,json=totalDisk,proto3" json:"total_disk,omitempty"`
	AvailableDisk int64                  `protobuf:"varint,5,opt,name=available_disk,json=availableDisk,proto3" json:"available_disk,omitempty"`
	CpuCores      int32                  `protobuf:"varint,6,opt,name=cpu_cores,json=cpuCores,proto3" json:"cpu_cores,omitempty"`
	Architecture  string                 `protobuf:"bytes,7,opt,name=architecture,proto3" json:"architecture,omitempty"`
	Os            string                 `protobuf:"bytes,8,opt,name=os,proto3" json:"os,omitempty"`
	// Storage capabilities
	HasSqlite          bool  `protobuf:"varint,9,opt,name=has_sqlite,json=hasSqlite,proto3" json:"has_sqlite,omitempty"`
	LocalStorageSize   int64 `protobuf:"varint,10,opt,name=local_storage_size,json=localStorageSize,proto3" json:"local_storage_size,omitempty"`
	MaxMetricsInMemory int32 `protobuf:"varint,11,opt,name=max_metrics_in_memory,json=maxMetricsInMemory,proto3" json:"max_metrics_in_memory,omitempty"`
	// Network capabilities
	HasNetwork    bool  `protobuf:"varint,12,opt,name=has_network,json=hasNetwork,proto3" json:"has_network,omitempty"`
	BandwidthKbps int32 `protobuf:"varint,13,opt,name=bandwidth_kbps,json=bandwidthKbps,proto3" json:"bandwidth_kbps,omitempty"`
	SupportsHttp2 bool  `protobuf:"varint,14,opt,name=supports_http2,json=supportsHttp2,proto3" json:"supports_http2,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncDeviceCapability) Reset() {
	*x = SyncDeviceCapability{}
	mi := &file_fleetd_v1_sync_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncDeviceCapability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncDeviceCapability) ProtoMessage() {}

func (x *SyncDeviceCapability) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_sync_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncDeviceCapability.ProtoReflect.Descriptor instead.
func (*SyncDeviceCapability) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_sync_proto_rawDescGZIP(), []int{0}
}

func (x *SyncDeviceCapability) GetTier() int32 {
	if x != nil {
		return x.Tier
	}
	return 0
}

func (x *SyncDeviceCapability) GetTotalRam() int64 {
	if x != nil {
		return x.TotalRam
	}
	return 0
}

func (x *SyncDeviceCapability) GetAvailableRam() int64 {
	if x != nil {
		return x.AvailableRam
	}
	return 0
}

func (x *SyncDeviceCapability) GetTotalDisk() int64 {
	if x != nil {
		return x.TotalDisk
	}
	return 0
}

func (x *SyncDeviceCapability) GetAvailableDisk() int64 {
	if x != nil {
		return x.AvailableDisk
	}
	return 0
}

func (x *SyncDeviceCapability) GetCpuCores() int32 {
	if x != nil {
		return x.CpuCores
	}
	return 0
}

func (x *SyncDeviceCapability) GetArchitecture() string {
	if x != nil {
		return x.Architecture
	}
	return ""
}

func (x *SyncDeviceCapability) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *SyncDeviceCapability) GetHasSqlite() bool {
	if x != nil {
		return x.HasSqlite
	}
	return false
}

func (x *SyncDeviceCapability) GetLocalStorageSize() int64 {
	if x != nil {
		return x.LocalStorageSize
	}
	return 0
}

func (x *SyncDeviceCapability) GetMaxMetricsInMemory() int32 {
	if x != nil {
		return x.MaxMetricsInMemory
	}
	return 0
}

func (x *SyncDeviceCapability) GetHasNetwork() bool {
	if x != nil {
		return x.HasNetwork
	}
	return false
}

func (x *SyncDeviceCapability) GetBandwidthKbps() int32 {
	if x != nil {
		return x.BandwidthKbps
	}
	return 0
}

func (x *SyncDeviceCapability) GetSupportsHttp2() bool {
	if x != nil {
		return x.SupportsHttp2
	}
	return false
}

// Metric data point
type Metric struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value         float64                `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Metric) Reset() {
	*x = Metric{}
	mi := &file_fleetd_v1_sync_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Metric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metric) ProtoMessage() {}

func (x *Metric) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_sync_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metric.ProtoReflect.Descriptor instead.
func (*Metric) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_sync_proto_rawDescGZIP(), []int{1}
}

func (x *Metric) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Metric) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Metric) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Metric) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

// Compressed metrics batch
type MetricsBatch struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Metrics        []*Metric              `protobuf:"bytes,1,rep,name=metrics,proto3" json:"metrics,omitempty"`
	Compression    string                 `protobuf:"bytes,2,opt,name=compression,proto3" json:"compression,omitempty"`                             // none, gzip, zstd
	CompressedData []byte                 `protobuf:"bytes,3,opt,name=compressed_data,json=compressedData,proto3" json:"compressed_data,omitempty"` // If compression != none
	OriginalSize   int32                  `protobuf:"varint,4,opt,name=original_size,json=originalSize,proto3" json:"original_size,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MetricsBatch) Reset() {
	*x = MetricsBatch{}
	mi := &file_fleetd_v1_sync_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricsBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricsBatch) ProtoMessage() {}

func (x *MetricsBatch) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_sync_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricsBatch.ProtoReflect.Descriptor instead.
func (*MetricsBatch) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_sync_proto_rawDescGZIP(), []int{2}
}

func (x *MetricsBatch) GetMetrics() []*Metric {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *MetricsBatch) GetCompression() string {
	if x != nil {
		return x.Compression
	}
	return ""
}

func (x *MetricsBatch) GetCompressedData() []byte {
	if x != nil {
		return x.CompressedData
	}
	return nil
}

func (x *MetricsBatch) GetOriginalSize() int32 {
	if x != nil {
		return x.OriginalSize
	}
	return 0
}

// Log entry
type LogEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Level         string                 `protobuf:"bytes,1,opt,name=level,proto3" json:"level,omitempty"` // debug, info, warn, error, fatal
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Source        string                 `protobuf:"bytes,4,opt,name=source,proto3" json:"source,omitempty"`
	Fields        map[string]string      `protobuf:"bytes,5,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogEntry) Reset() {
	*x = LogEntry{}
	mi := &file_fleetd_v1_sync_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogEntry) ProtoMessage() {}

func (x *LogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_sync_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogEntry.ProtoReflect.Descriptor instead.
func (*LogEntry) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_sync_proto_rawDescGZIP(), []int{3}
}

func (x *LogEntry) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *LogEntry) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *LogEntry) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *LogEntry) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *LogEntry) GetFields() map[string]string {
	if x != nil {
		return x.Fields
	}
	return nil
}

// Logs batch
type LogsBatch struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Logs           []*LogEntry            `protobuf:"bytes,1,rep,name=logs,proto3" json:"logs,omitempty"`
	Compression    string                 `protobuf:"bytes,2,opt,name=compression,proto3" json:"compression,omitempty"`
	CompressedData []byte                 `protobuf:"bytes,3,opt,name=compressed_data,json=compressedData,proto3" json:"compressed_data,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *LogsBatch) Reset() {
	*x = LogsBatch{}
	mi := &file_fleetd_v1_sync_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogsBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogsBatch) ProtoMessage() {}

func (x *LogsBatch) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_sync_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogsBatch.ProtoReflect.Descriptor instead.
func (*LogsBatch) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_sync_proto_rawDescGZIP(), []int{4}
}

func (x *LogsBatch) GetLogs() []*LogEntry {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *LogsBatch) GetCompression() string {
	if x != nil {
		return x.Compression
	}
	return ""
}

func (x *LogsBatch) GetCompressedData() []byte {
	if x != nil {
		return x.CompressedData
	}
	return nil
}

// Sync metadata
type SyncMetadata struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	DeviceId       string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	OrgId          string                 `protobuf:"bytes,2,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	SequenceNumber int64                  `protobuf:"varint,3,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	ClientTime     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=client_time,json=clientTime,proto3" json:"client_time,omitempty"`
	RetryCount     int32                  `protobuf:"varint,5,opt,name=retry_count,json=retryCount,proto3" json:"retry_count,omitempty"`
	Checksum       []byte                 `protobuf:"bytes,6,opt,name=checksum,proto3" json:"checksum,omitempty"` // SHA256 of uncompressed data
	Capability     *SyncDeviceCapability  `protobuf:"bytes,7,opt,name=capability,proto3" json:"capability,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SyncMetadata) Reset() {
	*x = SyncMetadata{}
	mi := &file_fleetd_v1_sync_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncMetadata) ProtoMessage() {}

func (x *SyncMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_sync_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncMetadata.ProtoReflect.Descriptor instead.
func (*SyncMetadata) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_sync_proto_rawDescGZIP(), []int{5}
}

func (x *SyncMetadata) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *SyncMetadata) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *SyncMetadata) GetSequenceNumber() int64 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *SyncMetadata) GetClientTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ClientTime
	}
	return nil
}

func (x *SyncMetadata) GetRetryCount() int32 {
	if x != nil {
		return x.RetryCount
	}
	return 0
}

func (x *SyncMetadata) GetChecksum() []byte {
	if x != nil {
		return x.Checksum
	}
	return nil
}

func (x *SyncMetadata) GetCapability() *SyncDeviceCapability {
	if x != nil {
		return x.Capability
	}
	return nil
}

// Sync configuration
type SyncConfig struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	BatchSize           int32                  `protobuf:"varint,1,opt,name=batch_size,json=batchSize,proto3" json:"batch_size,omitempty"`
	SyncIntervalSeconds int32                  `protobuf:"varint,2,opt,name=sync_interval_seconds,json=syncIntervalSeconds,proto3" json:"sync_interval_seconds,omitempty"`
	RetentionHours      int32                  `protobuf:"varint,3,opt,name=retention_hours,json=retentionHours,proto3" json:"retention_hours,omitempty"`
	CompressionEnabled  bool                   `protobuf:"varint,4,opt,name=compression_enabled,json=compressionEnabled,proto3" json:"compression_enabled,omitempty"`
	CompressionType     string                 `protobuf:"bytes,5,opt,name=compression_type,json=compressionType,proto3" json:"compression_type,omitempty"`
	MaxRetries          int32                  `protobuf:"varint,6,opt,name=max_retries,json=maxRetries,proto3" json:"max_retries,omitempty"`
	// Backoff configuration
	InitialBackoffSeconds int32   `protobuf:"varint,7,opt,name=initial_backoff_seconds,json=initialBackoffSeconds,proto3" json:"initial_backoff_seconds,omitempty"`
	MaxBackoffSeconds     int32   `protobuf:"varint,8,opt,name=max_backoff_seconds,json=maxBackoffSeconds,proto3" json:"max_backoff_seconds,omitempty"`
	BackoffMultiplier     float64 `protobuf:"fixed64,9,opt,name=backoff_multiplier,json=backoffMultiplier,proto3" json:"backoff_multiplier,omitempty"`
	// Rate limiting
	MaxMetricsPerSecond int32 `protobuf:"varint,10,opt,name=max_metrics_per_second,json=maxMetricsPerSecond,proto3" json:"max_metrics_per_second,omitempty"`
	MaxLogsPerSecond    int32 `protobuf:"varint,11,opt,name=max_logs_per_second,json=maxLogsPerSecond,proto3" json:"max_logs_per_second,omitempty"`
	// Storage configuration
	MaxLocalStorageBytes int64 `protobuf:"varint,12,opt,name=max_local_storage_bytes,json=maxLocalStorageBytes,proto3" json:"max_local_storage_bytes,omitempty"`
	MaxMetricsRetained   int32 `protobuf:"varint,13,opt,name=max_metrics_retained,json=maxMetricsRetained,proto3" json:"max_metrics_retained,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *SyncConfig) Reset() {
	*x = SyncConfig{}
	mi := &file_fleetd_v1_sync_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncConfig) ProtoMessage() {}

func (x *SyncConfig) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_sync_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncConfig.ProtoReflect.Descriptor instead.
func (*SyncConfig) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_sync_proto_rawDescGZIP(), []int{6}
}

func (x *SyncConfig) GetBatchSize() int32 {
	if x != nil {
		return x.BatchSize
	}
	return 0
}

func (x *SyncConfig) GetSyncIntervalSeconds() int32 {
	if x != nil {
		return x.SyncIntervalSeconds
	}
	return 0
}

func (x *SyncConfig) GetRetentionHours() int32 {
	if x != nil {
		return x.RetentionHours
	}
	return 0
}

func (x *SyncConfig) GetCompressionEnabled() bool {
	if x != nil {
		return x.CompressionEnabled
	}
	return false
}

func (x *SyncConfig) GetCompressionType() string {
	if x != nil {
		return x.CompressionType
	}
	return ""
}

func (x *SyncConfig) GetMaxRetries() int32 {
	if x != nil {
		return x.MaxRetries
	}
	return 0
}

func (x *SyncConfig) GetInitialBackoffSeconds() int32 {
	if x != nil {
		return x.InitialBackoffSeconds
	}
	return 0
}

func (x *SyncConfig) GetMaxBackoffSeconds() int32 {
	if x != nil {
		return x.MaxBackoffSeconds
	}
	return 0
}

func (x *SyncConfig) GetBackoffMultiplier() float64 {
	if x != nil {
		return x.BackoffMultiplier
	}
	return 0
}

func (x *SyncConfig) GetMaxMetricsPerSecond() int32 {
	if x != nil {
		return x.MaxMetricsPerSecond
	}
	return 0
}

func (x *SyncConfig) GetMaxLogsPerSecond() int32 {
	if x != nil {
		return x.MaxLogsPerSecond
	}
	return 0
}

func (x *SyncConfig) GetMaxLocalStorageBytes() int64 {
	if x != nil {
		return x.MaxLocalStorageBytes
	}
	return 0
}

func (x *SyncConfig) GetMaxMetricsRetained() int32 {
	if x != nil {
		return x.MaxMetricsRetained
	}
	return 0
}

// Request to sync metrics
type SyncMetricsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metadata      *SyncMetadata          `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Batch         *MetricsBatch          `protobuf:"bytes,2,opt,name=batch,proto3" json:"batch,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncMetricsRequest) Reset() {
	*x = SyncMetricsRequest{}
	mi := &file_fleetd_v1_sync_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncMetricsRequest) ProtoMessage() {}

func (x *SyncMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_sync_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncMetricsRequest.ProtoReflect.Descriptor instead.
func (*SyncMetricsRequest) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_sync_proto_rawDescGZIP(), []int{7}
}

func (x *SyncMetricsRequest) GetMetadata() *SyncMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *SyncMetricsRequest) GetBatch() *MetricsBatch {
	if x != nil {
		return x.Batch
	}
	return nil
}

// Response from metrics sync
type SyncMetricsResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Success         bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	LastSequenceAck int64                  `protobuf:"varint,2,opt,name=last_sequence_ack,json=lastSequenceAck,proto3" json:"last_sequence_ack,omitempty"`
	ErrorMessage    string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// Server can send back updated config
	ConfigUpdate *SyncConfig `protobuf:"bytes,4,opt,name=config_update,json=configUpdate,proto3" json:"config_update,omitempty"`
	// Server time for clock sync
	ServerTime    *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=server_time,json=serverTime,proto3" json:"server_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncMetricsResponse) Reset() {
	*x = SyncMetricsResponse{}
	mi := &file_fleetd_v1_sync_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncMetricsResponse) ProtoMessage() {}

func (x *SyncMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_sync_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncMetricsResponse.ProtoReflect.Descriptor instead.
func (*SyncMetricsResponse) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_sync_proto_rawDescGZIP(), []int{8}
}

func (x *SyncMetricsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SyncMetricsResponse) GetLastSequenceAck() int64 {
	if x != nil {
		return x.LastSequenceAck
	}
	return 0
}

func (x *SyncMetricsResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *SyncMetricsResponse) GetConfigUpdate() *SyncConfig {
	if x != nil {
		return x.ConfigUpdate
	}
	return nil
}

func (x *SyncMetricsResponse) GetServerTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ServerTime
	}
	return nil
}

// Request to sync logs
type SyncLogsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metadata      *SyncMetadata          `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Batch         *LogsBatch             `protobuf:"bytes,2,opt,name=batch,proto3" json:"batch,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncLogsRequest) Reset() {
	*x = SyncLogsRequest{}
	mi := &file_fleetd_v1_sync_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncLogsRequest) ProtoMessage() {}

func (x *SyncLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_sync_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncLogsRequest.ProtoReflect.Descriptor instead.
func (*SyncLogsRequest) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_sync_proto_rawDescGZIP(), []int{9}
}

func (x *SyncLogsRequest) GetMetadata() *SyncMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *SyncLogsRequest) GetBatch() *LogsBatch {
	if x != nil {
		return x.Batch
	}
	return nil
}

// Response from logs sync
type SyncLogsResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Success         bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	LastSequenceAck int64                  `protobuf:"varint,2,opt,name=last_sequence_ack,json=lastSequenceAck,proto3" json:"last_sequence_ack,omitempty"`
	ErrorMessage    string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	ConfigUpdate    *SyncConfig            `protobuf:"bytes,4,opt,name=config_update,json=configUpdate,proto3" json:"config_update,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SyncLogsResponse) Reset() {
	*x = SyncLogsResponse{}
	mi := &file_fleetd_v1_sync_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncLogsResponse) ProtoMessage() {}

func (x *SyncLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_sync_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncLogsResponse.ProtoReflect.Descriptor instead.
func (*SyncLogsResponse) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_sync_proto_rawDescGZIP(), []int{10}
}

func (x *SyncLogsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SyncLogsResponse) GetLastSequenceAck() int64 {
	if x != nil {
		return x.LastSequenceAck
	}
	return 0
}

func (x *SyncLogsResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *SyncLogsResponse) GetConfigUpdate() *SyncConfig {
	if x != nil {
		return x.ConfigUpdate
	}
	return nil
}

// Request for sync configuration
type GetSyncConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceId      string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Capability    *SyncDeviceCapability  `protobuf:"bytes,2,opt,name=capability,proto3" json:"capability,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSyncConfigRequest) Reset() {
	*x = GetSyncConfigRequest{}
	mi := &file_fleetd_v1_sync_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSyncConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSyncConfigRequest) ProtoMessage() {}

func (x *GetSyncConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_sync_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSyncConfigRequest.ProtoReflect.Descriptor instead.
func (*GetSyncConfigRequest) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_sync_proto_rawDescGZIP(), []int{11}
}

func (x *GetSyncConfigRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *GetSyncConfigRequest) GetCapability() *SyncDeviceCapability {
	if x != nil {
		return x.Capability
	}
	return nil
}

// Response with sync configuration
type GetSyncConfigResponse struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	Config *SyncConfig            `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	// Server endpoints for different data types
	MetricsEndpoint string `protobuf:"bytes,2,opt,name=metrics_endpoint,json=metricsEndpoint,proto3" json:"metrics_endpoint,omitempty"`
	LogsEndpoint    string `protobuf:"bytes,3,opt,name=logs_endpoint,json=logsEndpoint,proto3" json:"logs_endpoint,omitempty"`
	EventsEndpoint  string `protobuf:"bytes,4,opt,name=events_endpoint,json=eventsEndpoint,proto3" json:"events_endpoint,omitempty"`
	// Feature flags
	EnableCompression   bool `protobuf:"varint,5,opt,name=enable_compression,json=enableCompression,proto3" json:"enable_compression,omitempty"`
	EnableBatching      bool `protobuf:"varint,6,opt,name=enable_batching,json=enableBatching,proto3" json:"enable_batching,omitempty"`
	EnableEdgeAnalytics bool `protobuf:"varint,7,opt,name=enable_edge_analytics,json=enableEdgeAnalytics,proto3" json:"enable_edge_analytics,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GetSyncConfigResponse) Reset() {
	*x = GetSyncConfigResponse{}
	mi := &file_fleetd_v1_sync_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSyncConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSyncConfigResponse) ProtoMessage() {}

func (x *GetSyncConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_sync_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSyncConfigResponse.ProtoReflect.Descriptor instead.
func (*GetSyncConfigResponse) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_sync_proto_rawDescGZIP(), []int{12}
}

func (x *GetSyncConfigResponse) GetConfig() *SyncConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *GetSyncConfigResponse) GetMetricsEndpoint() string {
	if x != nil {
		return x.MetricsEndpoint
	}
	return ""
}

func (x *GetSyncConfigResponse) GetLogsEndpoint() string {
	if x != nil {
		return x.LogsEndpoint
	}
	return ""
}

func (x *GetSyncConfigResponse) GetEventsEndpoint() string {
	if x != nil {
		return x.EventsEndpoint
	}
	return ""
}

func (x *GetSyncConfigResponse) GetEnableCompression() bool {
	if x != nil {
		return x.EnableCompression
	}
	return false
}

func (x *GetSyncConfigResponse) GetEnableBatching() bool {
	if x != nil {
		return x.EnableBatching
	}
	return false
}

func (x *GetSyncConfigResponse) GetEnableEdgeAnalytics() bool {
	if x != nil {
		return x.EnableEdgeAnalytics
	}
	return false
}

// Bidirectional sync data
type SyncData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Data:
	//
	//	*SyncData_Metrics
	//	*SyncData_Logs
	//	*SyncData_Heartbeat
	//	*SyncData_Ack
	Data          isSyncData_Data `protobuf_oneof:"data"`
	Metadata      *SyncMetadata   `protobuf:"bytes,10,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncData) Reset() {
	*x = SyncData{}
	mi := &file_fleetd_v1_sync_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncData) ProtoMessage() {}

func (x *SyncData) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_sync_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncData.ProtoReflect.Descriptor instead.
func (*SyncData) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_sync_proto_rawDescGZIP(), []int{13}
}

func (x *SyncData) GetData() isSyncData_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SyncData) GetMetrics() *MetricsBatch {
	if x != nil {
		if x, ok := x.Data.(*SyncData_Metrics); ok {
			return x.Metrics
		}
	}
	return nil
}

func (x *SyncData) GetLogs() *LogsBatch {
	if x != nil {
		if x, ok := x.Data.(*SyncData_Logs); ok {
			return x.Logs
		}
	}
	return nil
}

func (x *SyncData) GetHeartbeat() *SyncHeartbeat {
	if x != nil {
		if x, ok := x.Data.(*SyncData_Heartbeat); ok {
			return x.Heartbeat
		}
	}
	return nil
}

func (x *SyncData) GetAck() *SyncAck {
	if x != nil {
		if x, ok := x.Data.(*SyncData_Ack); ok {
			return x.Ack
		}
	}
	return nil
}

func (x *SyncData) GetMetadata() *SyncMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type isSyncData_Data interface {
	isSyncData_Data()
}

type SyncData_Metrics struct {
	Metrics *MetricsBatch `protobuf:"bytes,1,opt,name=metrics,proto3,oneof"`
}

type SyncData_Logs struct {
	Logs *LogsBatch `protobuf:"bytes,2,opt,name=logs,proto3,oneof"`
}

type SyncData_Heartbeat struct {
	Heartbeat *SyncHeartbeat `protobuf:"bytes,3,opt,name=heartbeat,proto3,oneof"`
}

type SyncData_Ack struct {
	Ack *SyncAck `protobuf:"bytes,4,opt,name=ack,proto3,oneof"`
}

func (*SyncData_Metrics) isSyncData_Data() {}

func (*SyncData_Logs) isSyncData_Data() {}

func (*SyncData_Heartbeat) isSyncData_Data() {}

func (*SyncData_Ack) isSyncData_Data() {}

// Sync command from server
type SyncCommand struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Command:
	//
	//	*SyncCommand_ConfigUpdate
	//	*SyncCommand_Flush
	//	*SyncCommand_Pause
	//	*SyncCommand_Resume
	//	*SyncCommand_Ack
	Command       isSyncCommand_Command  `protobuf_oneof:"command"`
	ServerTime    *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=server_time,json=serverTime,proto3" json:"server_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncCommand) Reset() {
	*x = SyncCommand{}
	mi := &file_fleetd_v1_sync_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncCommand) ProtoMessage() {}

func (x *SyncCommand) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_sync_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncCommand.ProtoReflect.Descriptor instead.
func (*SyncCommand) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_sync_proto_rawDescGZIP(), []int{14}
}

func (x *SyncCommand) GetCommand() isSyncCommand_Command {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *SyncCommand) GetConfigUpdate() *SyncConfig {
	if x != nil {
		if x, ok := x.Command.(*SyncCommand_ConfigUpdate); ok {
			return x.ConfigUpdate
		}
	}
	return nil
}

func (x *SyncCommand) GetFlush() *SyncFlush {
	if x != nil {
		if x, ok := x.Command.(*SyncCommand_Flush); ok {
			return x.Flush
		}
	}
	return nil
}

func (x *SyncCommand) GetPause() *SyncPause {
	if x != nil {
		if x, ok := x.Command.(*SyncCommand_Pause); ok {
			return x.Pause
		}
	}
	return nil
}

func (x *SyncCommand) GetResume() *SyncResume {
	if x != nil {
		if x, ok := x.Command.(*SyncCommand_Resume); ok {
			return x.Resume
		}
	}
	return nil
}

func (x *SyncCommand) GetAck() *SyncAck {
	if x != nil {
		if x, ok := x.Command.(*SyncCommand_Ack); ok {
			return x.Ack
		}
	}
	return nil
}

func (x *SyncCommand) GetServerTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ServerTime
	}
	return nil
}

type isSyncCommand_Command interface {
	isSyncCommand_Command()
}

type SyncCommand_ConfigUpdate struct {
	ConfigUpdate *SyncConfig `protobuf:"bytes,1,opt,name=config_update,json=configUpdate,proto3,oneof"`
}

type SyncCommand_Flush struct {
	Flush *SyncFlush `protobuf:"bytes,2,opt,name=flush,proto3,oneof"`
}

type SyncCommand_Pause struct {
	Pause *SyncPause `protobuf:"bytes,3,opt,name=pause,proto3,oneof"`
}

type SyncCommand_Resume struct {
	Resume *SyncResume `protobuf:"bytes,4,opt,name=resume,proto3,oneof"`
}

type SyncCommand_Ack struct {
	Ack *SyncAck `protobuf:"bytes,5,opt,name=ack,proto3,oneof"`
}

func (*SyncCommand_ConfigUpdate) isSyncCommand_Command() {}

func (*SyncCommand_Flush) isSyncCommand_Command() {}

func (*SyncCommand_Pause) isSyncCommand_Command() {}

func (*SyncCommand_Resume) isSyncCommand_Command() {}

func (*SyncCommand_Ack) isSyncCommand_Command() {}

// Heartbeat message
type SyncHeartbeat struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	UnsyncedMetrics    int64                  `protobuf:"varint,1,opt,name=unsynced_metrics,json=unsyncedMetrics,proto3" json:"unsynced_metrics,omitempty"`
	UnsyncedLogs       int64                  `protobuf:"varint,2,opt,name=unsynced_logs,json=unsyncedLogs,proto3" json:"unsynced_logs,omitempty"`
	StorageUsedBytes   int64                  `protobuf:"varint,3,opt,name=storage_used_bytes,json=storageUsedBytes,proto3" json:"storage_used_bytes,omitempty"`
	CpuUsagePercent    float64                `protobuf:"fixed64,4,opt,name=cpu_usage_percent,json=cpuUsagePercent,proto3" json:"cpu_usage_percent,omitempty"`
	MemoryUsagePercent float64                `protobuf:"fixed64,5,opt,name=memory_usage_percent,json=memoryUsagePercent,proto3" json:"memory_usage_percent,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *SyncHeartbeat) Reset() {
	*x = SyncHeartbeat{}
	mi := &file_fleetd_v1_sync_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncHeartbeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncHeartbeat) ProtoMessage() {}

func (x *SyncHeartbeat) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_sync_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncHeartbeat.ProtoReflect.Descriptor instead.
func (*SyncHeartbeat) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_sync_proto_rawDescGZIP(), []int{15}
}

func (x *SyncHeartbeat) GetUnsyncedMetrics() int64 {
	if x != nil {
		return x.UnsyncedMetrics
	}
	return 0
}

func (x *SyncHeartbeat) GetUnsyncedLogs() int64 {
	if x != nil {
		return x.UnsyncedLogs
	}
	return 0
}

func (x *SyncHeartbeat) GetStorageUsedBytes() int64 {
	if x != nil {
		return x.StorageUsedBytes
	}
	return 0
}

func (x *SyncHeartbeat) GetCpuUsagePercent() float64 {
	if x != nil {
		return x.CpuUsagePercent
	}
	return 0
}

func (x *SyncHeartbeat) GetMemoryUsagePercent() float64 {
	if x != nil {
		return x.MemoryUsagePercent
	}
	return 0
}

// Acknowledgment message
type SyncAck struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SequenceNumber int64                  `protobuf:"varint,1,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	Success        bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage   string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SyncAck) Reset() {
	*x = SyncAck{}
	mi := &file_fleetd_v1_sync_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncAck) ProtoMessage() {}

func (x *SyncAck) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_sync_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncAck.ProtoReflect.Descriptor instead.
func (*SyncAck) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_sync_proto_rawDescGZIP(), []int{16}
}

func (x *SyncAck) GetSequenceNumber() int64 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *SyncAck) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SyncAck) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// Flush command
type SyncFlush struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Force         bool                   `protobuf:"varint,1,opt,name=force,proto3" json:"force,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncFlush) Reset() {
	*x = SyncFlush{}
	mi := &file_fleetd_v1_sync_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncFlush) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncFlush) ProtoMessage() {}

func (x *SyncFlush) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_sync_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncFlush.ProtoReflect.Descriptor instead.
func (*SyncFlush) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_sync_proto_rawDescGZIP(), []int{17}
}

func (x *SyncFlush) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

func (x *SyncFlush) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// Pause sync command
type SyncPause struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	DurationSeconds int32                  `protobuf:"varint,1,opt,name=duration_seconds,json=durationSeconds,proto3" json:"duration_seconds,omitempty"`
	Reason          string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SyncPause) Reset() {
	*x = SyncPause{}
	mi := &file_fleetd_v1_sync_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncPause) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncPause) ProtoMessage() {}

func (x *SyncPause) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_sync_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncPause.ProtoReflect.Descriptor instead.
func (*SyncPause) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_sync_proto_rawDescGZIP(), []int{18}
}

func (x *SyncPause) GetDurationSeconds() int32 {
	if x != nil {
		return x.DurationSeconds
	}
	return 0
}

func (x *SyncPause) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// Resume sync command
type SyncResume struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Reason        string                 `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncResume) Reset() {
	*x = SyncResume{}
	mi := &file_fleetd_v1_sync_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncResume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncResume) ProtoMessage() {}

func (x *SyncResume) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_sync_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncResume.ProtoReflect.Descriptor instead.
func (*SyncResume) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_sync_proto_rawDescGZIP(), []int{19}
}

func (x *SyncResume) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

var File_fleetd_v1_sync_proto protoreflect.FileDescriptor

const file_fleetd_v1_sync_proto_rawDesc = "" +
	"\n" +
	"\x14fleetd/v1/sync.proto\x12\tfleetd.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\xf2\x03\n" +
	"\x14SyncDeviceCapability\x12\x12\n" +
	"\x04tier\x18\x01 \x01(\x05R\x04tier\x12\x1b\n" +
	"\ttotal_ram\x18\x02 \x01(\x03R\btotalRam\x12#\n" +
	"\ravailable_ram\x18\x03 \x01(\x03R\favailableRam\x12\x1d\n" +
	"\n" +
	"total_disk\x18\x04 \x01(\x03R\ttotalDisk\x12%\n" +
	"\x0eavailable_disk\x18\x05 \x01(\x03R\ravailableDisk\x12\x1b\n" +
	"\tcpu_cores\x18\x06 \x01(\x05R\bcpuCores\x12\"\n" +
	"\farchitecture\x18\a \x01(\tR\farchitecture\x12\x0e\n" +
	"\x02os\x18\b \x01(\tR\x02os\x12\x1d\n" +
	"\n" +
	"has_sqlite\x18\t \x01(\bR\thasSqlite\x12,\n" +
	"\x12local_storage_size\x18\n" +
	" \x01(\x03R\x10localStorageSize\x121\n" +
	"\x15max_metrics_in_memory\x18\v \x01(\x05R\x12maxMetricsInMemory\x12\x1f\n" +
	"\vhas_network\x18\f \x01(\bR\n" +
	"hasNetwork\x12%\n" +
	"\x0ebandwidth_kbps\x18\r \x01(\x05R\rbandwidthKbps\x12%\n" +
	"\x0esupports_http2\x18\x0e \x01(\bR\rsupportsHttp2\"\xde\x01\n" +
	"\x06Metric\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x125\n" +
	"\x06labels\x18\x04 \x03(\v2\x1d.fleetd.v1.Metric.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xab\x01\n" +
	"\fMetricsBatch\x12+\n" +
	"\ametrics\x18\x01 \x03(\v2\x11.fleetd.v1.MetricR\ametrics\x12 \n" +
	"\vcompression\x18\x02 \x01(\tR\vcompression\x12'\n" +
	"\x0fcompressed_data\x18\x03 \x01(\fR\x0ecompressedData\x12#\n" +
	"\roriginal_size\x18\x04 \x01(\x05R\foriginalSize\"\x80\x02\n" +
	"\bLogEntry\x12\x14\n" +
	"\x05level\x18\x01 \x01(\tR\x05level\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x16\n" +
	"\x06source\x18\x04 \x01(\tR\x06source\x127\n" +
	"\x06fields\x18\x05 \x03(\v2\x1f.fleetd.v1.LogEntry.FieldsEntryR\x06fields\x1a9\n" +
	"\vFieldsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x7f\n" +
	"\tLogsBatch\x12'\n" +
	"\x04logs\x18\x01 \x03(\v2\x13.fleetd.v1.LogEntryR\x04logs\x12 \n" +
	"\vcompression\x18\x02 \x01(\tR\vcompression\x12'\n" +
	"\x0fcompressed_data\x18\x03 \x01(\fR\x0ecompressedData\"\xa6\x02\n" +
	"\fSyncMetadata\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x12\x15\n" +
	"\x06org_id\x18\x02 \x01(\tR\x05orgId\x12'\n" +
	"\x0fsequence_number\x18\x03 \x01(\x03R\x0esequenceNumber\x12;\n" +
	"\vclient_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"clientTime\x12\x1f\n" +
	"\vretry_count\x18\x05 \x01(\x05R\n" +
	"retryCount\x12\x1a\n" +
	"\bchecksum\x18\x06 \x01(\fR\bchecksum\x12?\n" +
	"\n" +
	"capability\x18\a \x01(\v2\x1f.fleetd.v1.SyncDeviceCapabilityR\n" +
	"capability\"\xe9\x04\n" +
	"\n" +
	"SyncConfig\x12\x1d\n" +
	"\n" +
	"batch_size\x18\x01 \x01(\x05R\tbatchSize\x122\n" +
	"\x15sync_interval_seconds\x18\x02 \x01(\x05R\x13syncIntervalSeconds\x12'\n" +
	"\x0fretention_hours\x18\x03 \x01(\x05R\x0eretentionHours\x12/\n" +
	"\x13compression_enabled\x18\x04 \x01(\bR\x12compressionEnabled\x12)\n" +
	"\x10compression_type\x18\x05 \x01(\tR\x0fcompressionType\x12\x1f\n" +
	"\vmax_retries\x18\x06 \x01(\x05R\n" +
	"maxRetries\x126\n" +
	"\x17initial_backoff_seconds\x18\a \x01(\x05R\x15initialBackoffSeconds\x12.\n" +
	"\x13max_backoff_seconds\x18\b \x01(\x05R\x11maxBackoffSeconds\x12-\n" +
	"\x12backoff_multiplier\x18\t \x01(\x01R\x11backoffMultiplier\x123\n" +
	"\x16max_metrics_per_second\x18\n" +
	" \x01(\x05R\x13maxMetricsPerSecond\x12-\n" +
	"\x13max_logs_per_second\x18\v \x01(\x05R\x10maxLogsPerSecond\x125\n" +
	"\x17max_local_storage_bytes\x18\f \x01(\x03R\x14maxLocalStorageBytes\x120\n" +
	"\x14max_metrics_retained\x18\r \x01(\x05R\x12maxMetricsRetained\"x\n" +
	"\x12SyncMetricsRequest\x123\n" +
	"\bmetadata\x18\x01 \x01(\v2\x17.fleetd.v1.SyncMetadataR\bmetadata\x12-\n" +
	"\x05batch\x18\x02 \x01(\v2\x17.fleetd.v1.MetricsBatchR\x05batch\"\xf9\x01\n" +
	"\x13SyncMetricsResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12*\n" +
	"\x11last_sequence_ack\x18\x02 \x01(\x03R\x0flastSequenceAck\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\x12:\n" +
	"\rconfig_update\x18\x04 \x01(\v2\x15.fleetd.v1.SyncConfigR\fconfigUpdate\x12;\n" +
	"\vserver_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"serverTime\"r\n" +
	"\x0fSyncLogsRequest\x123\n" +
	"\bmetadata\x18\x01 \x01(\v2\x17.fleetd.v1.SyncMetadataR\bmetadata\x12*\n" +
	"\x05batch\x18\x02 \x01(\v2\x14.fleetd.v1.LogsBatchR\x05batch\"\xb9\x01\n" +
	"\x10SyncLogsResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12*\n" +
	"\x11last_sequence_ack\x18\x02 \x01(\x03R\x0flastSequenceAck\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\x12:\n" +
	"\rconfig_update\x18\x04 \x01(\v2\x15.fleetd.v1.SyncConfigR\fconfigUpdate\"t\n" +
	"\x14GetSyncConfigRequest\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x12?\n" +
	"\n" +
	"capability\x18\x02 \x01(\v2\x1f.fleetd.v1.SyncDeviceCapabilityR\n" +
	"capability\"\xcb\x02\n" +
	"\x15GetSyncConfigResponse\x12-\n" +
	"\x06config\x18\x01 \x01(\v2\x15.fleetd.v1.SyncConfigR\x06config\x12)\n" +
	"\x10metrics_endpoint\x18\x02 \x01(\tR\x0fmetricsEndpoint\x12#\n" +
	"\rlogs_endpoint\x18\x03 \x01(\tR\flogsEndpoint\x12'\n" +
	"\x0fevents_endpoint\x18\x04 \x01(\tR\x0eeventsEndpoint\x12-\n" +
	"\x12enable_compression\x18\x05 \x01(\bR\x11enableCompression\x12'\n" +
	"\x0fenable_batching\x18\x06 \x01(\bR\x0eenableBatching\x122\n" +
	"\x15enable_edge_analytics\x18\a \x01(\bR\x13enableEdgeAnalytics\"\x8a\x02\n" +
	"\bSyncData\x123\n" +
	"\ametrics\x18\x01 \x01(\v2\x17.fleetd.v1.MetricsBatchH\x00R\ametrics\x12*\n" +
	"\x04logs\x18\x02 \x01(\v2\x14.fleetd.v1.LogsBatchH\x00R\x04logs\x128\n" +
	"\theartbeat\x18\x03 \x01(\v2\x18.fleetd.v1.SyncHeartbeatH\x00R\theartbeat\x12&\n" +
	"\x03ack\x18\x04 \x01(\v2\x12.fleetd.v1.SyncAckH\x00R\x03ack\x123\n" +
	"\bmetadata\x18\n" +
	" \x01(\v2\x17.fleetd.v1.SyncMetadataR\bmetadataB\x06\n" +
	"\x04data\"\xc8\x02\n" +
	"\vSyncCommand\x12<\n" +
	"\rconfig_update\x18\x01 \x01(\v2\x15.fleetd.v1.SyncConfigH\x00R\fconfigUpdate\x12,\n" +
	"\x05flush\x18\x02 \x01(\v2\x14.fleetd.v1.SyncFlushH\x00R\x05flush\x12,\n" +
	"\x05pause\x18\x03 \x01(\v2\x14.fleetd.v1.SyncPauseH\x00R\x05pause\x12/\n" +
	"\x06resume\x18\x04 \x01(\v2\x15.fleetd.v1.SyncResumeH\x00R\x06resume\x12&\n" +
	"\x03ack\x18\x05 \x01(\v2\x12.fleetd.v1.SyncAckH\x00R\x03ack\x12;\n" +
	"\vserver_time\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"serverTimeB\t\n" +
	"\acommand\"\xeb\x01\n" +
	"\rSyncHeartbeat\x12)\n" +
	"\x10unsynced_metrics\x18\x01 \x01(\x03R\x0funsyncedMetrics\x12#\n" +
	"\runsynced_logs\x18\x02 \x01(\x03R\funsyncedLogs\x12,\n" +
	"\x12storage_used_bytes\x18\x03 \x01(\x03R\x10storageUsedBytes\x12*\n" +
	"\x11cpu_usage_percent\x18\x04 \x01(\x01R\x0fcpuUsagePercent\x120\n" +
	"\x14memory_usage_percent\x18\x05 \x01(\x01R\x12memoryUsagePercent\"q\n" +
	"\aSyncAck\x12'\n" +
	"\x0fsequence_number\x18\x01 \x01(\x03R\x0esequenceNumber\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\"9\n" +
	"\tSyncFlush\x12\x14\n" +
	"\x05force\x18\x01 \x01(\bR\x05force\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\"N\n" +
	"\tSyncPause\x12)\n" +
	"\x10duration_seconds\x18\x01 \x01(\x05R\x0fdurationSeconds\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\"$\n" +
	"\n" +
	"SyncResume\x12\x16\n" +
	"\x06reason\x18\x01 \x01(\tR\x06reason2\xb3\x02\n" +
	"\vSyncService\x12L\n" +
	"\vSyncMetrics\x12\x1d.fleetd.v1.SyncMetricsRequest\x1a\x1e.fleetd.v1.SyncMetricsResponse\x12C\n" +
	"\bSyncLogs\x12\x1a.fleetd.v1.SyncLogsRequest\x1a\x1b.fleetd.v1.SyncLogsResponse\x12R\n" +
	"\rGetSyncConfig\x12\x1f.fleetd.v1.GetSyncConfigRequest\x1a .fleetd.v1.GetSyncConfigResponse\x12=\n" +
	"\n" +
	"StreamSync\x12\x13.fleetd.v1.SyncData\x1a\x16.fleetd.v1.SyncCommand(\x010\x01B\x80\x01\n" +
	"\rcom.fleetd.v1B\tSyncProtoP\x01Z\x1ffleetd.sh/gen/fleetd/v1;fleetpb\xa2\x02\x03FXX\xaa\x02\tFleetd.V1\xca\x02\tFleetd\\V1\xe2\x02\x15Fleetd\\V1\\GPBMetadata\xea\x02\n" +
	"Fleetd::V1b\x06proto3"

var (
	file_fleetd_v1_sync_proto_rawDescOnce sync.Once
	file_fleetd_v1_sync_proto_rawDescData []byte
)

func file_fleetd_v1_sync_proto_rawDescGZIP() []byte {
	file_fleetd_v1_sync_proto_rawDescOnce.Do(func() {
		file_fleetd_v1_sync_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_fleetd_v1_sync_proto_rawDesc), len(file_fleetd_v1_sync_proto_rawDesc)))
	})
	return file_fleetd_v1_sync_proto_rawDescData
}

var file_fleetd_v1_sync_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_fleetd_v1_sync_proto_goTypes = []any{
	(*SyncDeviceCapability)(nil),  // 0: fleetd.v1.SyncDeviceCapability
	(*Metric)(nil),                // 1: fleetd.v1.Metric
	(*MetricsBatch)(nil),          // 2: fleetd.v1.MetricsBatch
	(*LogEntry)(nil),              // 3: fleetd.v1.LogEntry
	(*LogsBatch)(nil),             // 4: fleetd.v1.LogsBatch
	(*SyncMetadata)(nil),          // 5: fleetd.v1.SyncMetadata
	(*SyncConfig)(nil),            // 6: fleetd.v1.SyncConfig
	(*SyncMetricsRequest)(nil),    // 7: fleetd.v1.SyncMetricsRequest
	(*SyncMetricsResponse)(nil),   // 8: fleetd.v1.SyncMetricsResponse
	(*SyncLogsRequest)(nil),       // 9: fleetd.v1.SyncLogsRequest
	(*SyncLogsResponse)(nil),      // 10: fleetd.v1.SyncLogsResponse
	(*GetSyncConfigRequest)(nil),  // 11: fleetd.v1.GetSyncConfigRequest
	(*GetSyncConfigResponse)(nil), // 12: fleetd.v1.GetSyncConfigResponse
	(*SyncData)(nil),              // 13: fleetd.v1.SyncData
	(*SyncCommand)(nil),           // 14: fleetd.v1.SyncCommand
	(*SyncHeartbeat)(nil),         // 15: fleetd.v1.SyncHeartbeat
	(*SyncAck)(nil),               // 16: fleetd.v1.SyncAck
	(*SyncFlush)(nil),             // 17: fleetd.v1.SyncFlush
	(*SyncPause)(nil),             // 18: fleetd.v1.SyncPause
	(*SyncResume)(nil),            // 19: fleetd.v1.SyncResume
	nil,                           // 20: fleetd.v1.Metric.LabelsEntry
	nil,                           // 21: fleetd.v1.LogEntry.FieldsEntry
	(*timestamppb.Timestamp)(nil), // 22: google.protobuf.Timestamp
}
var file_fleetd_v1_sync_proto_depIdxs = []int32{
	22, // 0: fleetd.v1.Metric.timestamp:type_name -> google.protobuf.Timestamp
	20, // 1: fleetd.v1.Metric.labels:type_name -> fleetd.v1.Metric.LabelsEntry
	1,  // 2: fleetd.v1.MetricsBatch.metrics:type_name -> fleetd.v1.Metric
	22, // 3: fleetd.v1.LogEntry.timestamp:type_name -> google.protobuf.Timestamp
	21, // 4: fleetd.v1.LogEntry.fields:type_name -> fleetd.v1.LogEntry.FieldsEntry
	3,  // 5: fleetd.v1.LogsBatch.logs:type_name -> fleetd.v1.LogEntry
	22, // 6: fleetd.v1.SyncMetadata.client_time:type_name -> google.protobuf.Timestamp
	0,  // 7: fleetd.v1.SyncMetadata.capability:type_name -> fleetd.v1.SyncDeviceCapability
	5,  // 8: fleetd.v1.SyncMetricsRequest.metadata:type_name -> fleetd.v1.SyncMetadata
	2,  // 9: fleetd.v1.SyncMetricsRequest.batch:type_name -> fleetd.v1.MetricsBatch
	6,  // 10: fleetd.v1.SyncMetricsResponse.config_update:type_name -> fleetd.v1.SyncConfig
	22, // 11: fleetd.v1.SyncMetricsResponse.server_time:type_name -> google.protobuf.Timestamp
	5,  // 12: fleetd.v1.SyncLogsRequest.metadata:type_name -> fleetd.v1.SyncMetadata
	4,  // 13: fleetd.v1.SyncLogsRequest.batch:type_name -> fleetd.v1.LogsBatch
	6,  // 14: fleetd.v1.SyncLogsResponse.config_update:type_name -> fleetd.v1.SyncConfig
	0,  // 15: fleetd.v1.GetSyncConfigRequest.capability:type_name -> fleetd.v1.SyncDeviceCapability
	6,  // 16: fleetd.v1.GetSyncConfigResponse.config:type_name -> fleetd.v1.SyncConfig
	2,  // 17: fleetd.v1.SyncData.metrics:type_name -> fleetd.v1.MetricsBatch
	4,  // 18: fleetd.v1.SyncData.logs:type_name -> fleetd.v1.LogsBatch
	15, // 19: fleetd.v1.SyncData.heartbeat:type_name -> fleetd.v1.SyncHeartbeat
	16, // 20: fleetd.v1.SyncData.ack:type_name -> fleetd.v1.SyncAck
	5,  // 21: fleetd.v1.SyncData.metadata:type_name -> fleetd.v1.SyncMetadata
	6,  // 22: fleetd.v1.SyncCommand.config_update:type_name -> fleetd.v1.SyncConfig
	17, // 23: fleetd.v1.SyncCommand.flush:type_name -> fleetd.v1.SyncFlush
	18, // 24: fleetd.v1.SyncCommand.pause:type_name -> fleetd.v1.SyncPause
	19, // 25: fleetd.v1.SyncCommand.resume:type_name -> fleetd.v1.SyncResume
	16, // 26: fleetd.v1.SyncCommand.ack:type_name -> fleetd.v1.SyncAck
	22, // 27: fleetd.v1.SyncCommand.server_time:type_name -> google.protobuf.Timestamp
	7,  // 28: fleetd.v1.SyncService.SyncMetrics:input_type -> fleetd.v1.SyncMetricsRequest
	9,  // 29: fleetd.v1.SyncService.SyncLogs:input_type -> fleetd.v1.SyncLogsRequest
	11, // 30: fleetd.v1.SyncService.GetSyncConfig:input_type -> fleetd.v1.GetSyncConfigRequest
	13, // 31: fleetd.v1.SyncService.StreamSync:input_type -> fleetd.v1.SyncData
	8,  // 32: fleetd.v1.SyncService.SyncMetrics:output_type -> fleetd.v1.SyncMetricsResponse
	10, // 33: fleetd.v1.SyncService.SyncLogs:output_type -> fleetd.v1.SyncLogsResponse
	12, // 34: fleetd.v1.SyncService.GetSyncConfig:output_type -> fleetd.v1.GetSyncConfigResponse
	14, // 35: fleetd.v1.SyncService.StreamSync:output_type -> fleetd.v1.SyncCommand
	32, // [32:36] is the sub-list for method output_type
	28, // [28:32] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_fleetd_v1_sync_proto_init() }
func file_fleetd_v1_sync_proto_init() {
	if File_fleetd_v1_sync_proto != nil {
		return
	}
	file_fleetd_v1_sync_proto_msgTypes[13].OneofWrappers = []any{
		(*SyncData_Metrics)(nil),
		(*SyncData_Logs)(nil),
		(*SyncData_Heartbeat)(nil),
		(*SyncData_Ack)(nil),
	}
	file_fleetd_v1_sync_proto_msgTypes[14].OneofWrappers = []any{
		(*SyncCommand_ConfigUpdate)(nil),
		(*SyncCommand_Flush)(nil),
		(*SyncCommand_Pause)(nil),
		(*SyncCommand_Resume)(nil),
		(*SyncCommand_Ack)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_fleetd_v1_sync_proto_rawDesc), len(file_fleetd_v1_sync_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_fleetd_v1_sync_proto_goTypes,
		DependencyIndexes: file_fleetd_v1_sync_proto_depIdxs,
		MessageInfos:      file_fleetd_v1_sync_proto_msgTypes,
	}.Build()
	File_fleetd_v1_sync_proto = out.File
	file_fleetd_v1_sync_proto_goTypes = nil
	file_fleetd_v1_sync_proto_depIdxs = nil
}
