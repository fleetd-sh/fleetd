// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: fleetd/v1/telemetry.proto

package fleetpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LogLevel int32

const (
	LogLevel_LOG_LEVEL_UNSPECIFIED LogLevel = 0
	LogLevel_LOG_LEVEL_DEBUG       LogLevel = 1
	LogLevel_LOG_LEVEL_INFO        LogLevel = 2
	LogLevel_LOG_LEVEL_WARN        LogLevel = 3
	LogLevel_LOG_LEVEL_ERROR       LogLevel = 4
	LogLevel_LOG_LEVEL_FATAL       LogLevel = 5
)

// Enum value maps for LogLevel.
var (
	LogLevel_name = map[int32]string{
		0: "LOG_LEVEL_UNSPECIFIED",
		1: "LOG_LEVEL_DEBUG",
		2: "LOG_LEVEL_INFO",
		3: "LOG_LEVEL_WARN",
		4: "LOG_LEVEL_ERROR",
		5: "LOG_LEVEL_FATAL",
	}
	LogLevel_value = map[string]int32{
		"LOG_LEVEL_UNSPECIFIED": 0,
		"LOG_LEVEL_DEBUG":       1,
		"LOG_LEVEL_INFO":        2,
		"LOG_LEVEL_WARN":        3,
		"LOG_LEVEL_ERROR":       4,
		"LOG_LEVEL_FATAL":       5,
	}
)

func (x LogLevel) Enum() *LogLevel {
	p := new(LogLevel)
	*p = x
	return p
}

func (x LogLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_fleetd_v1_telemetry_proto_enumTypes[0].Descriptor()
}

func (LogLevel) Type() protoreflect.EnumType {
	return &file_fleetd_v1_telemetry_proto_enumTypes[0]
}

func (x LogLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogLevel.Descriptor instead.
func (LogLevel) EnumDescriptor() ([]byte, []int) {
	return file_fleetd_v1_telemetry_proto_rawDescGZIP(), []int{0}
}

type AlertType int32

const (
	AlertType_ALERT_TYPE_UNSPECIFIED    AlertType = 0
	AlertType_ALERT_TYPE_CPU            AlertType = 1
	AlertType_ALERT_TYPE_MEMORY         AlertType = 2
	AlertType_ALERT_TYPE_DISK           AlertType = 3
	AlertType_ALERT_TYPE_NETWORK        AlertType = 4
	AlertType_ALERT_TYPE_TEMPERATURE    AlertType = 5
	AlertType_ALERT_TYPE_DEVICE_OFFLINE AlertType = 6
	AlertType_ALERT_TYPE_CUSTOM         AlertType = 7
)

// Enum value maps for AlertType.
var (
	AlertType_name = map[int32]string{
		0: "ALERT_TYPE_UNSPECIFIED",
		1: "ALERT_TYPE_CPU",
		2: "ALERT_TYPE_MEMORY",
		3: "ALERT_TYPE_DISK",
		4: "ALERT_TYPE_NETWORK",
		5: "ALERT_TYPE_TEMPERATURE",
		6: "ALERT_TYPE_DEVICE_OFFLINE",
		7: "ALERT_TYPE_CUSTOM",
	}
	AlertType_value = map[string]int32{
		"ALERT_TYPE_UNSPECIFIED":    0,
		"ALERT_TYPE_CPU":            1,
		"ALERT_TYPE_MEMORY":         2,
		"ALERT_TYPE_DISK":           3,
		"ALERT_TYPE_NETWORK":        4,
		"ALERT_TYPE_TEMPERATURE":    5,
		"ALERT_TYPE_DEVICE_OFFLINE": 6,
		"ALERT_TYPE_CUSTOM":         7,
	}
)

func (x AlertType) Enum() *AlertType {
	p := new(AlertType)
	*p = x
	return p
}

func (x AlertType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AlertType) Descriptor() protoreflect.EnumDescriptor {
	return file_fleetd_v1_telemetry_proto_enumTypes[1].Descriptor()
}

func (AlertType) Type() protoreflect.EnumType {
	return &file_fleetd_v1_telemetry_proto_enumTypes[1]
}

func (x AlertType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AlertType.Descriptor instead.
func (AlertType) EnumDescriptor() ([]byte, []int) {
	return file_fleetd_v1_telemetry_proto_rawDescGZIP(), []int{1}
}

type AlertCondition int32

const (
	AlertCondition_ALERT_CONDITION_UNSPECIFIED  AlertCondition = 0
	AlertCondition_ALERT_CONDITION_GREATER_THAN AlertCondition = 1
	AlertCondition_ALERT_CONDITION_LESS_THAN    AlertCondition = 2
	AlertCondition_ALERT_CONDITION_EQUAL        AlertCondition = 3
	AlertCondition_ALERT_CONDITION_NOT_EQUAL    AlertCondition = 4
)

// Enum value maps for AlertCondition.
var (
	AlertCondition_name = map[int32]string{
		0: "ALERT_CONDITION_UNSPECIFIED",
		1: "ALERT_CONDITION_GREATER_THAN",
		2: "ALERT_CONDITION_LESS_THAN",
		3: "ALERT_CONDITION_EQUAL",
		4: "ALERT_CONDITION_NOT_EQUAL",
	}
	AlertCondition_value = map[string]int32{
		"ALERT_CONDITION_UNSPECIFIED":  0,
		"ALERT_CONDITION_GREATER_THAN": 1,
		"ALERT_CONDITION_LESS_THAN":    2,
		"ALERT_CONDITION_EQUAL":        3,
		"ALERT_CONDITION_NOT_EQUAL":    4,
	}
)

func (x AlertCondition) Enum() *AlertCondition {
	p := new(AlertCondition)
	*p = x
	return p
}

func (x AlertCondition) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AlertCondition) Descriptor() protoreflect.EnumDescriptor {
	return file_fleetd_v1_telemetry_proto_enumTypes[2].Descriptor()
}

func (AlertCondition) Type() protoreflect.EnumType {
	return &file_fleetd_v1_telemetry_proto_enumTypes[2]
}

func (x AlertCondition) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AlertCondition.Descriptor instead.
func (AlertCondition) EnumDescriptor() ([]byte, []int) {
	return file_fleetd_v1_telemetry_proto_rawDescGZIP(), []int{2}
}

type TelemetryData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceId      string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	CpuUsage      float64                `protobuf:"fixed64,3,opt,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`
	MemoryUsage   float64                `protobuf:"fixed64,4,opt,name=memory_usage,json=memoryUsage,proto3" json:"memory_usage,omitempty"`
	DiskUsage     float64                `protobuf:"fixed64,5,opt,name=disk_usage,json=diskUsage,proto3" json:"disk_usage,omitempty"`
	NetworkUsage  float64                `protobuf:"fixed64,6,opt,name=network_usage,json=networkUsage,proto3" json:"network_usage,omitempty"`
	Temperature   float64                `protobuf:"fixed64,7,opt,name=temperature,proto3" json:"temperature,omitempty"`
	CustomMetrics map[string]float64     `protobuf:"bytes,8,rep,name=custom_metrics,json=customMetrics,proto3" json:"custom_metrics,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TelemetryData) Reset() {
	*x = TelemetryData{}
	mi := &file_fleetd_v1_telemetry_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TelemetryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TelemetryData) ProtoMessage() {}

func (x *TelemetryData) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_telemetry_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TelemetryData.ProtoReflect.Descriptor instead.
func (*TelemetryData) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_telemetry_proto_rawDescGZIP(), []int{0}
}

func (x *TelemetryData) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *TelemetryData) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *TelemetryData) GetCpuUsage() float64 {
	if x != nil {
		return x.CpuUsage
	}
	return 0
}

func (x *TelemetryData) GetMemoryUsage() float64 {
	if x != nil {
		return x.MemoryUsage
	}
	return 0
}

func (x *TelemetryData) GetDiskUsage() float64 {
	if x != nil {
		return x.DiskUsage
	}
	return 0
}

func (x *TelemetryData) GetNetworkUsage() float64 {
	if x != nil {
		return x.NetworkUsage
	}
	return 0
}

func (x *TelemetryData) GetTemperature() float64 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *TelemetryData) GetCustomMetrics() map[string]float64 {
	if x != nil {
		return x.CustomMetrics
	}
	return nil
}

type StreamTelemetryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceId      string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	CpuUsage      float64                `protobuf:"fixed64,3,opt,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`
	MemoryUsage   float64                `protobuf:"fixed64,4,opt,name=memory_usage,json=memoryUsage,proto3" json:"memory_usage,omitempty"`
	DiskUsage     float64                `protobuf:"fixed64,5,opt,name=disk_usage,json=diskUsage,proto3" json:"disk_usage,omitempty"`
	NetworkUsage  float64                `protobuf:"fixed64,6,opt,name=network_usage,json=networkUsage,proto3" json:"network_usage,omitempty"`
	Temperature   float64                `protobuf:"fixed64,7,opt,name=temperature,proto3" json:"temperature,omitempty"`
	CustomMetrics map[string]float64     `protobuf:"bytes,8,rep,name=custom_metrics,json=customMetrics,proto3" json:"custom_metrics,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamTelemetryResponse) Reset() {
	*x = StreamTelemetryResponse{}
	mi := &file_fleetd_v1_telemetry_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamTelemetryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamTelemetryResponse) ProtoMessage() {}

func (x *StreamTelemetryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_telemetry_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamTelemetryResponse.ProtoReflect.Descriptor instead.
func (*StreamTelemetryResponse) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_telemetry_proto_rawDescGZIP(), []int{1}
}

func (x *StreamTelemetryResponse) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *StreamTelemetryResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *StreamTelemetryResponse) GetCpuUsage() float64 {
	if x != nil {
		return x.CpuUsage
	}
	return 0
}

func (x *StreamTelemetryResponse) GetMemoryUsage() float64 {
	if x != nil {
		return x.MemoryUsage
	}
	return 0
}

func (x *StreamTelemetryResponse) GetDiskUsage() float64 {
	if x != nil {
		return x.DiskUsage
	}
	return 0
}

func (x *StreamTelemetryResponse) GetNetworkUsage() float64 {
	if x != nil {
		return x.NetworkUsage
	}
	return 0
}

func (x *StreamTelemetryResponse) GetTemperature() float64 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *StreamTelemetryResponse) GetCustomMetrics() map[string]float64 {
	if x != nil {
		return x.CustomMetrics
	}
	return nil
}

type TelemetryLogEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DeviceId      string                 `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Level         LogLevel               `protobuf:"varint,4,opt,name=level,proto3,enum=fleetd.v1.LogLevel" json:"level,omitempty"`
	Message       string                 `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,6,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TelemetryLogEntry) Reset() {
	*x = TelemetryLogEntry{}
	mi := &file_fleetd_v1_telemetry_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TelemetryLogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TelemetryLogEntry) ProtoMessage() {}

func (x *TelemetryLogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_telemetry_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TelemetryLogEntry.ProtoReflect.Descriptor instead.
func (*TelemetryLogEntry) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_telemetry_proto_rawDescGZIP(), []int{2}
}

func (x *TelemetryLogEntry) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TelemetryLogEntry) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *TelemetryLogEntry) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *TelemetryLogEntry) GetLevel() LogLevel {
	if x != nil {
		return x.Level
	}
	return LogLevel_LOG_LEVEL_UNSPECIFIED
}

func (x *TelemetryLogEntry) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TelemetryLogEntry) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type StreamLogsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DeviceId      string                 `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Level         LogLevel               `protobuf:"varint,4,opt,name=level,proto3,enum=fleetd.v1.LogLevel" json:"level,omitempty"`
	Message       string                 `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,6,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamLogsResponse) Reset() {
	*x = StreamLogsResponse{}
	mi := &file_fleetd_v1_telemetry_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamLogsResponse) ProtoMessage() {}

func (x *StreamLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_telemetry_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamLogsResponse.ProtoReflect.Descriptor instead.
func (*StreamLogsResponse) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_telemetry_proto_rawDescGZIP(), []int{3}
}

func (x *StreamLogsResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StreamLogsResponse) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *StreamLogsResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *StreamLogsResponse) GetLevel() LogLevel {
	if x != nil {
		return x.Level
	}
	return LogLevel_LOG_LEVEL_UNSPECIFIED
}

func (x *StreamLogsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *StreamLogsResponse) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type Alert struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Type          AlertType              `protobuf:"varint,4,opt,name=type,proto3,enum=fleetd.v1.AlertType" json:"type,omitempty"`
	Threshold     float64                `protobuf:"fixed64,5,opt,name=threshold,proto3" json:"threshold,omitempty"`
	Condition     AlertCondition         `protobuf:"varint,6,opt,name=condition,proto3,enum=fleetd.v1.AlertCondition" json:"condition,omitempty"`
	Enabled       bool                   `protobuf:"varint,7,opt,name=enabled,proto3" json:"enabled,omitempty"`
	DeviceIds     []string               `protobuf:"bytes,8,rep,name=device_ids,json=deviceIds,proto3" json:"device_ids,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Alert) Reset() {
	*x = Alert{}
	mi := &file_fleetd_v1_telemetry_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Alert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Alert) ProtoMessage() {}

func (x *Alert) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_telemetry_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Alert.ProtoReflect.Descriptor instead.
func (*Alert) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_telemetry_proto_rawDescGZIP(), []int{4}
}

func (x *Alert) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Alert) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Alert) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Alert) GetType() AlertType {
	if x != nil {
		return x.Type
	}
	return AlertType_ALERT_TYPE_UNSPECIFIED
}

func (x *Alert) GetThreshold() float64 {
	if x != nil {
		return x.Threshold
	}
	return 0
}

func (x *Alert) GetCondition() AlertCondition {
	if x != nil {
		return x.Condition
	}
	return AlertCondition_ALERT_CONDITION_UNSPECIFIED
}

func (x *Alert) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Alert) GetDeviceIds() []string {
	if x != nil {
		return x.DeviceIds
	}
	return nil
}

func (x *Alert) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Alert) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type GetTelemetryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceId      string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Limit         int32                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTelemetryRequest) Reset() {
	*x = GetTelemetryRequest{}
	mi := &file_fleetd_v1_telemetry_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTelemetryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTelemetryRequest) ProtoMessage() {}

func (x *GetTelemetryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_telemetry_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTelemetryRequest.ProtoReflect.Descriptor instead.
func (*GetTelemetryRequest) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_telemetry_proto_rawDescGZIP(), []int{5}
}

func (x *GetTelemetryRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *GetTelemetryRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *GetTelemetryRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *GetTelemetryRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetTelemetryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []*TelemetryData       `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTelemetryResponse) Reset() {
	*x = GetTelemetryResponse{}
	mi := &file_fleetd_v1_telemetry_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTelemetryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTelemetryResponse) ProtoMessage() {}

func (x *GetTelemetryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_telemetry_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTelemetryResponse.ProtoReflect.Descriptor instead.
func (*GetTelemetryResponse) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_telemetry_proto_rawDescGZIP(), []int{6}
}

func (x *GetTelemetryResponse) GetData() []*TelemetryData {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetMetricsRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	DeviceIds       []string               `protobuf:"bytes,1,rep,name=device_ids,json=deviceIds,proto3" json:"device_ids,omitempty"`
	MetricNames     []string               `protobuf:"bytes,2,rep,name=metric_names,json=metricNames,proto3" json:"metric_names,omitempty"`
	StartTime       *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime         *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Aggregation     string                 `protobuf:"bytes,5,opt,name=aggregation,proto3" json:"aggregation,omitempty"` // avg, min, max, sum
	IntervalSeconds int32                  `protobuf:"varint,6,opt,name=interval_seconds,json=intervalSeconds,proto3" json:"interval_seconds,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetMetricsRequest) Reset() {
	*x = GetMetricsRequest{}
	mi := &file_fleetd_v1_telemetry_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetricsRequest) ProtoMessage() {}

func (x *GetMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_telemetry_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetricsRequest.ProtoReflect.Descriptor instead.
func (*GetMetricsRequest) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_telemetry_proto_rawDescGZIP(), []int{7}
}

func (x *GetMetricsRequest) GetDeviceIds() []string {
	if x != nil {
		return x.DeviceIds
	}
	return nil
}

func (x *GetMetricsRequest) GetMetricNames() []string {
	if x != nil {
		return x.MetricNames
	}
	return nil
}

func (x *GetMetricsRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *GetMetricsRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *GetMetricsRequest) GetAggregation() string {
	if x != nil {
		return x.Aggregation
	}
	return ""
}

func (x *GetMetricsRequest) GetIntervalSeconds() int32 {
	if x != nil {
		return x.IntervalSeconds
	}
	return 0
}

type GetMetricsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metrics       []*MetricData          `protobuf:"bytes,1,rep,name=metrics,proto3" json:"metrics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMetricsResponse) Reset() {
	*x = GetMetricsResponse{}
	mi := &file_fleetd_v1_telemetry_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetricsResponse) ProtoMessage() {}

func (x *GetMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_telemetry_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetricsResponse.ProtoReflect.Descriptor instead.
func (*GetMetricsResponse) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_telemetry_proto_rawDescGZIP(), []int{8}
}

func (x *GetMetricsResponse) GetMetrics() []*MetricData {
	if x != nil {
		return x.Metrics
	}
	return nil
}

type MetricData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Value         float64                `protobuf:"fixed64,3,opt,name=value,proto3" json:"value,omitempty"`
	DeviceId      string                 `protobuf:"bytes,4,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetricData) Reset() {
	*x = MetricData{}
	mi := &file_fleetd_v1_telemetry_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricData) ProtoMessage() {}

func (x *MetricData) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_telemetry_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricData.ProtoReflect.Descriptor instead.
func (*MetricData) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_telemetry_proto_rawDescGZIP(), []int{9}
}

func (x *MetricData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MetricData) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *MetricData) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *MetricData) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *MetricData) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type StreamTelemetryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceIds     []string               `protobuf:"bytes,1,rep,name=device_ids,json=deviceIds,proto3" json:"device_ids,omitempty"`
	MetricNames   []string               `protobuf:"bytes,2,rep,name=metric_names,json=metricNames,proto3" json:"metric_names,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamTelemetryRequest) Reset() {
	*x = StreamTelemetryRequest{}
	mi := &file_fleetd_v1_telemetry_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamTelemetryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamTelemetryRequest) ProtoMessage() {}

func (x *StreamTelemetryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_telemetry_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamTelemetryRequest.ProtoReflect.Descriptor instead.
func (*StreamTelemetryRequest) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_telemetry_proto_rawDescGZIP(), []int{10}
}

func (x *StreamTelemetryRequest) GetDeviceIds() []string {
	if x != nil {
		return x.DeviceIds
	}
	return nil
}

func (x *StreamTelemetryRequest) GetMetricNames() []string {
	if x != nil {
		return x.MetricNames
	}
	return nil
}

type GetLogsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceIds     []string               `protobuf:"bytes,1,rep,name=device_ids,json=deviceIds,proto3" json:"device_ids,omitempty"`
	Levels        []LogLevel             `protobuf:"varint,2,rep,packed,name=levels,proto3,enum=fleetd.v1.LogLevel" json:"levels,omitempty"`
	Filter        string                 `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Limit         int32                  `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLogsRequest) Reset() {
	*x = GetLogsRequest{}
	mi := &file_fleetd_v1_telemetry_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogsRequest) ProtoMessage() {}

func (x *GetLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_telemetry_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLogsRequest.ProtoReflect.Descriptor instead.
func (*GetLogsRequest) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_telemetry_proto_rawDescGZIP(), []int{11}
}

func (x *GetLogsRequest) GetDeviceIds() []string {
	if x != nil {
		return x.DeviceIds
	}
	return nil
}

func (x *GetLogsRequest) GetLevels() []LogLevel {
	if x != nil {
		return x.Levels
	}
	return nil
}

func (x *GetLogsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *GetLogsRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *GetLogsRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *GetLogsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetLogsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Logs          []*TelemetryLogEntry   `protobuf:"bytes,1,rep,name=logs,proto3" json:"logs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLogsResponse) Reset() {
	*x = GetLogsResponse{}
	mi := &file_fleetd_v1_telemetry_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogsResponse) ProtoMessage() {}

func (x *GetLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_telemetry_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLogsResponse.ProtoReflect.Descriptor instead.
func (*GetLogsResponse) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_telemetry_proto_rawDescGZIP(), []int{12}
}

func (x *GetLogsResponse) GetLogs() []*TelemetryLogEntry {
	if x != nil {
		return x.Logs
	}
	return nil
}

type StreamLogsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceIds     []string               `protobuf:"bytes,1,rep,name=device_ids,json=deviceIds,proto3" json:"device_ids,omitempty"`
	Levels        []LogLevel             `protobuf:"varint,2,rep,packed,name=levels,proto3,enum=fleetd.v1.LogLevel" json:"levels,omitempty"`
	Filter        string                 `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamLogsRequest) Reset() {
	*x = StreamLogsRequest{}
	mi := &file_fleetd_v1_telemetry_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamLogsRequest) ProtoMessage() {}

func (x *StreamLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_telemetry_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamLogsRequest.ProtoReflect.Descriptor instead.
func (*StreamLogsRequest) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_telemetry_proto_rawDescGZIP(), []int{13}
}

func (x *StreamLogsRequest) GetDeviceIds() []string {
	if x != nil {
		return x.DeviceIds
	}
	return nil
}

func (x *StreamLogsRequest) GetLevels() []LogLevel {
	if x != nil {
		return x.Levels
	}
	return nil
}

func (x *StreamLogsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

type ConfigureAlertRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Alert         *Alert                 `protobuf:"bytes,1,opt,name=alert,proto3" json:"alert,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigureAlertRequest) Reset() {
	*x = ConfigureAlertRequest{}
	mi := &file_fleetd_v1_telemetry_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigureAlertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureAlertRequest) ProtoMessage() {}

func (x *ConfigureAlertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_telemetry_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureAlertRequest.ProtoReflect.Descriptor instead.
func (*ConfigureAlertRequest) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_telemetry_proto_rawDescGZIP(), []int{14}
}

func (x *ConfigureAlertRequest) GetAlert() *Alert {
	if x != nil {
		return x.Alert
	}
	return nil
}

type ConfigureAlertResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Alert         *Alert                 `protobuf:"bytes,1,opt,name=alert,proto3" json:"alert,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigureAlertResponse) Reset() {
	*x = ConfigureAlertResponse{}
	mi := &file_fleetd_v1_telemetry_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigureAlertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureAlertResponse) ProtoMessage() {}

func (x *ConfigureAlertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_telemetry_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureAlertResponse.ProtoReflect.Descriptor instead.
func (*ConfigureAlertResponse) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_telemetry_proto_rawDescGZIP(), []int{15}
}

func (x *ConfigureAlertResponse) GetAlert() *Alert {
	if x != nil {
		return x.Alert
	}
	return nil
}

type ListAlertsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceIds     []string               `protobuf:"bytes,1,rep,name=device_ids,json=deviceIds,proto3" json:"device_ids,omitempty"`
	EnabledOnly   bool                   `protobuf:"varint,2,opt,name=enabled_only,json=enabledOnly,proto3" json:"enabled_only,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAlertsRequest) Reset() {
	*x = ListAlertsRequest{}
	mi := &file_fleetd_v1_telemetry_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAlertsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlertsRequest) ProtoMessage() {}

func (x *ListAlertsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_telemetry_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlertsRequest.ProtoReflect.Descriptor instead.
func (*ListAlertsRequest) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_telemetry_proto_rawDescGZIP(), []int{16}
}

func (x *ListAlertsRequest) GetDeviceIds() []string {
	if x != nil {
		return x.DeviceIds
	}
	return nil
}

func (x *ListAlertsRequest) GetEnabledOnly() bool {
	if x != nil {
		return x.EnabledOnly
	}
	return false
}

type ListAlertsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Alerts        []*Alert               `protobuf:"bytes,1,rep,name=alerts,proto3" json:"alerts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAlertsResponse) Reset() {
	*x = ListAlertsResponse{}
	mi := &file_fleetd_v1_telemetry_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAlertsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlertsResponse) ProtoMessage() {}

func (x *ListAlertsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_telemetry_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlertsResponse.ProtoReflect.Descriptor instead.
func (*ListAlertsResponse) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_telemetry_proto_rawDescGZIP(), []int{17}
}

func (x *ListAlertsResponse) GetAlerts() []*Alert {
	if x != nil {
		return x.Alerts
	}
	return nil
}

type DeleteAlertRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AlertId       string                 `protobuf:"bytes,1,opt,name=alert_id,json=alertId,proto3" json:"alert_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAlertRequest) Reset() {
	*x = DeleteAlertRequest{}
	mi := &file_fleetd_v1_telemetry_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAlertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAlertRequest) ProtoMessage() {}

func (x *DeleteAlertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_telemetry_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAlertRequest.ProtoReflect.Descriptor instead.
func (*DeleteAlertRequest) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_telemetry_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteAlertRequest) GetAlertId() string {
	if x != nil {
		return x.AlertId
	}
	return ""
}

type DeleteAlertResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAlertResponse) Reset() {
	*x = DeleteAlertResponse{}
	mi := &file_fleetd_v1_telemetry_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAlertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAlertResponse) ProtoMessage() {}

func (x *DeleteAlertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_telemetry_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAlertResponse.ProtoReflect.Descriptor instead.
func (*DeleteAlertResponse) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_telemetry_proto_rawDescGZIP(), []int{19}
}

var File_fleetd_v1_telemetry_proto protoreflect.FileDescriptor

const file_fleetd_v1_telemetry_proto_rawDesc = "" +
	"\n" +
	"\x19fleetd/v1/telemetry.proto\x12\tfleetd.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\xa2\x03\n" +
	"\rTelemetryData\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x1b\n" +
	"\tcpu_usage\x18\x03 \x01(\x01R\bcpuUsage\x12!\n" +
	"\fmemory_usage\x18\x04 \x01(\x01R\vmemoryUsage\x12\x1d\n" +
	"\n" +
	"disk_usage\x18\x05 \x01(\x01R\tdiskUsage\x12#\n" +
	"\rnetwork_usage\x18\x06 \x01(\x01R\fnetworkUsage\x12 \n" +
	"\vtemperature\x18\a \x01(\x01R\vtemperature\x12R\n" +
	"\x0ecustom_metrics\x18\b \x03(\v2+.fleetd.v1.TelemetryData.CustomMetricsEntryR\rcustomMetrics\x1a@\n" +
	"\x12CustomMetricsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value:\x028\x01\"\xb6\x03\n" +
	"\x17StreamTelemetryResponse\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x1b\n" +
	"\tcpu_usage\x18\x03 \x01(\x01R\bcpuUsage\x12!\n" +
	"\fmemory_usage\x18\x04 \x01(\x01R\vmemoryUsage\x12\x1d\n" +
	"\n" +
	"disk_usage\x18\x05 \x01(\x01R\tdiskUsage\x12#\n" +
	"\rnetwork_usage\x18\x06 \x01(\x01R\fnetworkUsage\x12 \n" +
	"\vtemperature\x18\a \x01(\x01R\vtemperature\x12\\\n" +
	"\x0ecustom_metrics\x18\b \x03(\v25.fleetd.v1.StreamTelemetryResponse.CustomMetricsEntryR\rcustomMetrics\x1a@\n" +
	"\x12CustomMetricsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value:\x028\x01\"\xc4\x02\n" +
	"\x11TelemetryLogEntry\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\tdevice_id\x18\x02 \x01(\tR\bdeviceId\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12)\n" +
	"\x05level\x18\x04 \x01(\x0e2\x13.fleetd.v1.LogLevelR\x05level\x12\x18\n" +
	"\amessage\x18\x05 \x01(\tR\amessage\x12F\n" +
	"\bmetadata\x18\x06 \x03(\v2*.fleetd.v1.TelemetryLogEntry.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xc6\x02\n" +
	"\x12StreamLogsResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\tdevice_id\x18\x02 \x01(\tR\bdeviceId\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12)\n" +
	"\x05level\x18\x04 \x01(\x0e2\x13.fleetd.v1.LogLevelR\x05level\x12\x18\n" +
	"\amessage\x18\x05 \x01(\tR\amessage\x12G\n" +
	"\bmetadata\x18\x06 \x03(\v2+.fleetd.v1.StreamLogsResponse.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xfd\x02\n" +
	"\x05Alert\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12(\n" +
	"\x04type\x18\x04 \x01(\x0e2\x14.fleetd.v1.AlertTypeR\x04type\x12\x1c\n" +
	"\tthreshold\x18\x05 \x01(\x01R\tthreshold\x127\n" +
	"\tcondition\x18\x06 \x01(\x0e2\x19.fleetd.v1.AlertConditionR\tcondition\x12\x18\n" +
	"\aenabled\x18\a \x01(\bR\aenabled\x12\x1d\n" +
	"\n" +
	"device_ids\x18\b \x03(\tR\tdeviceIds\x129\n" +
	"\n" +
	"created_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"\xba\x01\n" +
	"\x13GetTelemetryRequest\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x129\n" +
	"\n" +
	"start_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x05R\x05limit\"D\n" +
	"\x14GetTelemetryResponse\x12,\n" +
	"\x04data\x18\x01 \x03(\v2\x18.fleetd.v1.TelemetryDataR\x04data\"\x94\x02\n" +
	"\x11GetMetricsRequest\x12\x1d\n" +
	"\n" +
	"device_ids\x18\x01 \x03(\tR\tdeviceIds\x12!\n" +
	"\fmetric_names\x18\x02 \x03(\tR\vmetricNames\x129\n" +
	"\n" +
	"start_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12 \n" +
	"\vaggregation\x18\x05 \x01(\tR\vaggregation\x12)\n" +
	"\x10interval_seconds\x18\x06 \x01(\x05R\x0fintervalSeconds\"E\n" +
	"\x12GetMetricsResponse\x12/\n" +
	"\ametrics\x18\x01 \x03(\v2\x15.fleetd.v1.MetricDataR\ametrics\"\x83\x02\n" +
	"\n" +
	"MetricData\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x14\n" +
	"\x05value\x18\x03 \x01(\x01R\x05value\x12\x1b\n" +
	"\tdevice_id\x18\x04 \x01(\tR\bdeviceId\x129\n" +
	"\x06labels\x18\x05 \x03(\v2!.fleetd.v1.MetricData.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"Z\n" +
	"\x16StreamTelemetryRequest\x12\x1d\n" +
	"\n" +
	"device_ids\x18\x01 \x03(\tR\tdeviceIds\x12!\n" +
	"\fmetric_names\x18\x02 \x03(\tR\vmetricNames\"\xfc\x01\n" +
	"\x0eGetLogsRequest\x12\x1d\n" +
	"\n" +
	"device_ids\x18\x01 \x03(\tR\tdeviceIds\x12+\n" +
	"\x06levels\x18\x02 \x03(\x0e2\x13.fleetd.v1.LogLevelR\x06levels\x12\x16\n" +
	"\x06filter\x18\x03 \x01(\tR\x06filter\x129\n" +
	"\n" +
	"start_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12\x14\n" +
	"\x05limit\x18\x06 \x01(\x05R\x05limit\"C\n" +
	"\x0fGetLogsResponse\x120\n" +
	"\x04logs\x18\x01 \x03(\v2\x1c.fleetd.v1.TelemetryLogEntryR\x04logs\"w\n" +
	"\x11StreamLogsRequest\x12\x1d\n" +
	"\n" +
	"device_ids\x18\x01 \x03(\tR\tdeviceIds\x12+\n" +
	"\x06levels\x18\x02 \x03(\x0e2\x13.fleetd.v1.LogLevelR\x06levels\x12\x16\n" +
	"\x06filter\x18\x03 \x01(\tR\x06filter\"?\n" +
	"\x15ConfigureAlertRequest\x12&\n" +
	"\x05alert\x18\x01 \x01(\v2\x10.fleetd.v1.AlertR\x05alert\"@\n" +
	"\x16ConfigureAlertResponse\x12&\n" +
	"\x05alert\x18\x01 \x01(\v2\x10.fleetd.v1.AlertR\x05alert\"U\n" +
	"\x11ListAlertsRequest\x12\x1d\n" +
	"\n" +
	"device_ids\x18\x01 \x03(\tR\tdeviceIds\x12!\n" +
	"\fenabled_only\x18\x02 \x01(\bR\venabledOnly\">\n" +
	"\x12ListAlertsResponse\x12(\n" +
	"\x06alerts\x18\x01 \x03(\v2\x10.fleetd.v1.AlertR\x06alerts\"/\n" +
	"\x12DeleteAlertRequest\x12\x19\n" +
	"\balert_id\x18\x01 \x01(\tR\aalertId\"\x15\n" +
	"\x13DeleteAlertResponse*\x8c\x01\n" +
	"\bLogLevel\x12\x19\n" +
	"\x15LOG_LEVEL_UNSPECIFIED\x10\x00\x12\x13\n" +
	"\x0fLOG_LEVEL_DEBUG\x10\x01\x12\x12\n" +
	"\x0eLOG_LEVEL_INFO\x10\x02\x12\x12\n" +
	"\x0eLOG_LEVEL_WARN\x10\x03\x12\x13\n" +
	"\x0fLOG_LEVEL_ERROR\x10\x04\x12\x13\n" +
	"\x0fLOG_LEVEL_FATAL\x10\x05*\xd1\x01\n" +
	"\tAlertType\x12\x1a\n" +
	"\x16ALERT_TYPE_UNSPECIFIED\x10\x00\x12\x12\n" +
	"\x0eALERT_TYPE_CPU\x10\x01\x12\x15\n" +
	"\x11ALERT_TYPE_MEMORY\x10\x02\x12\x13\n" +
	"\x0fALERT_TYPE_DISK\x10\x03\x12\x16\n" +
	"\x12ALERT_TYPE_NETWORK\x10\x04\x12\x1a\n" +
	"\x16ALERT_TYPE_TEMPERATURE\x10\x05\x12\x1d\n" +
	"\x19ALERT_TYPE_DEVICE_OFFLINE\x10\x06\x12\x15\n" +
	"\x11ALERT_TYPE_CUSTOM\x10\a*\xac\x01\n" +
	"\x0eAlertCondition\x12\x1f\n" +
	"\x1bALERT_CONDITION_UNSPECIFIED\x10\x00\x12 \n" +
	"\x1cALERT_CONDITION_GREATER_THAN\x10\x01\x12\x1d\n" +
	"\x19ALERT_CONDITION_LESS_THAN\x10\x02\x12\x19\n" +
	"\x15ALERT_CONDITION_EQUAL\x10\x03\x12\x1d\n" +
	"\x19ALERT_CONDITION_NOT_EQUAL\x10\x042\x99\x05\n" +
	"\x10TelemetryService\x12Q\n" +
	"\fGetTelemetry\x12\x1e.fleetd.v1.GetTelemetryRequest\x1a\x1f.fleetd.v1.GetTelemetryResponse\"\x00\x12K\n" +
	"\n" +
	"GetMetrics\x12\x1c.fleetd.v1.GetMetricsRequest\x1a\x1d.fleetd.v1.GetMetricsResponse\"\x00\x12\\\n" +
	"\x0fStreamTelemetry\x12!.fleetd.v1.StreamTelemetryRequest\x1a\".fleetd.v1.StreamTelemetryResponse\"\x000\x01\x12B\n" +
	"\aGetLogs\x12\x19.fleetd.v1.GetLogsRequest\x1a\x1a.fleetd.v1.GetLogsResponse\"\x00\x12M\n" +
	"\n" +
	"StreamLogs\x12\x1c.fleetd.v1.StreamLogsRequest\x1a\x1d.fleetd.v1.StreamLogsResponse\"\x000\x01\x12W\n" +
	"\x0eConfigureAlert\x12 .fleetd.v1.ConfigureAlertRequest\x1a!.fleetd.v1.ConfigureAlertResponse\"\x00\x12K\n" +
	"\n" +
	"ListAlerts\x12\x1c.fleetd.v1.ListAlertsRequest\x1a\x1d.fleetd.v1.ListAlertsResponse\"\x00\x12N\n" +
	"\vDeleteAlert\x12\x1d.fleetd.v1.DeleteAlertRequest\x1a\x1e.fleetd.v1.DeleteAlertResponse\"\x00B\x85\x01\n" +
	"\rcom.fleetd.v1B\x0eTelemetryProtoP\x01Z\x1ffleetd.sh/gen/fleetd/v1;fleetpb\xa2\x02\x03FXX\xaa\x02\tFleetd.V1\xca\x02\tFleetd\\V1\xe2\x02\x15Fleetd\\V1\\GPBMetadata\xea\x02\n" +
	"Fleetd::V1b\x06proto3"

var (
	file_fleetd_v1_telemetry_proto_rawDescOnce sync.Once
	file_fleetd_v1_telemetry_proto_rawDescData []byte
)

func file_fleetd_v1_telemetry_proto_rawDescGZIP() []byte {
	file_fleetd_v1_telemetry_proto_rawDescOnce.Do(func() {
		file_fleetd_v1_telemetry_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_fleetd_v1_telemetry_proto_rawDesc), len(file_fleetd_v1_telemetry_proto_rawDesc)))
	})
	return file_fleetd_v1_telemetry_proto_rawDescData
}

var file_fleetd_v1_telemetry_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_fleetd_v1_telemetry_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_fleetd_v1_telemetry_proto_goTypes = []any{
	(LogLevel)(0),                   // 0: fleetd.v1.LogLevel
	(AlertType)(0),                  // 1: fleetd.v1.AlertType
	(AlertCondition)(0),             // 2: fleetd.v1.AlertCondition
	(*TelemetryData)(nil),           // 3: fleetd.v1.TelemetryData
	(*StreamTelemetryResponse)(nil), // 4: fleetd.v1.StreamTelemetryResponse
	(*TelemetryLogEntry)(nil),       // 5: fleetd.v1.TelemetryLogEntry
	(*StreamLogsResponse)(nil),      // 6: fleetd.v1.StreamLogsResponse
	(*Alert)(nil),                   // 7: fleetd.v1.Alert
	(*GetTelemetryRequest)(nil),     // 8: fleetd.v1.GetTelemetryRequest
	(*GetTelemetryResponse)(nil),    // 9: fleetd.v1.GetTelemetryResponse
	(*GetMetricsRequest)(nil),       // 10: fleetd.v1.GetMetricsRequest
	(*GetMetricsResponse)(nil),      // 11: fleetd.v1.GetMetricsResponse
	(*MetricData)(nil),              // 12: fleetd.v1.MetricData
	(*StreamTelemetryRequest)(nil),  // 13: fleetd.v1.StreamTelemetryRequest
	(*GetLogsRequest)(nil),          // 14: fleetd.v1.GetLogsRequest
	(*GetLogsResponse)(nil),         // 15: fleetd.v1.GetLogsResponse
	(*StreamLogsRequest)(nil),       // 16: fleetd.v1.StreamLogsRequest
	(*ConfigureAlertRequest)(nil),   // 17: fleetd.v1.ConfigureAlertRequest
	(*ConfigureAlertResponse)(nil),  // 18: fleetd.v1.ConfigureAlertResponse
	(*ListAlertsRequest)(nil),       // 19: fleetd.v1.ListAlertsRequest
	(*ListAlertsResponse)(nil),      // 20: fleetd.v1.ListAlertsResponse
	(*DeleteAlertRequest)(nil),      // 21: fleetd.v1.DeleteAlertRequest
	(*DeleteAlertResponse)(nil),     // 22: fleetd.v1.DeleteAlertResponse
	nil,                             // 23: fleetd.v1.TelemetryData.CustomMetricsEntry
	nil,                             // 24: fleetd.v1.StreamTelemetryResponse.CustomMetricsEntry
	nil,                             // 25: fleetd.v1.TelemetryLogEntry.MetadataEntry
	nil,                             // 26: fleetd.v1.StreamLogsResponse.MetadataEntry
	nil,                             // 27: fleetd.v1.MetricData.LabelsEntry
	(*timestamppb.Timestamp)(nil),   // 28: google.protobuf.Timestamp
}
var file_fleetd_v1_telemetry_proto_depIdxs = []int32{
	28, // 0: fleetd.v1.TelemetryData.timestamp:type_name -> google.protobuf.Timestamp
	23, // 1: fleetd.v1.TelemetryData.custom_metrics:type_name -> fleetd.v1.TelemetryData.CustomMetricsEntry
	28, // 2: fleetd.v1.StreamTelemetryResponse.timestamp:type_name -> google.protobuf.Timestamp
	24, // 3: fleetd.v1.StreamTelemetryResponse.custom_metrics:type_name -> fleetd.v1.StreamTelemetryResponse.CustomMetricsEntry
	28, // 4: fleetd.v1.TelemetryLogEntry.timestamp:type_name -> google.protobuf.Timestamp
	0,  // 5: fleetd.v1.TelemetryLogEntry.level:type_name -> fleetd.v1.LogLevel
	25, // 6: fleetd.v1.TelemetryLogEntry.metadata:type_name -> fleetd.v1.TelemetryLogEntry.MetadataEntry
	28, // 7: fleetd.v1.StreamLogsResponse.timestamp:type_name -> google.protobuf.Timestamp
	0,  // 8: fleetd.v1.StreamLogsResponse.level:type_name -> fleetd.v1.LogLevel
	26, // 9: fleetd.v1.StreamLogsResponse.metadata:type_name -> fleetd.v1.StreamLogsResponse.MetadataEntry
	1,  // 10: fleetd.v1.Alert.type:type_name -> fleetd.v1.AlertType
	2,  // 11: fleetd.v1.Alert.condition:type_name -> fleetd.v1.AlertCondition
	28, // 12: fleetd.v1.Alert.created_at:type_name -> google.protobuf.Timestamp
	28, // 13: fleetd.v1.Alert.updated_at:type_name -> google.protobuf.Timestamp
	28, // 14: fleetd.v1.GetTelemetryRequest.start_time:type_name -> google.protobuf.Timestamp
	28, // 15: fleetd.v1.GetTelemetryRequest.end_time:type_name -> google.protobuf.Timestamp
	3,  // 16: fleetd.v1.GetTelemetryResponse.data:type_name -> fleetd.v1.TelemetryData
	28, // 17: fleetd.v1.GetMetricsRequest.start_time:type_name -> google.protobuf.Timestamp
	28, // 18: fleetd.v1.GetMetricsRequest.end_time:type_name -> google.protobuf.Timestamp
	12, // 19: fleetd.v1.GetMetricsResponse.metrics:type_name -> fleetd.v1.MetricData
	28, // 20: fleetd.v1.MetricData.timestamp:type_name -> google.protobuf.Timestamp
	27, // 21: fleetd.v1.MetricData.labels:type_name -> fleetd.v1.MetricData.LabelsEntry
	0,  // 22: fleetd.v1.GetLogsRequest.levels:type_name -> fleetd.v1.LogLevel
	28, // 23: fleetd.v1.GetLogsRequest.start_time:type_name -> google.protobuf.Timestamp
	28, // 24: fleetd.v1.GetLogsRequest.end_time:type_name -> google.protobuf.Timestamp
	5,  // 25: fleetd.v1.GetLogsResponse.logs:type_name -> fleetd.v1.TelemetryLogEntry
	0,  // 26: fleetd.v1.StreamLogsRequest.levels:type_name -> fleetd.v1.LogLevel
	7,  // 27: fleetd.v1.ConfigureAlertRequest.alert:type_name -> fleetd.v1.Alert
	7,  // 28: fleetd.v1.ConfigureAlertResponse.alert:type_name -> fleetd.v1.Alert
	7,  // 29: fleetd.v1.ListAlertsResponse.alerts:type_name -> fleetd.v1.Alert
	8,  // 30: fleetd.v1.TelemetryService.GetTelemetry:input_type -> fleetd.v1.GetTelemetryRequest
	10, // 31: fleetd.v1.TelemetryService.GetMetrics:input_type -> fleetd.v1.GetMetricsRequest
	13, // 32: fleetd.v1.TelemetryService.StreamTelemetry:input_type -> fleetd.v1.StreamTelemetryRequest
	14, // 33: fleetd.v1.TelemetryService.GetLogs:input_type -> fleetd.v1.GetLogsRequest
	16, // 34: fleetd.v1.TelemetryService.StreamLogs:input_type -> fleetd.v1.StreamLogsRequest
	17, // 35: fleetd.v1.TelemetryService.ConfigureAlert:input_type -> fleetd.v1.ConfigureAlertRequest
	19, // 36: fleetd.v1.TelemetryService.ListAlerts:input_type -> fleetd.v1.ListAlertsRequest
	21, // 37: fleetd.v1.TelemetryService.DeleteAlert:input_type -> fleetd.v1.DeleteAlertRequest
	9,  // 38: fleetd.v1.TelemetryService.GetTelemetry:output_type -> fleetd.v1.GetTelemetryResponse
	11, // 39: fleetd.v1.TelemetryService.GetMetrics:output_type -> fleetd.v1.GetMetricsResponse
	4,  // 40: fleetd.v1.TelemetryService.StreamTelemetry:output_type -> fleetd.v1.StreamTelemetryResponse
	15, // 41: fleetd.v1.TelemetryService.GetLogs:output_type -> fleetd.v1.GetLogsResponse
	6,  // 42: fleetd.v1.TelemetryService.StreamLogs:output_type -> fleetd.v1.StreamLogsResponse
	18, // 43: fleetd.v1.TelemetryService.ConfigureAlert:output_type -> fleetd.v1.ConfigureAlertResponse
	20, // 44: fleetd.v1.TelemetryService.ListAlerts:output_type -> fleetd.v1.ListAlertsResponse
	22, // 45: fleetd.v1.TelemetryService.DeleteAlert:output_type -> fleetd.v1.DeleteAlertResponse
	38, // [38:46] is the sub-list for method output_type
	30, // [30:38] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_fleetd_v1_telemetry_proto_init() }
func file_fleetd_v1_telemetry_proto_init() {
	if File_fleetd_v1_telemetry_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_fleetd_v1_telemetry_proto_rawDesc), len(file_fleetd_v1_telemetry_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_fleetd_v1_telemetry_proto_goTypes,
		DependencyIndexes: file_fleetd_v1_telemetry_proto_depIdxs,
		EnumInfos:         file_fleetd_v1_telemetry_proto_enumTypes,
		MessageInfos:      file_fleetd_v1_telemetry_proto_msgTypes,
	}.Build()
	File_fleetd_v1_telemetry_proto = out.File
	file_fleetd_v1_telemetry_proto_goTypes = nil
	file_fleetd_v1_telemetry_proto_depIdxs = nil
}
