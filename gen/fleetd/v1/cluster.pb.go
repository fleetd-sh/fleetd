// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: fleetd/v1/cluster.proto

package fleetpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// DeviceType enumeration for different device types
type DeviceType int32

const (
	DeviceType_DEVICE_TYPE_UNSPECIFIED DeviceType = 0
	DeviceType_DEVICE_TYPE_ESP32       DeviceType = 1
	DeviceType_DEVICE_TYPE_RPI4        DeviceType = 2
	DeviceType_DEVICE_TYPE_RPI5        DeviceType = 3
	DeviceType_DEVICE_TYPE_JETSON_NANO DeviceType = 4
	DeviceType_DEVICE_TYPE_X86_64      DeviceType = 5
)

// Enum value maps for DeviceType.
var (
	DeviceType_name = map[int32]string{
		0: "DEVICE_TYPE_UNSPECIFIED",
		1: "DEVICE_TYPE_ESP32",
		2: "DEVICE_TYPE_RPI4",
		3: "DEVICE_TYPE_RPI5",
		4: "DEVICE_TYPE_JETSON_NANO",
		5: "DEVICE_TYPE_X86_64",
	}
	DeviceType_value = map[string]int32{
		"DEVICE_TYPE_UNSPECIFIED": 0,
		"DEVICE_TYPE_ESP32":       1,
		"DEVICE_TYPE_RPI4":        2,
		"DEVICE_TYPE_RPI5":        3,
		"DEVICE_TYPE_JETSON_NANO": 4,
		"DEVICE_TYPE_X86_64":      5,
	}
)

func (x DeviceType) Enum() *DeviceType {
	p := new(DeviceType)
	*p = x
	return p
}

func (x DeviceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeviceType) Descriptor() protoreflect.EnumDescriptor {
	return file_fleetd_v1_cluster_proto_enumTypes[0].Descriptor()
}

func (DeviceType) Type() protoreflect.EnumType {
	return &file_fleetd_v1_cluster_proto_enumTypes[0]
}

func (x DeviceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeviceType.Descriptor instead.
func (DeviceType) EnumDescriptor() ([]byte, []int) {
	return file_fleetd_v1_cluster_proto_rawDescGZIP(), []int{0}
}

// K3sRole defines the role in a k3s cluster
type K3SRole int32

const (
	K3SRole_K3S_ROLE_UNSPECIFIED K3SRole = 0
	K3SRole_K3S_ROLE_SERVER      K3SRole = 1 // Control plane node
	K3SRole_K3S_ROLE_AGENT       K3SRole = 2 // Worker node
	K3SRole_K3S_ROLE_SERVER_INIT K3SRole = 3 // First server (with --cluster-init)
)

// Enum value maps for K3SRole.
var (
	K3SRole_name = map[int32]string{
		0: "K3S_ROLE_UNSPECIFIED",
		1: "K3S_ROLE_SERVER",
		2: "K3S_ROLE_AGENT",
		3: "K3S_ROLE_SERVER_INIT",
	}
	K3SRole_value = map[string]int32{
		"K3S_ROLE_UNSPECIFIED": 0,
		"K3S_ROLE_SERVER":      1,
		"K3S_ROLE_AGENT":       2,
		"K3S_ROLE_SERVER_INIT": 3,
	}
)

func (x K3SRole) Enum() *K3SRole {
	p := new(K3SRole)
	*p = x
	return p
}

func (x K3SRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (K3SRole) Descriptor() protoreflect.EnumDescriptor {
	return file_fleetd_v1_cluster_proto_enumTypes[1].Descriptor()
}

func (K3SRole) Type() protoreflect.EnumType {
	return &file_fleetd_v1_cluster_proto_enumTypes[1]
}

func (x K3SRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use K3SRole.Descriptor instead.
func (K3SRole) EnumDescriptor() ([]byte, []int) {
	return file_fleetd_v1_cluster_proto_rawDescGZIP(), []int{1}
}

// ClusterStatus enumeration
type ClusterStatus int32

const (
	ClusterStatus_CLUSTER_STATUS_UNSPECIFIED ClusterStatus = 0
	ClusterStatus_CLUSTER_STATUS_CREATING    ClusterStatus = 1
	ClusterStatus_CLUSTER_STATUS_READY       ClusterStatus = 2
	ClusterStatus_CLUSTER_STATUS_UPDATING    ClusterStatus = 3
	ClusterStatus_CLUSTER_STATUS_DEGRADED    ClusterStatus = 4
	ClusterStatus_CLUSTER_STATUS_ERROR       ClusterStatus = 5
)

// Enum value maps for ClusterStatus.
var (
	ClusterStatus_name = map[int32]string{
		0: "CLUSTER_STATUS_UNSPECIFIED",
		1: "CLUSTER_STATUS_CREATING",
		2: "CLUSTER_STATUS_READY",
		3: "CLUSTER_STATUS_UPDATING",
		4: "CLUSTER_STATUS_DEGRADED",
		5: "CLUSTER_STATUS_ERROR",
	}
	ClusterStatus_value = map[string]int32{
		"CLUSTER_STATUS_UNSPECIFIED": 0,
		"CLUSTER_STATUS_CREATING":    1,
		"CLUSTER_STATUS_READY":       2,
		"CLUSTER_STATUS_UPDATING":    3,
		"CLUSTER_STATUS_DEGRADED":    4,
		"CLUSTER_STATUS_ERROR":       5,
	}
)

func (x ClusterStatus) Enum() *ClusterStatus {
	p := new(ClusterStatus)
	*p = x
	return p
}

func (x ClusterStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClusterStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_fleetd_v1_cluster_proto_enumTypes[2].Descriptor()
}

func (ClusterStatus) Type() protoreflect.EnumType {
	return &file_fleetd_v1_cluster_proto_enumTypes[2]
}

func (x ClusterStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClusterStatus.Descriptor instead.
func (ClusterStatus) EnumDescriptor() ([]byte, []int) {
	return file_fleetd_v1_cluster_proto_rawDescGZIP(), []int{2}
}

// DeviceCapability describes hardware and software capabilities
type DeviceCapability struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`   // e.g., "cpu", "memory", "storage", "gpu", "k3s"
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"` // e.g., "4", "8GB", "64GB", "nvidia-tegra", "v1.28.3"
	Unit          string                 `protobuf:"bytes,3,opt,name=unit,proto3" json:"unit,omitempty"`   // e.g., "cores", "bytes", "version"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeviceCapability) Reset() {
	*x = DeviceCapability{}
	mi := &file_fleetd_v1_cluster_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceCapability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceCapability) ProtoMessage() {}

func (x *DeviceCapability) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_cluster_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceCapability.ProtoReflect.Descriptor instead.
func (*DeviceCapability) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_cluster_proto_rawDescGZIP(), []int{0}
}

func (x *DeviceCapability) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeviceCapability) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *DeviceCapability) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

// ExtendedDevice includes RPi-specific fields
type ExtendedDevice struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Id       string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type     DeviceType             `protobuf:"varint,3,opt,name=type,proto3,enum=fleetd.v1.DeviceType" json:"type,omitempty"`
	Version  string                 `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	Metadata map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	LastSeen *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen,omitempty"`
	// Extended capabilities
	Capabilities []*DeviceCapability `protobuf:"bytes,7,rep,name=capabilities,proto3" json:"capabilities,omitempty"`
	// Raspberry Pi specific
	Architecture string `protobuf:"bytes,8,opt,name=architecture,proto3" json:"architecture,omitempty"`             // arm64, armv7l
	OsName       string `protobuf:"bytes,9,opt,name=os_name,json=osName,proto3" json:"os_name,omitempty"`           // DietPi, Raspbian, Ubuntu
	OsVersion    string `protobuf:"bytes,10,opt,name=os_version,json=osVersion,proto3" json:"os_version,omitempty"` // OS version
	// K3s specific
	K3SRole    K3SRole `protobuf:"varint,11,opt,name=k3s_role,json=k3sRole,proto3,enum=fleetd.v1.K3SRole" json:"k3s_role,omitempty"`
	K3SVersion string  `protobuf:"bytes,12,opt,name=k3s_version,json=k3sVersion,proto3" json:"k3s_version,omitempty"`
	ClusterId  string  `protobuf:"bytes,13,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// Hardware info
	TotalMemory int64 `protobuf:"varint,14,opt,name=total_memory,json=totalMemory,proto3" json:"total_memory,omitempty"` // bytes
	CpuCores    int32 `protobuf:"varint,15,opt,name=cpu_cores,json=cpuCores,proto3" json:"cpu_cores,omitempty"`
	DiskSize    int64 `protobuf:"varint,16,opt,name=disk_size,json=diskSize,proto3" json:"disk_size,omitempty"` // bytes
	HasGpu      bool  `protobuf:"varint,17,opt,name=has_gpu,json=hasGpu,proto3" json:"has_gpu,omitempty"`
	// Network info
	IpAddresses []string `protobuf:"bytes,18,rep,name=ip_addresses,json=ipAddresses,proto3" json:"ip_addresses,omitempty"`
	PrimaryMac  string   `protobuf:"bytes,19,opt,name=primary_mac,json=primaryMac,proto3" json:"primary_mac,omitempty"`
	// Status
	Configured    bool   `protobuf:"varint,20,opt,name=configured,proto3" json:"configured,omitempty"`
	Online        bool   `protobuf:"varint,21,opt,name=online,proto3" json:"online,omitempty"`
	Status        string `protobuf:"bytes,22,opt,name=status,proto3" json:"status,omitempty"` // running, stopped, error
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExtendedDevice) Reset() {
	*x = ExtendedDevice{}
	mi := &file_fleetd_v1_cluster_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExtendedDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtendedDevice) ProtoMessage() {}

func (x *ExtendedDevice) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_cluster_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtendedDevice.ProtoReflect.Descriptor instead.
func (*ExtendedDevice) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_cluster_proto_rawDescGZIP(), []int{1}
}

func (x *ExtendedDevice) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ExtendedDevice) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ExtendedDevice) GetType() DeviceType {
	if x != nil {
		return x.Type
	}
	return DeviceType_DEVICE_TYPE_UNSPECIFIED
}

func (x *ExtendedDevice) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ExtendedDevice) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ExtendedDevice) GetLastSeen() *timestamppb.Timestamp {
	if x != nil {
		return x.LastSeen
	}
	return nil
}

func (x *ExtendedDevice) GetCapabilities() []*DeviceCapability {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *ExtendedDevice) GetArchitecture() string {
	if x != nil {
		return x.Architecture
	}
	return ""
}

func (x *ExtendedDevice) GetOsName() string {
	if x != nil {
		return x.OsName
	}
	return ""
}

func (x *ExtendedDevice) GetOsVersion() string {
	if x != nil {
		return x.OsVersion
	}
	return ""
}

func (x *ExtendedDevice) GetK3SRole() K3SRole {
	if x != nil {
		return x.K3SRole
	}
	return K3SRole_K3S_ROLE_UNSPECIFIED
}

func (x *ExtendedDevice) GetK3SVersion() string {
	if x != nil {
		return x.K3SVersion
	}
	return ""
}

func (x *ExtendedDevice) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *ExtendedDevice) GetTotalMemory() int64 {
	if x != nil {
		return x.TotalMemory
	}
	return 0
}

func (x *ExtendedDevice) GetCpuCores() int32 {
	if x != nil {
		return x.CpuCores
	}
	return 0
}

func (x *ExtendedDevice) GetDiskSize() int64 {
	if x != nil {
		return x.DiskSize
	}
	return 0
}

func (x *ExtendedDevice) GetHasGpu() bool {
	if x != nil {
		return x.HasGpu
	}
	return false
}

func (x *ExtendedDevice) GetIpAddresses() []string {
	if x != nil {
		return x.IpAddresses
	}
	return nil
}

func (x *ExtendedDevice) GetPrimaryMac() string {
	if x != nil {
		return x.PrimaryMac
	}
	return ""
}

func (x *ExtendedDevice) GetConfigured() bool {
	if x != nil {
		return x.Configured
	}
	return false
}

func (x *ExtendedDevice) GetOnline() bool {
	if x != nil {
		return x.Online
	}
	return false
}

func (x *ExtendedDevice) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// Cluster represents a k3s cluster
type Cluster struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// Cluster configuration
	Version     string `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`                            // k3s version
	NetworkCidr string `protobuf:"bytes,6,opt,name=network_cidr,json=networkCidr,proto3" json:"network_cidr,omitempty"` // Pod network CIDR
	ServiceCidr string `protobuf:"bytes,7,opt,name=service_cidr,json=serviceCidr,proto3" json:"service_cidr,omitempty"` // Service network CIDR
	// Nodes
	Nodes []*ClusterNode `protobuf:"bytes,8,rep,name=nodes,proto3" json:"nodes,omitempty"`
	// Access
	ApiEndpoint string `protobuf:"bytes,9,opt,name=api_endpoint,json=apiEndpoint,proto3" json:"api_endpoint,omitempty"`
	Kubeconfig  []byte `protobuf:"bytes,10,opt,name=kubeconfig,proto3" json:"kubeconfig,omitempty"` // Encrypted kubeconfig
	// Status
	Status        ClusterStatus     `protobuf:"varint,11,opt,name=status,proto3,enum=fleetd.v1.ClusterStatus" json:"status,omitempty"`
	Labels        map[string]string `protobuf:"bytes,12,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Cluster) Reset() {
	*x = Cluster{}
	mi := &file_fleetd_v1_cluster_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Cluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cluster) ProtoMessage() {}

func (x *Cluster) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_cluster_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cluster.ProtoReflect.Descriptor instead.
func (*Cluster) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_cluster_proto_rawDescGZIP(), []int{2}
}

func (x *Cluster) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Cluster) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Cluster) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Cluster) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Cluster) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Cluster) GetNetworkCidr() string {
	if x != nil {
		return x.NetworkCidr
	}
	return ""
}

func (x *Cluster) GetServiceCidr() string {
	if x != nil {
		return x.ServiceCidr
	}
	return ""
}

func (x *Cluster) GetNodes() []*ClusterNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *Cluster) GetApiEndpoint() string {
	if x != nil {
		return x.ApiEndpoint
	}
	return ""
}

func (x *Cluster) GetKubeconfig() []byte {
	if x != nil {
		return x.Kubeconfig
	}
	return nil
}

func (x *Cluster) GetStatus() ClusterStatus {
	if x != nil {
		return x.Status
	}
	return ClusterStatus_CLUSTER_STATUS_UNSPECIFIED
}

func (x *Cluster) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

// ClusterNode represents a node in the cluster
type ClusterNode struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceId      string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Hostname      string                 `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Role          K3SRole                `protobuf:"varint,3,opt,name=role,proto3,enum=fleetd.v1.K3SRole" json:"role,omitempty"`
	IpAddress     string                 `protobuf:"bytes,4,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	JoinedAt      *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=joined_at,json=joinedAt,proto3" json:"joined_at,omitempty"`
	Status        *NodeStatus            `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,7,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Taints        []string               `protobuf:"bytes,8,rep,name=taints,proto3" json:"taints,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterNode) Reset() {
	*x = ClusterNode{}
	mi := &file_fleetd_v1_cluster_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterNode) ProtoMessage() {}

func (x *ClusterNode) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_cluster_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterNode.ProtoReflect.Descriptor instead.
func (*ClusterNode) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_cluster_proto_rawDescGZIP(), []int{3}
}

func (x *ClusterNode) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *ClusterNode) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *ClusterNode) GetRole() K3SRole {
	if x != nil {
		return x.Role
	}
	return K3SRole_K3S_ROLE_UNSPECIFIED
}

func (x *ClusterNode) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *ClusterNode) GetJoinedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.JoinedAt
	}
	return nil
}

func (x *ClusterNode) GetStatus() *NodeStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ClusterNode) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ClusterNode) GetTaints() []string {
	if x != nil {
		return x.Taints
	}
	return nil
}

// NodeStatus represents the status of a cluster node
type NodeStatus struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Ready          bool                   `protobuf:"varint,1,opt,name=ready,proto3" json:"ready,omitempty"`
	Schedulable    bool                   `protobuf:"varint,2,opt,name=schedulable,proto3" json:"schedulable,omitempty"`
	MemoryUsage    int64                  `protobuf:"varint,3,opt,name=memory_usage,json=memoryUsage,proto3" json:"memory_usage,omitempty"`          // bytes
	MemoryCapacity int64                  `protobuf:"varint,4,opt,name=memory_capacity,json=memoryCapacity,proto3" json:"memory_capacity,omitempty"` // bytes
	CpuUsage       int32                  `protobuf:"varint,5,opt,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`                   // millicores
	CpuCapacity    int32                  `protobuf:"varint,6,opt,name=cpu_capacity,json=cpuCapacity,proto3" json:"cpu_capacity,omitempty"`          // millicores
	PodCount       int32                  `protobuf:"varint,7,opt,name=pod_count,json=podCount,proto3" json:"pod_count,omitempty"`
	PodCapacity    int32                  `protobuf:"varint,8,opt,name=pod_capacity,json=podCapacity,proto3" json:"pod_capacity,omitempty"`
	Conditions     map[string]string      `protobuf:"bytes,9,rep,name=conditions,proto3" json:"conditions,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *NodeStatus) Reset() {
	*x = NodeStatus{}
	mi := &file_fleetd_v1_cluster_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeStatus) ProtoMessage() {}

func (x *NodeStatus) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_cluster_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeStatus.ProtoReflect.Descriptor instead.
func (*NodeStatus) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_cluster_proto_rawDescGZIP(), []int{4}
}

func (x *NodeStatus) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

func (x *NodeStatus) GetSchedulable() bool {
	if x != nil {
		return x.Schedulable
	}
	return false
}

func (x *NodeStatus) GetMemoryUsage() int64 {
	if x != nil {
		return x.MemoryUsage
	}
	return 0
}

func (x *NodeStatus) GetMemoryCapacity() int64 {
	if x != nil {
		return x.MemoryCapacity
	}
	return 0
}

func (x *NodeStatus) GetCpuUsage() int32 {
	if x != nil {
		return x.CpuUsage
	}
	return 0
}

func (x *NodeStatus) GetCpuCapacity() int32 {
	if x != nil {
		return x.CpuCapacity
	}
	return 0
}

func (x *NodeStatus) GetPodCount() int32 {
	if x != nil {
		return x.PodCount
	}
	return 0
}

func (x *NodeStatus) GetPodCapacity() int32 {
	if x != nil {
		return x.PodCapacity
	}
	return 0
}

func (x *NodeStatus) GetConditions() map[string]string {
	if x != nil {
		return x.Conditions
	}
	return nil
}

// CreateClusterRequest creates a new cluster
type CreateClusterRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Name           string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ServerDeviceId string                 `protobuf:"bytes,2,opt,name=server_device_id,json=serverDeviceId,proto3" json:"server_device_id,omitempty"` // Initial server node
	K3SVersion     string                 `protobuf:"bytes,3,opt,name=k3s_version,json=k3sVersion,proto3" json:"k3s_version,omitempty"`
	Config         map[string]string      `protobuf:"bytes,4,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Additional k3s config
	Labels         map[string]string      `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateClusterRequest) Reset() {
	*x = CreateClusterRequest{}
	mi := &file_fleetd_v1_cluster_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateClusterRequest) ProtoMessage() {}

func (x *CreateClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_cluster_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateClusterRequest.ProtoReflect.Descriptor instead.
func (*CreateClusterRequest) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_cluster_proto_rawDescGZIP(), []int{5}
}

func (x *CreateClusterRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateClusterRequest) GetServerDeviceId() string {
	if x != nil {
		return x.ServerDeviceId
	}
	return ""
}

func (x *CreateClusterRequest) GetK3SVersion() string {
	if x != nil {
		return x.K3SVersion
	}
	return ""
}

func (x *CreateClusterRequest) GetConfig() map[string]string {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *CreateClusterRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type CreateClusterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cluster       *Cluster               `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	JoinToken     string                 `protobuf:"bytes,2,opt,name=join_token,json=joinToken,proto3" json:"join_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateClusterResponse) Reset() {
	*x = CreateClusterResponse{}
	mi := &file_fleetd_v1_cluster_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateClusterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateClusterResponse) ProtoMessage() {}

func (x *CreateClusterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_cluster_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateClusterResponse.ProtoReflect.Descriptor instead.
func (*CreateClusterResponse) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_cluster_proto_rawDescGZIP(), []int{6}
}

func (x *CreateClusterResponse) GetCluster() *Cluster {
	if x != nil {
		return x.Cluster
	}
	return nil
}

func (x *CreateClusterResponse) GetJoinToken() string {
	if x != nil {
		return x.JoinToken
	}
	return ""
}

// JoinClusterRequest adds a device to a cluster
type JoinClusterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClusterId     string                 `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	DeviceId      string                 `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Role          K3SRole                `protobuf:"varint,3,opt,name=role,proto3,enum=fleetd.v1.K3SRole" json:"role,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinClusterRequest) Reset() {
	*x = JoinClusterRequest{}
	mi := &file_fleetd_v1_cluster_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinClusterRequest) ProtoMessage() {}

func (x *JoinClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_cluster_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinClusterRequest.ProtoReflect.Descriptor instead.
func (*JoinClusterRequest) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_cluster_proto_rawDescGZIP(), []int{7}
}

func (x *JoinClusterRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *JoinClusterRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *JoinClusterRequest) GetRole() K3SRole {
	if x != nil {
		return x.Role
	}
	return K3SRole_K3S_ROLE_UNSPECIFIED
}

func (x *JoinClusterRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type JoinClusterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Node          *ClusterNode           `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinClusterResponse) Reset() {
	*x = JoinClusterResponse{}
	mi := &file_fleetd_v1_cluster_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinClusterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinClusterResponse) ProtoMessage() {}

func (x *JoinClusterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_cluster_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinClusterResponse.ProtoReflect.Descriptor instead.
func (*JoinClusterResponse) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_cluster_proto_rawDescGZIP(), []int{8}
}

func (x *JoinClusterResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *JoinClusterResponse) GetNode() *ClusterNode {
	if x != nil {
		return x.Node
	}
	return nil
}

// GetClusterRequest retrieves cluster details
type GetClusterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClusterId     string                 `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetClusterRequest) Reset() {
	*x = GetClusterRequest{}
	mi := &file_fleetd_v1_cluster_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterRequest) ProtoMessage() {}

func (x *GetClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_cluster_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterRequest.ProtoReflect.Descriptor instead.
func (*GetClusterRequest) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_cluster_proto_rawDescGZIP(), []int{9}
}

func (x *GetClusterRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

type GetClusterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cluster       *Cluster               `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetClusterResponse) Reset() {
	*x = GetClusterResponse{}
	mi := &file_fleetd_v1_cluster_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetClusterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterResponse) ProtoMessage() {}

func (x *GetClusterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_cluster_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterResponse.ProtoReflect.Descriptor instead.
func (*GetClusterResponse) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_cluster_proto_rawDescGZIP(), []int{10}
}

func (x *GetClusterResponse) GetCluster() *Cluster {
	if x != nil {
		return x.Cluster
	}
	return nil
}

// ListClustersRequest lists all clusters
type ListClustersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        ClusterStatus          `protobuf:"varint,1,opt,name=status,proto3,enum=fleetd.v1.ClusterStatus" json:"status,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	PageSize      int32                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken     string                 `protobuf:"bytes,4,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClustersRequest) Reset() {
	*x = ListClustersRequest{}
	mi := &file_fleetd_v1_cluster_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClustersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClustersRequest) ProtoMessage() {}

func (x *ListClustersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_cluster_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClustersRequest.ProtoReflect.Descriptor instead.
func (*ListClustersRequest) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_cluster_proto_rawDescGZIP(), []int{11}
}

func (x *ListClustersRequest) GetStatus() ClusterStatus {
	if x != nil {
		return x.Status
	}
	return ClusterStatus_CLUSTER_STATUS_UNSPECIFIED
}

func (x *ListClustersRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ListClustersRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListClustersRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListClustersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Clusters      []*Cluster             `protobuf:"bytes,1,rep,name=clusters,proto3" json:"clusters,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClustersResponse) Reset() {
	*x = ListClustersResponse{}
	mi := &file_fleetd_v1_cluster_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClustersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClustersResponse) ProtoMessage() {}

func (x *ListClustersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_cluster_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClustersResponse.ProtoReflect.Descriptor instead.
func (*ListClustersResponse) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_cluster_proto_rawDescGZIP(), []int{12}
}

func (x *ListClustersResponse) GetClusters() []*Cluster {
	if x != nil {
		return x.Clusters
	}
	return nil
}

func (x *ListClustersResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// ApplyWorkloadRequest deploys a workload to a cluster
type ApplyWorkloadRequest struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	ClusterId string                 `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	Name      string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are valid to be assigned to Spec:
	//
	//	*ApplyWorkloadRequest_YamlManifest
	//	*ApplyWorkloadRequest_HelmChart
	//	*ApplyWorkloadRequest_KustomizeBundle
	Spec          isApplyWorkloadRequest_Spec `protobuf_oneof:"spec"`
	Values        map[string]string           `protobuf:"bytes,6,rep,name=values,proto3" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Template values
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApplyWorkloadRequest) Reset() {
	*x = ApplyWorkloadRequest{}
	mi := &file_fleetd_v1_cluster_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplyWorkloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyWorkloadRequest) ProtoMessage() {}

func (x *ApplyWorkloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_cluster_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyWorkloadRequest.ProtoReflect.Descriptor instead.
func (*ApplyWorkloadRequest) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_cluster_proto_rawDescGZIP(), []int{13}
}

func (x *ApplyWorkloadRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *ApplyWorkloadRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ApplyWorkloadRequest) GetSpec() isApplyWorkloadRequest_Spec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *ApplyWorkloadRequest) GetYamlManifest() string {
	if x != nil {
		if x, ok := x.Spec.(*ApplyWorkloadRequest_YamlManifest); ok {
			return x.YamlManifest
		}
	}
	return ""
}

func (x *ApplyWorkloadRequest) GetHelmChart() string {
	if x != nil {
		if x, ok := x.Spec.(*ApplyWorkloadRequest_HelmChart); ok {
			return x.HelmChart
		}
	}
	return ""
}

func (x *ApplyWorkloadRequest) GetKustomizeBundle() []byte {
	if x != nil {
		if x, ok := x.Spec.(*ApplyWorkloadRequest_KustomizeBundle); ok {
			return x.KustomizeBundle
		}
	}
	return nil
}

func (x *ApplyWorkloadRequest) GetValues() map[string]string {
	if x != nil {
		return x.Values
	}
	return nil
}

type isApplyWorkloadRequest_Spec interface {
	isApplyWorkloadRequest_Spec()
}

type ApplyWorkloadRequest_YamlManifest struct {
	YamlManifest string `protobuf:"bytes,3,opt,name=yaml_manifest,json=yamlManifest,proto3,oneof"` // Raw YAML manifest
}

type ApplyWorkloadRequest_HelmChart struct {
	HelmChart string `protobuf:"bytes,4,opt,name=helm_chart,json=helmChart,proto3,oneof"` // Helm chart reference
}

type ApplyWorkloadRequest_KustomizeBundle struct {
	KustomizeBundle []byte `protobuf:"bytes,5,opt,name=kustomize_bundle,json=kustomizeBundle,proto3,oneof"` // Kustomize bundle
}

func (*ApplyWorkloadRequest_YamlManifest) isApplyWorkloadRequest_Spec() {}

func (*ApplyWorkloadRequest_HelmChart) isApplyWorkloadRequest_Spec() {}

func (*ApplyWorkloadRequest_KustomizeBundle) isApplyWorkloadRequest_Spec() {}

type ApplyWorkloadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Resources     []string               `protobuf:"bytes,3,rep,name=resources,proto3" json:"resources,omitempty"` // Created resource names
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApplyWorkloadResponse) Reset() {
	*x = ApplyWorkloadResponse{}
	mi := &file_fleetd_v1_cluster_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplyWorkloadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyWorkloadResponse) ProtoMessage() {}

func (x *ApplyWorkloadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_cluster_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyWorkloadResponse.ProtoReflect.Descriptor instead.
func (*ApplyWorkloadResponse) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_cluster_proto_rawDescGZIP(), []int{14}
}

func (x *ApplyWorkloadResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ApplyWorkloadResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ApplyWorkloadResponse) GetResources() []string {
	if x != nil {
		return x.Resources
	}
	return nil
}

// GetNodeStatusRequest gets detailed node status
type GetNodeStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClusterId     string                 `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	DeviceId      string                 `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNodeStatusRequest) Reset() {
	*x = GetNodeStatusRequest{}
	mi := &file_fleetd_v1_cluster_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodeStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeStatusRequest) ProtoMessage() {}

func (x *GetNodeStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_cluster_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeStatusRequest.ProtoReflect.Descriptor instead.
func (*GetNodeStatusRequest) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_cluster_proto_rawDescGZIP(), []int{15}
}

func (x *GetNodeStatusRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *GetNodeStatusRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

type GetNodeStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Node          *ClusterNode           `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	Status        *NodeStatus            `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Pods          []string               `protobuf:"bytes,3,rep,name=pods,proto3" json:"pods,omitempty"` // Running pod names
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNodeStatusResponse) Reset() {
	*x = GetNodeStatusResponse{}
	mi := &file_fleetd_v1_cluster_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodeStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeStatusResponse) ProtoMessage() {}

func (x *GetNodeStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_cluster_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeStatusResponse.ProtoReflect.Descriptor instead.
func (*GetNodeStatusResponse) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_cluster_proto_rawDescGZIP(), []int{16}
}

func (x *GetNodeStatusResponse) GetNode() *ClusterNode {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *GetNodeStatusResponse) GetStatus() *NodeStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *GetNodeStatusResponse) GetPods() []string {
	if x != nil {
		return x.Pods
	}
	return nil
}

// RemoveNodeRequest removes a node from cluster
type RemoveNodeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClusterId     string                 `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	DeviceId      string                 `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Drain         bool                   `protobuf:"varint,3,opt,name=drain,proto3" json:"drain,omitempty"` // Drain node before removal
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveNodeRequest) Reset() {
	*x = RemoveNodeRequest{}
	mi := &file_fleetd_v1_cluster_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveNodeRequest) ProtoMessage() {}

func (x *RemoveNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_cluster_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveNodeRequest.ProtoReflect.Descriptor instead.
func (*RemoveNodeRequest) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_cluster_proto_rawDescGZIP(), []int{17}
}

func (x *RemoveNodeRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *RemoveNodeRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *RemoveNodeRequest) GetDrain() bool {
	if x != nil {
		return x.Drain
	}
	return false
}

type RemoveNodeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveNodeResponse) Reset() {
	*x = RemoveNodeResponse{}
	mi := &file_fleetd_v1_cluster_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveNodeResponse) ProtoMessage() {}

func (x *RemoveNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fleetd_v1_cluster_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveNodeResponse.ProtoReflect.Descriptor instead.
func (*RemoveNodeResponse) Descriptor() ([]byte, []int) {
	return file_fleetd_v1_cluster_proto_rawDescGZIP(), []int{18}
}

func (x *RemoveNodeResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RemoveNodeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_fleetd_v1_cluster_proto protoreflect.FileDescriptor

const file_fleetd_v1_cluster_proto_rawDesc = "" +
	"\n" +
	"\x17fleetd/v1/cluster.proto\x12\tfleetd.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"P\n" +
	"\x10DeviceCapability\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\x12\x12\n" +
	"\x04unit\x18\x03 \x01(\tR\x04unit\"\xca\x06\n" +
	"\x0eExtendedDevice\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12)\n" +
	"\x04type\x18\x03 \x01(\x0e2\x15.fleetd.v1.DeviceTypeR\x04type\x12\x18\n" +
	"\aversion\x18\x04 \x01(\tR\aversion\x12C\n" +
	"\bmetadata\x18\x05 \x03(\v2'.fleetd.v1.ExtendedDevice.MetadataEntryR\bmetadata\x127\n" +
	"\tlast_seen\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\blastSeen\x12?\n" +
	"\fcapabilities\x18\a \x03(\v2\x1b.fleetd.v1.DeviceCapabilityR\fcapabilities\x12\"\n" +
	"\farchitecture\x18\b \x01(\tR\farchitecture\x12\x17\n" +
	"\aos_name\x18\t \x01(\tR\x06osName\x12\x1d\n" +
	"\n" +
	"os_version\x18\n" +
	" \x01(\tR\tosVersion\x12-\n" +
	"\bk3s_role\x18\v \x01(\x0e2\x12.fleetd.v1.K3sRoleR\ak3sRole\x12\x1f\n" +
	"\vk3s_version\x18\f \x01(\tR\n" +
	"k3sVersion\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\r \x01(\tR\tclusterId\x12!\n" +
	"\ftotal_memory\x18\x0e \x01(\x03R\vtotalMemory\x12\x1b\n" +
	"\tcpu_cores\x18\x0f \x01(\x05R\bcpuCores\x12\x1b\n" +
	"\tdisk_size\x18\x10 \x01(\x03R\bdiskSize\x12\x17\n" +
	"\ahas_gpu\x18\x11 \x01(\bR\x06hasGpu\x12!\n" +
	"\fip_addresses\x18\x12 \x03(\tR\vipAddresses\x12\x1f\n" +
	"\vprimary_mac\x18\x13 \x01(\tR\n" +
	"primaryMac\x12\x1e\n" +
	"\n" +
	"configured\x18\x14 \x01(\bR\n" +
	"configured\x12\x16\n" +
	"\x06online\x18\x15 \x01(\bR\x06online\x12\x16\n" +
	"\x06status\x18\x16 \x01(\tR\x06status\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x99\x04\n" +
	"\aCluster\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x129\n" +
	"\n" +
	"created_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12\x18\n" +
	"\aversion\x18\x05 \x01(\tR\aversion\x12!\n" +
	"\fnetwork_cidr\x18\x06 \x01(\tR\vnetworkCidr\x12!\n" +
	"\fservice_cidr\x18\a \x01(\tR\vserviceCidr\x12,\n" +
	"\x05nodes\x18\b \x03(\v2\x16.fleetd.v1.ClusterNodeR\x05nodes\x12!\n" +
	"\fapi_endpoint\x18\t \x01(\tR\vapiEndpoint\x12\x1e\n" +
	"\n" +
	"kubeconfig\x18\n" +
	" \x01(\fR\n" +
	"kubeconfig\x120\n" +
	"\x06status\x18\v \x01(\x0e2\x18.fleetd.v1.ClusterStatusR\x06status\x126\n" +
	"\x06labels\x18\f \x03(\v2\x1e.fleetd.v1.Cluster.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x84\x03\n" +
	"\vClusterNode\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x12\x1a\n" +
	"\bhostname\x18\x02 \x01(\tR\bhostname\x12&\n" +
	"\x04role\x18\x03 \x01(\x0e2\x12.fleetd.v1.K3sRoleR\x04role\x12\x1d\n" +
	"\n" +
	"ip_address\x18\x04 \x01(\tR\tipAddress\x127\n" +
	"\tjoined_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\bjoinedAt\x12-\n" +
	"\x06status\x18\x06 \x01(\v2\x15.fleetd.v1.NodeStatusR\x06status\x12:\n" +
	"\x06labels\x18\a \x03(\v2\".fleetd.v1.ClusterNode.LabelsEntryR\x06labels\x12\x16\n" +
	"\x06taints\x18\b \x03(\tR\x06taints\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x96\x03\n" +
	"\n" +
	"NodeStatus\x12\x14\n" +
	"\x05ready\x18\x01 \x01(\bR\x05ready\x12 \n" +
	"\vschedulable\x18\x02 \x01(\bR\vschedulable\x12!\n" +
	"\fmemory_usage\x18\x03 \x01(\x03R\vmemoryUsage\x12'\n" +
	"\x0fmemory_capacity\x18\x04 \x01(\x03R\x0ememoryCapacity\x12\x1b\n" +
	"\tcpu_usage\x18\x05 \x01(\x05R\bcpuUsage\x12!\n" +
	"\fcpu_capacity\x18\x06 \x01(\x05R\vcpuCapacity\x12\x1b\n" +
	"\tpod_count\x18\a \x01(\x05R\bpodCount\x12!\n" +
	"\fpod_capacity\x18\b \x01(\x05R\vpodCapacity\x12E\n" +
	"\n" +
	"conditions\x18\t \x03(\v2%.fleetd.v1.NodeStatus.ConditionsEntryR\n" +
	"conditions\x1a=\n" +
	"\x0fConditionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xf5\x02\n" +
	"\x14CreateClusterRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12(\n" +
	"\x10server_device_id\x18\x02 \x01(\tR\x0eserverDeviceId\x12\x1f\n" +
	"\vk3s_version\x18\x03 \x01(\tR\n" +
	"k3sVersion\x12C\n" +
	"\x06config\x18\x04 \x03(\v2+.fleetd.v1.CreateClusterRequest.ConfigEntryR\x06config\x12C\n" +
	"\x06labels\x18\x05 \x03(\v2+.fleetd.v1.CreateClusterRequest.LabelsEntryR\x06labels\x1a9\n" +
	"\vConfigEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"d\n" +
	"\x15CreateClusterResponse\x12,\n" +
	"\acluster\x18\x01 \x01(\v2\x12.fleetd.v1.ClusterR\acluster\x12\x1d\n" +
	"\n" +
	"join_token\x18\x02 \x01(\tR\tjoinToken\"\xf6\x01\n" +
	"\x12JoinClusterRequest\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\x12\x1b\n" +
	"\tdevice_id\x18\x02 \x01(\tR\bdeviceId\x12&\n" +
	"\x04role\x18\x03 \x01(\x0e2\x12.fleetd.v1.K3sRoleR\x04role\x12A\n" +
	"\x06labels\x18\x04 \x03(\v2).fleetd.v1.JoinClusterRequest.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"[\n" +
	"\x13JoinClusterResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12*\n" +
	"\x04node\x18\x02 \x01(\v2\x16.fleetd.v1.ClusterNodeR\x04node\"2\n" +
	"\x11GetClusterRequest\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\"B\n" +
	"\x12GetClusterResponse\x12,\n" +
	"\acluster\x18\x01 \x01(\v2\x12.fleetd.v1.ClusterR\acluster\"\x82\x02\n" +
	"\x13ListClustersRequest\x120\n" +
	"\x06status\x18\x01 \x01(\x0e2\x18.fleetd.v1.ClusterStatusR\x06status\x12B\n" +
	"\x06labels\x18\x02 \x03(\v2*.fleetd.v1.ListClustersRequest.LabelsEntryR\x06labels\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x04 \x01(\tR\tpageToken\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"n\n" +
	"\x14ListClustersResponse\x12.\n" +
	"\bclusters\x18\x01 \x03(\v2\x12.fleetd.v1.ClusterR\bclusters\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"\xc6\x02\n" +
	"\x14ApplyWorkloadRequest\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12%\n" +
	"\ryaml_manifest\x18\x03 \x01(\tH\x00R\fyamlManifest\x12\x1f\n" +
	"\n" +
	"helm_chart\x18\x04 \x01(\tH\x00R\thelmChart\x12+\n" +
	"\x10kustomize_bundle\x18\x05 \x01(\fH\x00R\x0fkustomizeBundle\x12C\n" +
	"\x06values\x18\x06 \x03(\v2+.fleetd.v1.ApplyWorkloadRequest.ValuesEntryR\x06values\x1a9\n" +
	"\vValuesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\x06\n" +
	"\x04spec\"i\n" +
	"\x15ApplyWorkloadResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1c\n" +
	"\tresources\x18\x03 \x03(\tR\tresources\"R\n" +
	"\x14GetNodeStatusRequest\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\x12\x1b\n" +
	"\tdevice_id\x18\x02 \x01(\tR\bdeviceId\"\x86\x01\n" +
	"\x15GetNodeStatusResponse\x12*\n" +
	"\x04node\x18\x01 \x01(\v2\x16.fleetd.v1.ClusterNodeR\x04node\x12-\n" +
	"\x06status\x18\x02 \x01(\v2\x15.fleetd.v1.NodeStatusR\x06status\x12\x12\n" +
	"\x04pods\x18\x03 \x03(\tR\x04pods\"e\n" +
	"\x11RemoveNodeRequest\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\x12\x1b\n" +
	"\tdevice_id\x18\x02 \x01(\tR\bdeviceId\x12\x14\n" +
	"\x05drain\x18\x03 \x01(\bR\x05drain\"H\n" +
	"\x12RemoveNodeResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage*\xa1\x01\n" +
	"\n" +
	"DeviceType\x12\x1b\n" +
	"\x17DEVICE_TYPE_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11DEVICE_TYPE_ESP32\x10\x01\x12\x14\n" +
	"\x10DEVICE_TYPE_RPI4\x10\x02\x12\x14\n" +
	"\x10DEVICE_TYPE_RPI5\x10\x03\x12\x1b\n" +
	"\x17DEVICE_TYPE_JETSON_NANO\x10\x04\x12\x16\n" +
	"\x12DEVICE_TYPE_X86_64\x10\x05*f\n" +
	"\aK3sRole\x12\x18\n" +
	"\x14K3S_ROLE_UNSPECIFIED\x10\x00\x12\x13\n" +
	"\x0fK3S_ROLE_SERVER\x10\x01\x12\x12\n" +
	"\x0eK3S_ROLE_AGENT\x10\x02\x12\x18\n" +
	"\x14K3S_ROLE_SERVER_INIT\x10\x03*\xba\x01\n" +
	"\rClusterStatus\x12\x1e\n" +
	"\x1aCLUSTER_STATUS_UNSPECIFIED\x10\x00\x12\x1b\n" +
	"\x17CLUSTER_STATUS_CREATING\x10\x01\x12\x18\n" +
	"\x14CLUSTER_STATUS_READY\x10\x02\x12\x1b\n" +
	"\x17CLUSTER_STATUS_UPDATING\x10\x03\x12\x1b\n" +
	"\x17CLUSTER_STATUS_DEGRADED\x10\x04\x12\x18\n" +
	"\x14CLUSTER_STATUS_ERROR\x10\x052\xc1\x04\n" +
	"\x0eClusterService\x12R\n" +
	"\rCreateCluster\x12\x1f.fleetd.v1.CreateClusterRequest\x1a .fleetd.v1.CreateClusterResponse\x12L\n" +
	"\vJoinCluster\x12\x1d.fleetd.v1.JoinClusterRequest\x1a\x1e.fleetd.v1.JoinClusterResponse\x12I\n" +
	"\n" +
	"GetCluster\x12\x1c.fleetd.v1.GetClusterRequest\x1a\x1d.fleetd.v1.GetClusterResponse\x12O\n" +
	"\fListClusters\x12\x1e.fleetd.v1.ListClustersRequest\x1a\x1f.fleetd.v1.ListClustersResponse\x12R\n" +
	"\rApplyWorkload\x12\x1f.fleetd.v1.ApplyWorkloadRequest\x1a .fleetd.v1.ApplyWorkloadResponse\x12R\n" +
	"\rGetNodeStatus\x12\x1f.fleetd.v1.GetNodeStatusRequest\x1a .fleetd.v1.GetNodeStatusResponse\x12I\n" +
	"\n" +
	"RemoveNode\x12\x1c.fleetd.v1.RemoveNodeRequest\x1a\x1d.fleetd.v1.RemoveNodeResponseB\x83\x01\n" +
	"\rcom.fleetd.v1B\fClusterProtoP\x01Z\x1ffleetd.sh/gen/fleetd/v1;fleetpb\xa2\x02\x03FXX\xaa\x02\tFleetd.V1\xca\x02\tFleetd\\V1\xe2\x02\x15Fleetd\\V1\\GPBMetadata\xea\x02\n" +
	"Fleetd::V1b\x06proto3"

var (
	file_fleetd_v1_cluster_proto_rawDescOnce sync.Once
	file_fleetd_v1_cluster_proto_rawDescData []byte
)

func file_fleetd_v1_cluster_proto_rawDescGZIP() []byte {
	file_fleetd_v1_cluster_proto_rawDescOnce.Do(func() {
		file_fleetd_v1_cluster_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_fleetd_v1_cluster_proto_rawDesc), len(file_fleetd_v1_cluster_proto_rawDesc)))
	})
	return file_fleetd_v1_cluster_proto_rawDescData
}

var file_fleetd_v1_cluster_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_fleetd_v1_cluster_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_fleetd_v1_cluster_proto_goTypes = []any{
	(DeviceType)(0),               // 0: fleetd.v1.DeviceType
	(K3SRole)(0),                  // 1: fleetd.v1.K3sRole
	(ClusterStatus)(0),            // 2: fleetd.v1.ClusterStatus
	(*DeviceCapability)(nil),      // 3: fleetd.v1.DeviceCapability
	(*ExtendedDevice)(nil),        // 4: fleetd.v1.ExtendedDevice
	(*Cluster)(nil),               // 5: fleetd.v1.Cluster
	(*ClusterNode)(nil),           // 6: fleetd.v1.ClusterNode
	(*NodeStatus)(nil),            // 7: fleetd.v1.NodeStatus
	(*CreateClusterRequest)(nil),  // 8: fleetd.v1.CreateClusterRequest
	(*CreateClusterResponse)(nil), // 9: fleetd.v1.CreateClusterResponse
	(*JoinClusterRequest)(nil),    // 10: fleetd.v1.JoinClusterRequest
	(*JoinClusterResponse)(nil),   // 11: fleetd.v1.JoinClusterResponse
	(*GetClusterRequest)(nil),     // 12: fleetd.v1.GetClusterRequest
	(*GetClusterResponse)(nil),    // 13: fleetd.v1.GetClusterResponse
	(*ListClustersRequest)(nil),   // 14: fleetd.v1.ListClustersRequest
	(*ListClustersResponse)(nil),  // 15: fleetd.v1.ListClustersResponse
	(*ApplyWorkloadRequest)(nil),  // 16: fleetd.v1.ApplyWorkloadRequest
	(*ApplyWorkloadResponse)(nil), // 17: fleetd.v1.ApplyWorkloadResponse
	(*GetNodeStatusRequest)(nil),  // 18: fleetd.v1.GetNodeStatusRequest
	(*GetNodeStatusResponse)(nil), // 19: fleetd.v1.GetNodeStatusResponse
	(*RemoveNodeRequest)(nil),     // 20: fleetd.v1.RemoveNodeRequest
	(*RemoveNodeResponse)(nil),    // 21: fleetd.v1.RemoveNodeResponse
	nil,                           // 22: fleetd.v1.ExtendedDevice.MetadataEntry
	nil,                           // 23: fleetd.v1.Cluster.LabelsEntry
	nil,                           // 24: fleetd.v1.ClusterNode.LabelsEntry
	nil,                           // 25: fleetd.v1.NodeStatus.ConditionsEntry
	nil,                           // 26: fleetd.v1.CreateClusterRequest.ConfigEntry
	nil,                           // 27: fleetd.v1.CreateClusterRequest.LabelsEntry
	nil,                           // 28: fleetd.v1.JoinClusterRequest.LabelsEntry
	nil,                           // 29: fleetd.v1.ListClustersRequest.LabelsEntry
	nil,                           // 30: fleetd.v1.ApplyWorkloadRequest.ValuesEntry
	(*timestamppb.Timestamp)(nil), // 31: google.protobuf.Timestamp
}
var file_fleetd_v1_cluster_proto_depIdxs = []int32{
	0,  // 0: fleetd.v1.ExtendedDevice.type:type_name -> fleetd.v1.DeviceType
	22, // 1: fleetd.v1.ExtendedDevice.metadata:type_name -> fleetd.v1.ExtendedDevice.MetadataEntry
	31, // 2: fleetd.v1.ExtendedDevice.last_seen:type_name -> google.protobuf.Timestamp
	3,  // 3: fleetd.v1.ExtendedDevice.capabilities:type_name -> fleetd.v1.DeviceCapability
	1,  // 4: fleetd.v1.ExtendedDevice.k3s_role:type_name -> fleetd.v1.K3sRole
	31, // 5: fleetd.v1.Cluster.created_at:type_name -> google.protobuf.Timestamp
	31, // 6: fleetd.v1.Cluster.updated_at:type_name -> google.protobuf.Timestamp
	6,  // 7: fleetd.v1.Cluster.nodes:type_name -> fleetd.v1.ClusterNode
	2,  // 8: fleetd.v1.Cluster.status:type_name -> fleetd.v1.ClusterStatus
	23, // 9: fleetd.v1.Cluster.labels:type_name -> fleetd.v1.Cluster.LabelsEntry
	1,  // 10: fleetd.v1.ClusterNode.role:type_name -> fleetd.v1.K3sRole
	31, // 11: fleetd.v1.ClusterNode.joined_at:type_name -> google.protobuf.Timestamp
	7,  // 12: fleetd.v1.ClusterNode.status:type_name -> fleetd.v1.NodeStatus
	24, // 13: fleetd.v1.ClusterNode.labels:type_name -> fleetd.v1.ClusterNode.LabelsEntry
	25, // 14: fleetd.v1.NodeStatus.conditions:type_name -> fleetd.v1.NodeStatus.ConditionsEntry
	26, // 15: fleetd.v1.CreateClusterRequest.config:type_name -> fleetd.v1.CreateClusterRequest.ConfigEntry
	27, // 16: fleetd.v1.CreateClusterRequest.labels:type_name -> fleetd.v1.CreateClusterRequest.LabelsEntry
	5,  // 17: fleetd.v1.CreateClusterResponse.cluster:type_name -> fleetd.v1.Cluster
	1,  // 18: fleetd.v1.JoinClusterRequest.role:type_name -> fleetd.v1.K3sRole
	28, // 19: fleetd.v1.JoinClusterRequest.labels:type_name -> fleetd.v1.JoinClusterRequest.LabelsEntry
	6,  // 20: fleetd.v1.JoinClusterResponse.node:type_name -> fleetd.v1.ClusterNode
	5,  // 21: fleetd.v1.GetClusterResponse.cluster:type_name -> fleetd.v1.Cluster
	2,  // 22: fleetd.v1.ListClustersRequest.status:type_name -> fleetd.v1.ClusterStatus
	29, // 23: fleetd.v1.ListClustersRequest.labels:type_name -> fleetd.v1.ListClustersRequest.LabelsEntry
	5,  // 24: fleetd.v1.ListClustersResponse.clusters:type_name -> fleetd.v1.Cluster
	30, // 25: fleetd.v1.ApplyWorkloadRequest.values:type_name -> fleetd.v1.ApplyWorkloadRequest.ValuesEntry
	6,  // 26: fleetd.v1.GetNodeStatusResponse.node:type_name -> fleetd.v1.ClusterNode
	7,  // 27: fleetd.v1.GetNodeStatusResponse.status:type_name -> fleetd.v1.NodeStatus
	8,  // 28: fleetd.v1.ClusterService.CreateCluster:input_type -> fleetd.v1.CreateClusterRequest
	10, // 29: fleetd.v1.ClusterService.JoinCluster:input_type -> fleetd.v1.JoinClusterRequest
	12, // 30: fleetd.v1.ClusterService.GetCluster:input_type -> fleetd.v1.GetClusterRequest
	14, // 31: fleetd.v1.ClusterService.ListClusters:input_type -> fleetd.v1.ListClustersRequest
	16, // 32: fleetd.v1.ClusterService.ApplyWorkload:input_type -> fleetd.v1.ApplyWorkloadRequest
	18, // 33: fleetd.v1.ClusterService.GetNodeStatus:input_type -> fleetd.v1.GetNodeStatusRequest
	20, // 34: fleetd.v1.ClusterService.RemoveNode:input_type -> fleetd.v1.RemoveNodeRequest
	9,  // 35: fleetd.v1.ClusterService.CreateCluster:output_type -> fleetd.v1.CreateClusterResponse
	11, // 36: fleetd.v1.ClusterService.JoinCluster:output_type -> fleetd.v1.JoinClusterResponse
	13, // 37: fleetd.v1.ClusterService.GetCluster:output_type -> fleetd.v1.GetClusterResponse
	15, // 38: fleetd.v1.ClusterService.ListClusters:output_type -> fleetd.v1.ListClustersResponse
	17, // 39: fleetd.v1.ClusterService.ApplyWorkload:output_type -> fleetd.v1.ApplyWorkloadResponse
	19, // 40: fleetd.v1.ClusterService.GetNodeStatus:output_type -> fleetd.v1.GetNodeStatusResponse
	21, // 41: fleetd.v1.ClusterService.RemoveNode:output_type -> fleetd.v1.RemoveNodeResponse
	35, // [35:42] is the sub-list for method output_type
	28, // [28:35] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_fleetd_v1_cluster_proto_init() }
func file_fleetd_v1_cluster_proto_init() {
	if File_fleetd_v1_cluster_proto != nil {
		return
	}
	file_fleetd_v1_cluster_proto_msgTypes[13].OneofWrappers = []any{
		(*ApplyWorkloadRequest_YamlManifest)(nil),
		(*ApplyWorkloadRequest_HelmChart)(nil),
		(*ApplyWorkloadRequest_KustomizeBundle)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_fleetd_v1_cluster_proto_rawDesc), len(file_fleetd_v1_cluster_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_fleetd_v1_cluster_proto_goTypes,
		DependencyIndexes: file_fleetd_v1_cluster_proto_depIdxs,
		EnumInfos:         file_fleetd_v1_cluster_proto_enumTypes,
		MessageInfos:      file_fleetd_v1_cluster_proto_msgTypes,
	}.Build()
	File_fleetd_v1_cluster_proto = out.File
	file_fleetd_v1_cluster_proto_goTypes = nil
	file_fleetd_v1_cluster_proto_depIdxs = nil
}
