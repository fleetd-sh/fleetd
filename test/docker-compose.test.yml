version: '3.8'

services:
  postgres:
    image: postgres:17-alpine
    environment:
      POSTGRES_USER: fleetd_test
      POSTGRES_PASSWORD: test_password
      POSTGRES_DB: fleetd_test
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fleetd_test"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  platform-api:
    build:
      context: ..
      dockerfile: Dockerfile
      target: platform-api
    environment:
      DATABASE_URL: postgres://fleetd_test:test_password@postgres:5432/fleetd_test?sslmode=disable
      REDIS_URL: redis://redis:6379/0
      SECRET_KEY: test-secret-key-for-integration-tests
      PORT: 8090
      ENABLE_REST: "true"
      LOG_LEVEL: debug
      FLEETD_AUTH_MODE: development
    ports:
      - "8090:8090"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8090/health"]
      interval: 5s
      timeout: 5s
      retries: 10

  device-api:
    build:
      context: ..
      dockerfile: Dockerfile
      target: device-api
    environment:
      DATABASE_URL: postgres://fleetd_test:test_password@postgres:5432/fleetd_test?sslmode=disable
      REDIS_URL: redis://redis:6379/0
      PORT: 8080
      LOG_LEVEL: debug
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 5s
      timeout: 5s
      retries: 10

  studio:
    build:
      context: ../studio
      dockerfile: Dockerfile
    environment:
      NEXT_PUBLIC_API_URL: http://platform-api:8090
      NODE_ENV: test
    ports:
      - "3001:3000"
    depends_on:
      platform-api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 5s
      timeout: 5s
      retries: 10

  test-runner:
    build:
      context: ..
      dockerfile: test/Dockerfile.test
    environment:
      INTEGRATION: "true"
      PLATFORM_API_URL: http://platform-api:8090
      DEVICE_API_URL: http://device-api:8080
      DATABASE_URL: postgres://fleetd_test:test_password@postgres:5432/fleetd_test?sslmode=disable
      REDIS_URL: redis://redis:6379/0
    volumes:
      - ../:/app
      - test_results:/app/test-results
    depends_on:
      platform-api:
        condition: service_healthy
      device-api:
        condition: service_healthy
    command: |
      sh -c '
        echo "Waiting for services to be ready..."
        sleep 5
        echo "Running integration tests..."
        go test -v -tags=integration ./test/integration/... -coverprofile=/app/test-results/integration.coverage
        echo "Running e2e tests..."
        go test -v -tags=e2e ./test/e2e/... -coverprofile=/app/test-results/e2e.coverage
        echo "Running CLI tests..."
        go test -v ./cmd/fleetctl/cmd/... -coverprofile=/app/test-results/cli.coverage
        echo "Tests completed!"
      '

volumes:
  postgres_test_data:
  test_results:

networks:
  default:
    name: fleetd-test-network
