// @generated by protoc-gen-es v2.8.0 with parameter "target=ts"
// @generated from file fleetd/v1/device.proto (package fleetd.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file fleetd/v1/device.proto.
 */
export const file_fleetd_v1_device: GenFile =
  /*@__PURE__*/
  fileDesc(
    "ChZmbGVldGQvdjEvZGV2aWNlLnByb3RvEglmbGVldGQudjEigAIKBkRldmljZRIKCgJpZBgBIAEoCRIMCgRuYW1lGAIgASgJEgwKBHR5cGUYAyABKAkSDwoHdmVyc2lvbhgEIAEoCRIxCghtZXRhZGF0YRgFIAMoCzIfLmZsZWV0ZC52MS5EZXZpY2UuTWV0YWRhdGFFbnRyeRItCglsYXN0X3NlZW4YBiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEioKC3N5c3RlbV9pbmZvGAcgASgLMhUuZmxlZXRkLnYxLlN5c3RlbUluZm8aLwoNTWV0YWRhdGFFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIroECgpTeXN0ZW1JbmZvEhAKCGhvc3RuYW1lGAEgASgJEgoKAm9zGAIgASgJEhIKCm9zX3ZlcnNpb24YAyABKAkSDAoEYXJjaBgEIAEoCRIRCgljcHVfbW9kZWwYBSABKAkSEQoJY3B1X2NvcmVzGAYgASgFEhQKDG1lbW9yeV90b3RhbBgHIAEoBBIVCg1zdG9yYWdlX3RvdGFsGAggASgEEhYKDmtlcm5lbF92ZXJzaW9uGAkgASgJEhAKCHBsYXRmb3JtGAogASgJEi8KBWV4dHJhGAsgAygLMiAuZmxlZXRkLnYxLlN5c3RlbUluZm8uRXh0cmFFbnRyeRI3ChJuZXR3b3JrX2ludGVyZmFjZXMYDCADKAsyGy5mbGVldGQudjEuTmV0d29ya0ludGVyZmFjZRIQCgh0aW1lem9uZRgNIAEoCRIVCg1hZ2VudF92ZXJzaW9uGA4gASgJEhUKDXNlcmlhbF9udW1iZXIYDyABKAkSFAoMcHJvZHVjdF9uYW1lGBAgASgJEhQKDG1hbnVmYWN0dXJlchgRIAEoCRIsCgxsb2FkX2F2ZXJhZ2UYEiABKAsyFi5mbGVldGQudjEuTG9hZEF2ZXJhZ2USFQoNcHJvY2Vzc19jb3VudBgTIAEoBRImCgliaW9zX2luZm8YFCABKAsyEy5mbGVldGQudjEuQmlvc0luZm8aLAoKRXh0cmFFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBInwKEE5ldHdvcmtJbnRlcmZhY2USDAoEbmFtZRgBIAEoCRITCgttYWNfYWRkcmVzcxgCIAEoCRIUCgxpcF9hZGRyZXNzZXMYAyADKAkSDQoFaXNfdXAYBCABKAgSEwoLaXNfbG9vcGJhY2sYBSABKAgSCwoDbXR1GAYgASgEIjsKC0xvYWRBdmVyYWdlEg0KBWxvYWQxGAEgASgBEg0KBWxvYWQ1GAIgASgBEg4KBmxvYWQxNRgDIAEoASJBCghCaW9zSW5mbxIOCgZ2ZW5kb3IYASABKAkSDwoHdmVyc2lvbhgCIAEoCRIUCgxyZWxlYXNlX2RhdGUYAyABKAki4wEKD1JlZ2lzdGVyUmVxdWVzdBIMCgRuYW1lGAEgASgJEgwKBHR5cGUYAiABKAkSDwoHdmVyc2lvbhgDIAEoCRJCCgxjYXBhYmlsaXRpZXMYBCADKAsyLC5mbGVldGQudjEuUmVnaXN0ZXJSZXF1ZXN0LkNhcGFiaWxpdGllc0VudHJ5EioKC3N5c3RlbV9pbmZvGAUgASgLMhUuZmxlZXRkLnYxLlN5c3RlbUluZm8aMwoRQ2FwYWJpbGl0aWVzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASI2ChBSZWdpc3RlclJlc3BvbnNlEhEKCWRldmljZV9pZBgBIAEoCRIPCgdhcGlfa2V5GAIgASgJIpABChBIZWFydGJlYXRSZXF1ZXN0EhEKCWRldmljZV9pZBgBIAEoCRI5CgdtZXRyaWNzGAIgAygLMiguZmxlZXRkLnYxLkhlYXJ0YmVhdFJlcXVlc3QuTWV0cmljc0VudHJ5Gi4KDE1ldHJpY3NFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIjoKEUhlYXJ0YmVhdFJlc3BvbnNlEhIKCmhhc191cGRhdGUYASABKAgSEQoJdXBkYXRlX2lkGAIgASgJIqYBChNSZXBvcnRTdGF0dXNSZXF1ZXN0EhEKCWRldmljZV9pZBgBIAEoCRIOCgZzdGF0dXMYAiABKAkSPAoHbWV0cmljcxgDIAMoCzIrLmZsZWV0ZC52MS5SZXBvcnRTdGF0dXNSZXF1ZXN0Lk1ldHJpY3NFbnRyeRouCgxNZXRyaWNzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASInChRSZXBvcnRTdGF0dXNSZXNwb25zZRIPCgdzdWNjZXNzGAEgASgIIiUKEEdldERldmljZVJlcXVlc3QSEQoJZGV2aWNlX2lkGAEgASgJIjYKEUdldERldmljZVJlc3BvbnNlEiEKBmRldmljZRgBIAEoCzIRLmZsZWV0ZC52MS5EZXZpY2UiagoSTGlzdERldmljZXNSZXF1ZXN0EgwKBHR5cGUYASABKAkSDwoHdmVyc2lvbhgCIAEoCRIOCgZzdGF0dXMYAyABKAkSEQoJcGFnZV9zaXplGAQgASgFEhIKCnBhZ2VfdG9rZW4YBSABKAkiUgoTTGlzdERldmljZXNSZXNwb25zZRIiCgdkZXZpY2VzGAEgAygLMhEuZmxlZXRkLnYxLkRldmljZRIXCg9uZXh0X3BhZ2VfdG9rZW4YAiABKAkiKAoTRGVsZXRlRGV2aWNlUmVxdWVzdBIRCglkZXZpY2VfaWQYASABKAkiJwoURGVsZXRlRGV2aWNlUmVzcG9uc2USDwoHc3VjY2VzcxgBIAEoCDLUAwoNRGV2aWNlU2VydmljZRJDCghSZWdpc3RlchIaLmZsZWV0ZC52MS5SZWdpc3RlclJlcXVlc3QaGy5mbGVldGQudjEuUmVnaXN0ZXJSZXNwb25zZRJGCglIZWFydGJlYXQSGy5mbGVldGQudjEuSGVhcnRiZWF0UmVxdWVzdBocLmZsZWV0ZC52MS5IZWFydGJlYXRSZXNwb25zZRJPCgxSZXBvcnRTdGF0dXMSHi5mbGVldGQudjEuUmVwb3J0U3RhdHVzUmVxdWVzdBofLmZsZWV0ZC52MS5SZXBvcnRTdGF0dXNSZXNwb25zZRJGCglHZXREZXZpY2USGy5mbGVldGQudjEuR2V0RGV2aWNlUmVxdWVzdBocLmZsZWV0ZC52MS5HZXREZXZpY2VSZXNwb25zZRJMCgtMaXN0RGV2aWNlcxIdLmZsZWV0ZC52MS5MaXN0RGV2aWNlc1JlcXVlc3QaHi5mbGVldGQudjEuTGlzdERldmljZXNSZXNwb25zZRJPCgxEZWxldGVEZXZpY2USHi5mbGVldGQudjEuRGVsZXRlRGV2aWNlUmVxdWVzdBofLmZsZWV0ZC52MS5EZWxldGVEZXZpY2VSZXNwb25zZUKCAQoNY29tLmZsZWV0ZC52MUILRGV2aWNlUHJvdG9QAVofZmxlZXRkLnNoL2dlbi9mbGVldGQvdjE7ZmxlZXRwYqICA0ZYWKoCCUZsZWV0ZC5WMcoCCUZsZWV0ZFxWMeICFUZsZWV0ZFxWMVxHUEJNZXRhZGF0YeoCCkZsZWV0ZDo6VjFiBnByb3RvMw",
    [file_google_protobuf_timestamp],
  );

/**
 * @generated from message fleetd.v1.Device
 */
export type Device = Message<"fleetd.v1.Device"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string type = 3;
   */
  type: string;

  /**
   * @generated from field: string version = 4;
   */
  version: string;

  /**
   * @generated from field: map<string, string> metadata = 5;
   */
  metadata: { [key: string]: string };

  /**
   * @generated from field: google.protobuf.Timestamp last_seen = 6;
   */
  lastSeen?: Timestamp;

  /**
   * @generated from field: fleetd.v1.SystemInfo system_info = 7;
   */
  systemInfo?: SystemInfo;
};

/**
 * Describes the message fleetd.v1.Device.
 * Use `create(DeviceSchema)` to create a new message.
 */
export const DeviceSchema: GenMessage<Device> = /*@__PURE__*/ messageDesc(file_fleetd_v1_device, 0);

/**
 * @generated from message fleetd.v1.SystemInfo
 */
export type SystemInfo = Message<"fleetd.v1.SystemInfo"> & {
  /**
   * @generated from field: string hostname = 1;
   */
  hostname: string;

  /**
   * @generated from field: string os = 2;
   */
  os: string;

  /**
   * @generated from field: string os_version = 3;
   */
  osVersion: string;

  /**
   * @generated from field: string arch = 4;
   */
  arch: string;

  /**
   * @generated from field: string cpu_model = 5;
   */
  cpuModel: string;

  /**
   * @generated from field: int32 cpu_cores = 6;
   */
  cpuCores: number;

  /**
   * in bytes
   *
   * @generated from field: uint64 memory_total = 7;
   */
  memoryTotal: bigint;

  /**
   * in bytes
   *
   * @generated from field: uint64 storage_total = 8;
   */
  storageTotal: bigint;

  /**
   * @generated from field: string kernel_version = 9;
   */
  kernelVersion: string;

  /**
   * @generated from field: string platform = 10;
   */
  platform: string;

  /**
   * for additional system info
   *
   * @generated from field: map<string, string> extra = 11;
   */
  extra: { [key: string]: string };

  /**
   * Network information
   *
   * @generated from field: repeated fleetd.v1.NetworkInterface network_interfaces = 12;
   */
  networkInterfaces: NetworkInterface[];

  /**
   * System identification
   *
   * @generated from field: string timezone = 13;
   */
  timezone: string;

  /**
   * @generated from field: string agent_version = 14;
   */
  agentVersion: string;

  /**
   * @generated from field: string serial_number = 15;
   */
  serialNumber: string;

  /**
   * @generated from field: string product_name = 16;
   */
  productName: string;

  /**
   * @generated from field: string manufacturer = 17;
   */
  manufacturer: string;

  /**
   * Runtime metrics
   *
   * @generated from field: fleetd.v1.LoadAverage load_average = 18;
   */
  loadAverage?: LoadAverage;

  /**
   * @generated from field: int32 process_count = 19;
   */
  processCount: number;

  /**
   * BIOS/Firmware
   *
   * @generated from field: fleetd.v1.BiosInfo bios_info = 20;
   */
  biosInfo?: BiosInfo;
};

/**
 * Describes the message fleetd.v1.SystemInfo.
 * Use `create(SystemInfoSchema)` to create a new message.
 */
export const SystemInfoSchema: GenMessage<SystemInfo> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_device, 1);

/**
 * @generated from message fleetd.v1.NetworkInterface
 */
export type NetworkInterface = Message<"fleetd.v1.NetworkInterface"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string mac_address = 2;
   */
  macAddress: string;

  /**
   * IPv4 and IPv6
   *
   * @generated from field: repeated string ip_addresses = 3;
   */
  ipAddresses: string[];

  /**
   * @generated from field: bool is_up = 4;
   */
  isUp: boolean;

  /**
   * @generated from field: bool is_loopback = 5;
   */
  isLoopback: boolean;

  /**
   * @generated from field: uint64 mtu = 6;
   */
  mtu: bigint;
};

/**
 * Describes the message fleetd.v1.NetworkInterface.
 * Use `create(NetworkInterfaceSchema)` to create a new message.
 */
export const NetworkInterfaceSchema: GenMessage<NetworkInterface> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_device, 2);

/**
 * @generated from message fleetd.v1.LoadAverage
 */
export type LoadAverage = Message<"fleetd.v1.LoadAverage"> & {
  /**
   * 1 minute average
   *
   * @generated from field: double load1 = 1;
   */
  load1: number;

  /**
   * 5 minute average
   *
   * @generated from field: double load5 = 2;
   */
  load5: number;

  /**
   * 15 minute average
   *
   * @generated from field: double load15 = 3;
   */
  load15: number;
};

/**
 * Describes the message fleetd.v1.LoadAverage.
 * Use `create(LoadAverageSchema)` to create a new message.
 */
export const LoadAverageSchema: GenMessage<LoadAverage> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_device, 3);

/**
 * @generated from message fleetd.v1.BiosInfo
 */
export type BiosInfo = Message<"fleetd.v1.BiosInfo"> & {
  /**
   * @generated from field: string vendor = 1;
   */
  vendor: string;

  /**
   * @generated from field: string version = 2;
   */
  version: string;

  /**
   * @generated from field: string release_date = 3;
   */
  releaseDate: string;
};

/**
 * Describes the message fleetd.v1.BiosInfo.
 * Use `create(BiosInfoSchema)` to create a new message.
 */
export const BiosInfoSchema: GenMessage<BiosInfo> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_device, 4);

/**
 * @generated from message fleetd.v1.RegisterRequest
 */
export type RegisterRequest = Message<"fleetd.v1.RegisterRequest"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string type = 2;
   */
  type: string;

  /**
   * @generated from field: string version = 3;
   */
  version: string;

  /**
   * @generated from field: map<string, string> capabilities = 4;
   */
  capabilities: { [key: string]: string };

  /**
   * @generated from field: fleetd.v1.SystemInfo system_info = 5;
   */
  systemInfo?: SystemInfo;
};

/**
 * Describes the message fleetd.v1.RegisterRequest.
 * Use `create(RegisterRequestSchema)` to create a new message.
 */
export const RegisterRequestSchema: GenMessage<RegisterRequest> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_device, 5);

/**
 * @generated from message fleetd.v1.RegisterResponse
 */
export type RegisterResponse = Message<"fleetd.v1.RegisterResponse"> & {
  /**
   * @generated from field: string device_id = 1;
   */
  deviceId: string;

  /**
   * @generated from field: string api_key = 2;
   */
  apiKey: string;
};

/**
 * Describes the message fleetd.v1.RegisterResponse.
 * Use `create(RegisterResponseSchema)` to create a new message.
 */
export const RegisterResponseSchema: GenMessage<RegisterResponse> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_device, 6);

/**
 * @generated from message fleetd.v1.HeartbeatRequest
 */
export type HeartbeatRequest = Message<"fleetd.v1.HeartbeatRequest"> & {
  /**
   * @generated from field: string device_id = 1;
   */
  deviceId: string;

  /**
   * @generated from field: map<string, string> metrics = 2;
   */
  metrics: { [key: string]: string };
};

/**
 * Describes the message fleetd.v1.HeartbeatRequest.
 * Use `create(HeartbeatRequestSchema)` to create a new message.
 */
export const HeartbeatRequestSchema: GenMessage<HeartbeatRequest> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_device, 7);

/**
 * @generated from message fleetd.v1.HeartbeatResponse
 */
export type HeartbeatResponse = Message<"fleetd.v1.HeartbeatResponse"> & {
  /**
   * @generated from field: bool has_update = 1;
   */
  hasUpdate: boolean;

  /**
   * @generated from field: string update_id = 2;
   */
  updateId: string;
};

/**
 * Describes the message fleetd.v1.HeartbeatResponse.
 * Use `create(HeartbeatResponseSchema)` to create a new message.
 */
export const HeartbeatResponseSchema: GenMessage<HeartbeatResponse> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_device, 8);

/**
 * @generated from message fleetd.v1.ReportStatusRequest
 */
export type ReportStatusRequest = Message<"fleetd.v1.ReportStatusRequest"> & {
  /**
   * @generated from field: string device_id = 1;
   */
  deviceId: string;

  /**
   * @generated from field: string status = 2;
   */
  status: string;

  /**
   * @generated from field: map<string, string> metrics = 3;
   */
  metrics: { [key: string]: string };
};

/**
 * Describes the message fleetd.v1.ReportStatusRequest.
 * Use `create(ReportStatusRequestSchema)` to create a new message.
 */
export const ReportStatusRequestSchema: GenMessage<ReportStatusRequest> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_device, 9);

/**
 * @generated from message fleetd.v1.ReportStatusResponse
 */
export type ReportStatusResponse = Message<"fleetd.v1.ReportStatusResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;
};

/**
 * Describes the message fleetd.v1.ReportStatusResponse.
 * Use `create(ReportStatusResponseSchema)` to create a new message.
 */
export const ReportStatusResponseSchema: GenMessage<ReportStatusResponse> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_device, 10);

/**
 * @generated from message fleetd.v1.GetDeviceRequest
 */
export type GetDeviceRequest = Message<"fleetd.v1.GetDeviceRequest"> & {
  /**
   * @generated from field: string device_id = 1;
   */
  deviceId: string;
};

/**
 * Describes the message fleetd.v1.GetDeviceRequest.
 * Use `create(GetDeviceRequestSchema)` to create a new message.
 */
export const GetDeviceRequestSchema: GenMessage<GetDeviceRequest> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_device, 11);

/**
 * @generated from message fleetd.v1.GetDeviceResponse
 */
export type GetDeviceResponse = Message<"fleetd.v1.GetDeviceResponse"> & {
  /**
   * @generated from field: fleetd.v1.Device device = 1;
   */
  device?: Device;
};

/**
 * Describes the message fleetd.v1.GetDeviceResponse.
 * Use `create(GetDeviceResponseSchema)` to create a new message.
 */
export const GetDeviceResponseSchema: GenMessage<GetDeviceResponse> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_device, 12);

/**
 * @generated from message fleetd.v1.ListDevicesRequest
 */
export type ListDevicesRequest = Message<"fleetd.v1.ListDevicesRequest"> & {
  /**
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * @generated from field: string version = 2;
   */
  version: string;

  /**
   * @generated from field: string status = 3;
   */
  status: string;

  /**
   * @generated from field: int32 page_size = 4;
   */
  pageSize: number;

  /**
   * @generated from field: string page_token = 5;
   */
  pageToken: string;
};

/**
 * Describes the message fleetd.v1.ListDevicesRequest.
 * Use `create(ListDevicesRequestSchema)` to create a new message.
 */
export const ListDevicesRequestSchema: GenMessage<ListDevicesRequest> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_device, 13);

/**
 * @generated from message fleetd.v1.ListDevicesResponse
 */
export type ListDevicesResponse = Message<"fleetd.v1.ListDevicesResponse"> & {
  /**
   * @generated from field: repeated fleetd.v1.Device devices = 1;
   */
  devices: Device[];

  /**
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message fleetd.v1.ListDevicesResponse.
 * Use `create(ListDevicesResponseSchema)` to create a new message.
 */
export const ListDevicesResponseSchema: GenMessage<ListDevicesResponse> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_device, 14);

/**
 * @generated from message fleetd.v1.DeleteDeviceRequest
 */
export type DeleteDeviceRequest = Message<"fleetd.v1.DeleteDeviceRequest"> & {
  /**
   * @generated from field: string device_id = 1;
   */
  deviceId: string;
};

/**
 * Describes the message fleetd.v1.DeleteDeviceRequest.
 * Use `create(DeleteDeviceRequestSchema)` to create a new message.
 */
export const DeleteDeviceRequestSchema: GenMessage<DeleteDeviceRequest> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_device, 15);

/**
 * @generated from message fleetd.v1.DeleteDeviceResponse
 */
export type DeleteDeviceResponse = Message<"fleetd.v1.DeleteDeviceResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;
};

/**
 * Describes the message fleetd.v1.DeleteDeviceResponse.
 * Use `create(DeleteDeviceResponseSchema)` to create a new message.
 */
export const DeleteDeviceResponseSchema: GenMessage<DeleteDeviceResponse> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_device, 16);

/**
 * @generated from service fleetd.v1.DeviceService
 */
export const DeviceService: GenService<{
  /**
   * Register a new device with the fleet
   *
   * @generated from rpc fleetd.v1.DeviceService.Register
   */
  register: {
    methodKind: "unary";
    input: typeof RegisterRequestSchema;
    output: typeof RegisterResponseSchema;
  };
  /**
   * Send periodic heartbeat and receive pending actions
   *
   * @generated from rpc fleetd.v1.DeviceService.Heartbeat
   */
  heartbeat: {
    methodKind: "unary";
    input: typeof HeartbeatRequestSchema;
    output: typeof HeartbeatResponseSchema;
  };
  /**
   * Update device status and metrics
   *
   * @generated from rpc fleetd.v1.DeviceService.ReportStatus
   */
  reportStatus: {
    methodKind: "unary";
    input: typeof ReportStatusRequestSchema;
    output: typeof ReportStatusResponseSchema;
  };
  /**
   * Get a device by ID
   *
   * @generated from rpc fleetd.v1.DeviceService.GetDevice
   */
  getDevice: {
    methodKind: "unary";
    input: typeof GetDeviceRequestSchema;
    output: typeof GetDeviceResponseSchema;
  };
  /**
   * List devices
   *
   * @generated from rpc fleetd.v1.DeviceService.ListDevices
   */
  listDevices: {
    methodKind: "unary";
    input: typeof ListDevicesRequestSchema;
    output: typeof ListDevicesResponseSchema;
  };
  /**
   * Delete a device
   *
   * @generated from rpc fleetd.v1.DeviceService.DeleteDevice
   */
  deleteDevice: {
    methodKind: "unary";
    input: typeof DeleteDeviceRequestSchema;
    output: typeof DeleteDeviceResponseSchema;
  };
}> = /*@__PURE__*/ serviceDesc(file_fleetd_v1_device, 0);
