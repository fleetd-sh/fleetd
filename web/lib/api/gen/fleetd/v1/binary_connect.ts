// @generated by protoc-gen-connect-es v1.6.1 with parameter "target=ts"
// @generated from file fleetd/v1/binary.proto (package fleetd.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import {
  DownloadBinaryRequest,
  DownloadBinaryResponse,
  GetBinaryRequest,
  GetBinaryResponse,
  ListBinariesRequest,
  ListBinariesResponse,
  UploadBinaryRequest,
  UploadBinaryResponse,
} from './binary_pb.js'
import { MethodKind } from '@bufbuild/protobuf'

/**
 * @generated from service fleetd.v1.BinaryService
 */
export const BinaryService = {
  typeName: 'fleetd.v1.BinaryService',
  methods: {
    /**
     * Upload a new binary to the fleet
     *
     * @generated from rpc fleetd.v1.BinaryService.UploadBinary
     */
    uploadBinary: {
      name: 'UploadBinary',
      I: UploadBinaryRequest,
      O: UploadBinaryResponse,
      kind: MethodKind.ClientStreaming,
    },
    /**
     * Get information about a binary
     *
     * @generated from rpc fleetd.v1.BinaryService.GetBinary
     */
    getBinary: {
      name: 'GetBinary',
      I: GetBinaryRequest,
      O: GetBinaryResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Download a binary
     *
     * @generated from rpc fleetd.v1.BinaryService.DownloadBinary
     */
    downloadBinary: {
      name: 'DownloadBinary',
      I: DownloadBinaryRequest,
      O: DownloadBinaryResponse,
      kind: MethodKind.ServerStreaming,
    },
    /**
     * List available binaries
     *
     * @generated from rpc fleetd.v1.BinaryService.ListBinaries
     */
    listBinaries: {
      name: 'ListBinaries',
      I: ListBinariesRequest,
      O: ListBinariesResponse,
      kind: MethodKind.Unary,
    },
  },
} as const
