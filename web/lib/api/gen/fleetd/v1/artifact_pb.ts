// @generated by protoc-gen-es v2.8.0 with parameter "target=ts"
// @generated from file fleetd/v1/artifact.proto (package fleetd.v1, syntax proto3)
/* eslint-disable */

import type { Message } from "@bufbuild/protobuf";
import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file fleetd/v1/artifact.proto.
 */
export const file_fleetd_v1_artifact: GenFile =
  /*@__PURE__*/
  fileDesc(
    "",
    [file_google_protobuf_timestamp],
  );

/**
 * Artifact represents a deployable software package
 *
 * @generated from message fleetd.v1.Artifact
 */
export type Artifact = Message<"fleetd.v1.Artifact"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string version = 3;
   */
  version: string;

  /**
   * @generated from field: fleetd.v1.ArtifactType type = 4;
   */
  type: ArtifactType;

  /**
   * Build information
   *
   * @generated from field: fleetd.v1.BuildInfo build_info = 5;
   */
  buildInfo?: BuildInfo;

  /**
   * Runtime requirements
   *
   * @generated from field: fleetd.v1.Requirements requirements = 6;
   */
  requirements?: Requirements;

  /**
   * Security
   *
   * @generated from field: repeated fleetd.v1.Signature signatures = 7;
   */
  signatures: Signature[];

  /**
   * @generated from field: map<string, string> checksums = 8;
   */
  checksums: { [key: string]: string };

  /**
   * Storage
   *
   * @generated from field: int64 size = 9;
   */
  size: bigint;

  /**
   * @generated from field: string storage_url = 10;
   */
  storageUrl: string;

  /**
   * Platform compatibility
   *
   * @generated from field: repeated fleetd.v1.Platform platforms = 11;
   */
  platforms: Platform[];

  /**
   * Metadata
   *
   * @generated from field: google.protobuf.Timestamp created_at = 12;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: map<string, string> labels = 13;
   */
  labels: { [key: string]: string };

  /**
   * @generated from field: string description = 14;
   */
  description: string;
};

/**
 * Describes the message fleetd.v1.Artifact.
 * Use `create(ArtifactSchema)` to create a new message.
 */
export const ArtifactSchema: GenMessage<Artifact> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 0);

/**
 * @generated from message fleetd.v1.BuildInfo
 */
export type BuildInfo = Message<"fleetd.v1.BuildInfo"> & {
  /**
   * @generated from field: string commit_sha = 1;
   */
  commitSha: string;

  /**
   * @generated from field: string branch = 2;
   */
  branch: string;

  /**
   * @generated from field: string build_number = 3;
   */
  buildNumber: string;

  /**
   * @generated from field: string builder = 4;
   */
  builder: string;

  /**
   * @generated from field: google.protobuf.Timestamp build_time = 5;
   */
  buildTime?: Timestamp;

  /**
   * @generated from field: map<string, string> build_args = 6;
   */
  buildArgs: { [key: string]: string };
};

/**
 * Describes the message fleetd.v1.BuildInfo.
 * Use `create(BuildInfoSchema)` to create a new message.
 */
export const BuildInfoSchema: GenMessage<BuildInfo> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 1);

/**
 * @generated from message fleetd.v1.Requirements
 */
export type Requirements = Message<"fleetd.v1.Requirements"> & {
  /**
   * bytes
   *
   * @generated from field: int64 min_memory = 1;
   */
  minMemory: bigint;

  /**
   * bytes
   *
   * @generated from field: int64 min_storage = 2;
   */
  minStorage: bigint;

  /**
   * @generated from field: int32 min_cpu_mhz = 3;
   */
  minCpuMhz: number;

  /**
   * "docker", "systemd", "gpu"
   *
   * @generated from field: repeated string capabilities = 4;
   */
  capabilities: string[];

  /**
   * "linux", "rtos"
   *
   * @generated from field: string os_family = 5;
   */
  osFamily: string;

  /**
   * "5.10"
   *
   * @generated from field: string min_kernel = 6;
   */
  minKernel: string;

  /**
   * ["arm64", "amd64"]
   *
   * @generated from field: repeated string architectures = 7;
   */
  architectures: string[];
};

/**
 * Describes the message fleetd.v1.Requirements.
 * Use `create(RequirementsSchema)` to create a new message.
 */
export const RequirementsSchema: GenMessage<Requirements> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 2);

/**
 * @generated from message fleetd.v1.Signature
 */
export type Signature = Message<"fleetd.v1.Signature"> & {
  /**
   * "ed25519", "rsa-sha256"
   *
   * @generated from field: string algorithm = 1;
   */
  algorithm: string;

  /**
   * @generated from field: string key_id = 2;
   */
  keyId: string;

  /**
   * @generated from field: bytes signature = 3;
   */
  signature: Uint8Array;

  /**
   * @generated from field: string signer = 4;
   */
  signer: string;
};

/**
 * Describes the message fleetd.v1.Signature.
 * Use `create(SignatureSchema)` to create a new message.
 */
export const SignatureSchema: GenMessage<Signature> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 3);

/**
 * @generated from message fleetd.v1.Platform
 */
export type Platform = Message<"fleetd.v1.Platform"> & {
  /**
   * @generated from field: string os = 1;
   */
  os: string;

  /**
   * @generated from field: string arch = 2;
   */
  arch: string;

  /**
   * "v7", "v8" for ARM
   *
   * @generated from field: string variant = 3;
   */
  variant: string;
};

/**
 * Describes the message fleetd.v1.Platform.
 * Use `create(PlatformSchema)` to create a new message.
 */
export const PlatformSchema: GenMessage<Platform> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 4);

/**
 * Application represents a complete application definition
 *
 * @generated from message fleetd.v1.Application
 */
export type Application = Message<"fleetd.v1.Application"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string version = 3;
   */
  version: string;

  /**
   * Artifacts that compose this application
   *
   * @generated from field: repeated fleetd.v1.ArtifactRef artifacts = 4;
   */
  artifacts: ArtifactRef[];

  /**
   * Execution settings
   *
   * @generated from field: repeated string args = 5;
   */
  args: string[];

  /**
   * @generated from field: map<string, string> environment = 6;
   */
  environment: { [key: string]: string };

  /**
   * @generated from field: string working_dir = 7;
   */
  workingDir: string;

  /**
   * @generated from field: fleetd.v1.RestartPolicy restart_policy = 8;
   */
  restartPolicy: RestartPolicy;

  /**
   * Configuration
   *
   * @generated from field: fleetd.v1.Configuration configuration = 9;
   */
  configuration?: Configuration;

  /**
   * Runtime settings
   *
   * @generated from field: fleetd.v1.RuntimeConfig runtime = 10;
   */
  runtime?: RuntimeConfig;

  /**
   * Health check
   *
   * @generated from field: fleetd.v1.HealthCheck health_check = 11;
   */
  healthCheck?: HealthCheck;

  /**
   * Resource limits
   *
   * @generated from field: fleetd.v1.Resources resources = 12;
   */
  resources?: Resources;

  /**
   * Placement constraints
   *
   * @generated from field: fleetd.v1.PlacementConstraints placement = 13;
   */
  placement?: PlacementConstraints;

  /**
   * Metadata
   *
   * @generated from field: google.protobuf.Timestamp created_at = 14;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 15;
   */
  updatedAt?: Timestamp;

  /**
   * @generated from field: map<string, string> labels = 16;
   */
  labels: { [key: string]: string };
};

/**
 * Describes the message fleetd.v1.Application.
 * Use `create(ApplicationSchema)` to create a new message.
 */
export const ApplicationSchema: GenMessage<Application> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 5);

/**
 * @generated from message fleetd.v1.ArtifactRef
 */
export type ArtifactRef = Message<"fleetd.v1.ArtifactRef"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string version = 2;
   */
  version: string;

  /**
   * @generated from field: fleetd.v1.ArtifactType type = 3;
   */
  type: ArtifactType;

  /**
   * @generated from field: bool required = 4;
   */
  required: boolean;
};

/**
 * Describes the message fleetd.v1.ArtifactRef.
 * Use `create(ArtifactRefSchema)` to create a new message.
 */
export const ArtifactRefSchema: GenMessage<ArtifactRef> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 6);

/**
 * @generated from message fleetd.v1.Configuration
 */
export type Configuration = Message<"fleetd.v1.Configuration"> & {
  /**
   * @generated from field: map<string, string> environment = 1;
   */
  environment: { [key: string]: string };

  /**
   * @generated from field: repeated fleetd.v1.ConfigFile files = 2;
   */
  files: ConfigFile[];

  /**
   * @generated from field: repeated string args = 3;
   */
  args: string[];

  /**
   * @generated from field: string working_dir = 4;
   */
  workingDir: string;
};

/**
 * Describes the message fleetd.v1.Configuration.
 * Use `create(ConfigurationSchema)` to create a new message.
 */
export const ConfigurationSchema: GenMessage<Configuration> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 7);

/**
 * @generated from message fleetd.v1.ConfigFile
 */
export type ConfigFile = Message<"fleetd.v1.ConfigFile"> & {
  /**
   * @generated from field: string path = 1;
   */
  path: string;

  /**
   * @generated from field: string content = 2;
   */
  content: string;

  /**
   * "0644"
   *
   * @generated from field: string mode = 3;
   */
  mode: string;
};

/**
 * Describes the message fleetd.v1.ConfigFile.
 * Use `create(ConfigFileSchema)` to create a new message.
 */
export const ConfigFileSchema: GenMessage<ConfigFile> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 8);

/**
 * @generated from message fleetd.v1.RuntimeConfig
 */
export type RuntimeConfig = Message<"fleetd.v1.RuntimeConfig"> & {
  /**
   * @generated from field: fleetd.v1.RuntimeType type = 1;
   */
  type: RuntimeType;

  /**
   * @generated from field: fleetd.v1.RestartPolicy restart_policy = 2;
   */
  restartPolicy: RestartPolicy;

  /**
   * @generated from field: int32 startup_timeout_seconds = 3;
   */
  startupTimeoutSeconds: number;

  /**
   * @generated from field: int32 stop_timeout_seconds = 4;
   */
  stopTimeoutSeconds: number;

  /**
   * @generated from field: string user = 5;
   */
  user: string;

  /**
   * @generated from field: string group = 6;
   */
  group: string;
};

/**
 * Describes the message fleetd.v1.RuntimeConfig.
 * Use `create(RuntimeConfigSchema)` to create a new message.
 */
export const RuntimeConfigSchema: GenMessage<RuntimeConfig> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 9);

/**
 * @generated from message fleetd.v1.HealthCheck
 */
export type HealthCheck = Message<"fleetd.v1.HealthCheck"> & {
  /**
   * @generated from oneof fleetd.v1.HealthCheck.check
   */
  check:
    | {
        /**
         * @generated from field: fleetd.v1.HTTPHealthCheck http = 1;
         */
        value: HTTPHealthCheck;
        case: "http";
      }
    | {
        /**
         * @generated from field: fleetd.v1.TCPHealthCheck tcp = 2;
         */
        value: TCPHealthCheck;
        case: "tcp";
      }
    | {
        /**
         * @generated from field: fleetd.v1.ExecHealthCheck exec = 3;
         */
        value: ExecHealthCheck;
        case: "exec";
      }
    | { case: undefined; value?: undefined };

  /**
   * @generated from field: int32 interval_seconds = 4;
   */
  intervalSeconds: number;

  /**
   * @generated from field: int32 timeout_seconds = 5;
   */
  timeoutSeconds: number;

  /**
   * @generated from field: int32 retries = 6;
   */
  retries: number;

  /**
   * @generated from field: int32 start_period_seconds = 7;
   */
  startPeriodSeconds: number;
};

/**
 * Describes the message fleetd.v1.HealthCheck.
 * Use `create(HealthCheckSchema)` to create a new message.
 */
export const HealthCheckSchema: GenMessage<HealthCheck> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 10);

/**
 * @generated from message fleetd.v1.HTTPHealthCheck
 */
export type HTTPHealthCheck = Message<"fleetd.v1.HTTPHealthCheck"> & {
  /**
   * @generated from field: string path = 1;
   */
  path: string;

  /**
   * @generated from field: int32 port = 2;
   */
  port: number;

  /**
   * "http" or "https"
   *
   * @generated from field: string scheme = 3;
   */
  scheme: string;

  /**
   * @generated from field: map<string, string> headers = 4;
   */
  headers: { [key: string]: string };
};

/**
 * Describes the message fleetd.v1.HTTPHealthCheck.
 * Use `create(HTTPHealthCheckSchema)` to create a new message.
 */
export const HTTPHealthCheckSchema: GenMessage<HTTPHealthCheck> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 11);

/**
 * @generated from message fleetd.v1.TCPHealthCheck
 */
export type TCPHealthCheck = Message<"fleetd.v1.TCPHealthCheck"> & {
  /**
   * @generated from field: int32 port = 1;
   */
  port: number;
};

/**
 * Describes the message fleetd.v1.TCPHealthCheck.
 * Use `create(TCPHealthCheckSchema)` to create a new message.
 */
export const TCPHealthCheckSchema: GenMessage<TCPHealthCheck> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 12);

/**
 * @generated from message fleetd.v1.ExecHealthCheck
 */
export type ExecHealthCheck = Message<"fleetd.v1.ExecHealthCheck"> & {
  /**
   * @generated from field: repeated string command = 1;
   */
  command: string[];
};

/**
 * Describes the message fleetd.v1.ExecHealthCheck.
 * Use `create(ExecHealthCheckSchema)` to create a new message.
 */
export const ExecHealthCheckSchema: GenMessage<ExecHealthCheck> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 13);

/**
 * @generated from message fleetd.v1.Resources
 */
export type Resources = Message<"fleetd.v1.Resources"> & {
  /**
   * @generated from field: fleetd.v1.ResourceSpec limits = 1;
   */
  limits?: ResourceSpec;

  /**
   * @generated from field: fleetd.v1.ResourceSpec requests = 2;
   */
  requests?: ResourceSpec;
};

/**
 * Describes the message fleetd.v1.Resources.
 * Use `create(ResourcesSchema)` to create a new message.
 */
export const ResourcesSchema: GenMessage<Resources> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 14);

/**
 * @generated from message fleetd.v1.ResourceSpec
 */
export type ResourceSpec = Message<"fleetd.v1.ResourceSpec"> & {
  /**
   * bytes
   *
   * @generated from field: int64 memory = 1;
   */
  memory: bigint;

  /**
   * 1000 = 1 CPU
   *
   * @generated from field: int32 cpu_millicores = 2;
   */
  cpuMillicores: number;

  /**
   * bytes
   *
   * @generated from field: int64 storage = 3;
   */
  storage: bigint;

  /**
   * @generated from field: int32 gpu_count = 4;
   */
  gpuCount: number;

  /**
   * max open files
   *
   * @generated from field: int32 file_descriptors = 5;
   */
  fileDescriptors: number;
};

/**
 * Describes the message fleetd.v1.ResourceSpec.
 * Use `create(ResourceSpecSchema)` to create a new message.
 */
export const ResourceSpecSchema: GenMessage<ResourceSpec> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 15);

/**
 * @generated from message fleetd.v1.PlacementConstraints
 */
export type PlacementConstraints = Message<"fleetd.v1.PlacementConstraints"> & {
  /**
   * @generated from field: map<string, string> device_selector = 1;
   */
  deviceSelector: { [key: string]: string };

  /**
   * @generated from field: repeated fleetd.v1.NodeAffinity node_affinities = 2;
   */
  nodeAffinities: NodeAffinity[];

  /**
   * @generated from field: repeated string required_capabilities = 3;
   */
  requiredCapabilities: string[];
};

/**
 * Describes the message fleetd.v1.PlacementConstraints.
 * Use `create(PlacementConstraintsSchema)` to create a new message.
 */
export const PlacementConstraintsSchema: GenMessage<PlacementConstraints> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 16);

/**
 * @generated from message fleetd.v1.NodeAffinity
 */
export type NodeAffinity = Message<"fleetd.v1.NodeAffinity"> & {
  /**
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * "In", "NotIn", "Exists", "DoesNotExist"
   *
   * @generated from field: string operator = 2;
   */
  operator: string;

  /**
   * @generated from field: repeated string values = 3;
   */
  values: string[];
};

/**
 * Describes the message fleetd.v1.NodeAffinity.
 * Use `create(NodeAffinitySchema)` to create a new message.
 */
export const NodeAffinitySchema: GenMessage<NodeAffinity> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 17);

/**
 * Deployment represents a software rollout to devices
 *
 * @generated from message fleetd.v1.Deployment
 */
export type Deployment = Message<"fleetd.v1.Deployment"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string application_id = 2;
   */
  applicationId: string;

  /**
   * @generated from field: string version = 3;
   */
  version: string;

  /**
   * Target devices
   *
   * @generated from field: fleetd.v1.DeploymentTarget target = 4;
   */
  target?: DeploymentTarget;

  /**
   * Deployment strategy
   *
   * @generated from field: fleetd.v1.DeploymentStrategy strategy = 5;
   */
  strategy?: DeploymentStrategy;

  /**
   * Current status
   *
   * @generated from field: fleetd.v1.DeploymentStatus status = 6;
   */
  status: DeploymentStatus;

  /**
   * Rollback configuration
   *
   * @generated from field: fleetd.v1.RollbackConfig rollback = 7;
   */
  rollback?: RollbackConfig;

  /**
   * Timestamps
   *
   * @generated from field: google.protobuf.Timestamp created_at = 8;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp started_at = 9;
   */
  startedAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp completed_at = 10;
   */
  completedAt?: Timestamp;

  /**
   * Results
   *
   * @generated from field: fleetd.v1.DeploymentResult result = 11;
   */
  result?: DeploymentResult;
};

/**
 * Describes the message fleetd.v1.Deployment.
 * Use `create(DeploymentSchema)` to create a new message.
 */
export const DeploymentSchema: GenMessage<Deployment> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 18);

/**
 * @generated from message fleetd.v1.DeploymentTarget
 */
export type DeploymentTarget = Message<"fleetd.v1.DeploymentTarget"> & {
  /**
   * @generated from field: repeated string device_ids = 1;
   */
  deviceIds: string[];

  /**
   * @generated from field: repeated string group_ids = 2;
   */
  groupIds: string[];

  /**
   * @generated from field: map<string, string> selector = 3;
   */
  selector: { [key: string]: string };

  /**
   * @generated from field: int32 max_devices = 4;
   */
  maxDevices: number;
};

/**
 * Describes the message fleetd.v1.DeploymentTarget.
 * Use `create(DeploymentTargetSchema)` to create a new message.
 */
export const DeploymentTargetSchema: GenMessage<DeploymentTarget> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 19);

/**
 * @generated from message fleetd.v1.DeploymentStrategy
 */
export type DeploymentStrategy = Message<"fleetd.v1.DeploymentStrategy"> & {
  /**
   * @generated from oneof fleetd.v1.DeploymentStrategy.strategy
   */
  strategy:
    | {
        /**
         * @generated from field: fleetd.v1.CanaryStrategy canary = 1;
         */
        value: CanaryStrategy;
        case: "canary";
      }
    | {
        /**
         * @generated from field: fleetd.v1.RollingUpdateStrategy rolling = 2;
         */
        value: RollingUpdateStrategy;
        case: "rolling";
      }
    | {
        /**
         * @generated from field: fleetd.v1.BlueGreenStrategy blue_green = 3;
         */
        value: BlueGreenStrategy;
        case: "blueGreen";
      }
    | {
        /**
         * @generated from field: fleetd.v1.AllAtOnceStrategy all_at_once = 4;
         */
        value: AllAtOnceStrategy;
        case: "allAtOnce";
      }
    | { case: undefined; value?: undefined };
};

/**
 * Describes the message fleetd.v1.DeploymentStrategy.
 * Use `create(DeploymentStrategySchema)` to create a new message.
 */
export const DeploymentStrategySchema: GenMessage<DeploymentStrategy> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 20);

/**
 * @generated from message fleetd.v1.CanaryStrategy
 */
export type CanaryStrategy = Message<"fleetd.v1.CanaryStrategy"> & {
  /**
   * @generated from field: int32 initial_percentage = 1;
   */
  initialPercentage: number;

  /**
   * @generated from field: int32 increment_percentage = 2;
   */
  incrementPercentage: number;

  /**
   * @generated from field: int32 increment_interval_seconds = 3;
   */
  incrementIntervalSeconds: number;

  /**
   * @generated from field: fleetd.v1.SuccessCriteria success_criteria = 4;
   */
  successCriteria?: SuccessCriteria;
};

/**
 * Describes the message fleetd.v1.CanaryStrategy.
 * Use `create(CanaryStrategySchema)` to create a new message.
 */
export const CanaryStrategySchema: GenMessage<CanaryStrategy> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 21);

/**
 * @generated from message fleetd.v1.RollingUpdateStrategy
 */
export type RollingUpdateStrategy = Message<"fleetd.v1.RollingUpdateStrategy"> & {
  /**
   * @generated from field: int32 max_unavailable = 1;
   */
  maxUnavailable: number;

  /**
   * @generated from field: int32 max_surge = 2;
   */
  maxSurge: number;

  /**
   * @generated from field: int32 batch_size = 3;
   */
  batchSize: number;

  /**
   * @generated from field: int32 batch_interval_seconds = 4;
   */
  batchIntervalSeconds: number;
};

/**
 * Describes the message fleetd.v1.RollingUpdateStrategy.
 * Use `create(RollingUpdateStrategySchema)` to create a new message.
 */
export const RollingUpdateStrategySchema: GenMessage<RollingUpdateStrategy> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 22);

/**
 * @generated from message fleetd.v1.BlueGreenStrategy
 */
export type BlueGreenStrategy = Message<"fleetd.v1.BlueGreenStrategy"> & {
  /**
   * @generated from field: int32 traffic_switch_delay_seconds = 1;
   */
  trafficSwitchDelaySeconds: number;

  /**
   * @generated from field: int32 validation_period_seconds = 2;
   */
  validationPeriodSeconds: number;

  /**
   * @generated from field: bool auto_promote = 3;
   */
  autoPromote: boolean;
};

/**
 * Describes the message fleetd.v1.BlueGreenStrategy.
 * Use `create(BlueGreenStrategySchema)` to create a new message.
 */
export const BlueGreenStrategySchema: GenMessage<BlueGreenStrategy> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 23);

/**
 * @generated from message fleetd.v1.AllAtOnceStrategy
 */
export type AllAtOnceStrategy = Message<"fleetd.v1.AllAtOnceStrategy"> & {
  /**
   * @generated from field: int32 timeout_seconds = 1;
   */
  timeoutSeconds: number;
};

/**
 * Describes the message fleetd.v1.AllAtOnceStrategy.
 * Use `create(AllAtOnceStrategySchema)` to create a new message.
 */
export const AllAtOnceStrategySchema: GenMessage<AllAtOnceStrategy> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 24);

/**
 * @generated from message fleetd.v1.SuccessCriteria
 */
export type SuccessCriteria = Message<"fleetd.v1.SuccessCriteria"> & {
  /**
   * 0.95 = 95%
   *
   * @generated from field: float min_success_rate = 1;
   */
  minSuccessRate: number;

  /**
   * @generated from field: int32 min_healthy_seconds = 2;
   */
  minHealthySeconds: number;

  /**
   * @generated from field: float max_error_rate = 3;
   */
  maxErrorRate: number;
};

/**
 * Describes the message fleetd.v1.SuccessCriteria.
 * Use `create(SuccessCriteriaSchema)` to create a new message.
 */
export const SuccessCriteriaSchema: GenMessage<SuccessCriteria> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 25);

/**
 * @generated from message fleetd.v1.RollbackConfig
 */
export type RollbackConfig = Message<"fleetd.v1.RollbackConfig"> & {
  /**
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;

  /**
   * @generated from field: repeated fleetd.v1.RollbackTrigger triggers = 2;
   */
  triggers: RollbackTrigger[];

  /**
   * @generated from field: string fallback_version = 3;
   */
  fallbackVersion: string;
};

/**
 * Describes the message fleetd.v1.RollbackConfig.
 * Use `create(RollbackConfigSchema)` to create a new message.
 */
export const RollbackConfigSchema: GenMessage<RollbackConfig> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 26);

/**
 * @generated from message fleetd.v1.RollbackTrigger
 */
export type RollbackTrigger = Message<"fleetd.v1.RollbackTrigger"> & {
  /**
   * @generated from field: fleetd.v1.TriggerType type = 1;
   */
  type: TriggerType;

  /**
   * @generated from field: float threshold = 2;
   */
  threshold: number;

  /**
   * @generated from field: int32 duration_seconds = 3;
   */
  durationSeconds: number;
};

/**
 * Describes the message fleetd.v1.RollbackTrigger.
 * Use `create(RollbackTriggerSchema)` to create a new message.
 */
export const RollbackTriggerSchema: GenMessage<RollbackTrigger> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 27);

/**
 * @generated from message fleetd.v1.DeploymentResult
 */
export type DeploymentResult = Message<"fleetd.v1.DeploymentResult"> & {
  /**
   * @generated from field: int32 total_devices = 1;
   */
  totalDevices: number;

  /**
   * @generated from field: int32 succeeded = 2;
   */
  succeeded: number;

  /**
   * @generated from field: int32 failed = 3;
   */
  failed: number;

  /**
   * @generated from field: int32 in_progress = 4;
   */
  inProgress: number;

  /**
   * @generated from field: repeated fleetd.v1.DeviceDeploymentStatus device_statuses = 5;
   */
  deviceStatuses: DeviceDeploymentStatus[];
};

/**
 * Describes the message fleetd.v1.DeploymentResult.
 * Use `create(DeploymentResultSchema)` to create a new message.
 */
export const DeploymentResultSchema: GenMessage<DeploymentResult> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 28);

/**
 * @generated from message fleetd.v1.DeviceDeploymentStatus
 */
export type DeviceDeploymentStatus = Message<"fleetd.v1.DeviceDeploymentStatus"> & {
  /**
   * @generated from field: string device_id = 1;
   */
  deviceId: string;

  /**
   * @generated from field: fleetd.v1.DeploymentStatus status = 2;
   */
  status: DeploymentStatus;

  /**
   * @generated from field: string message = 3;
   */
  message: string;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 4;
   */
  updatedAt?: Timestamp;
};

/**
 * Describes the message fleetd.v1.DeviceDeploymentStatus.
 * Use `create(DeviceDeploymentStatusSchema)` to create a new message.
 */
export const DeviceDeploymentStatusSchema: GenMessage<DeviceDeploymentStatus> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 29);

/**
 * Process monitoring
 *
 * @generated from message fleetd.v1.ProcessStatus
 */
export type ProcessStatus = Message<"fleetd.v1.ProcessStatus"> & {
  /**
   * @generated from field: string app_id = 1;
   */
  appId: string;

  /**
   * @generated from field: string device_id = 2;
   */
  deviceId: string;

  /**
   * @generated from field: int32 pid = 3;
   */
  pid: number;

  /**
   * @generated from field: fleetd.v1.ProcessState state = 4;
   */
  state: ProcessState;

  /**
   * @generated from field: int32 restart_count = 5;
   */
  restartCount: number;

  /**
   * @generated from field: int64 uptime_seconds = 6;
   */
  uptimeSeconds: bigint;

  /**
   * Resource usage
   *
   * @generated from field: float cpu_percent = 7;
   */
  cpuPercent: number;

  /**
   * @generated from field: int64 memory_bytes = 8;
   */
  memoryBytes: bigint;

  /**
   * @generated from field: int64 disk_read_bytes = 9;
   */
  diskReadBytes: bigint;

  /**
   * @generated from field: int64 disk_write_bytes = 10;
   */
  diskWriteBytes: bigint;

  /**
   * Health
   *
   * @generated from field: bool healthy = 11;
   */
  healthy: boolean;

  /**
   * @generated from field: string health_message = 12;
   */
  healthMessage: string;

  /**
   * @generated from field: google.protobuf.Timestamp started_at = 13;
   */
  startedAt?: Timestamp;
};

/**
 * Describes the message fleetd.v1.ProcessStatus.
 * Use `create(ProcessStatusSchema)` to create a new message.
 */
export const ProcessStatusSchema: GenMessage<ProcessStatus> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 30);

/**
 * RPC Messages
 *
 * @generated from message fleetd.v1.UploadArtifactRequest
 */
export type UploadArtifactRequest = Message<"fleetd.v1.UploadArtifactRequest"> & {
  /**
   * @generated from oneof fleetd.v1.UploadArtifactRequest.data
   */
  data:
    | {
        /**
         * @generated from field: fleetd.v1.ArtifactMetadata metadata = 1;
         */
        value: ArtifactMetadata;
        case: "metadata";
      }
    | {
        /**
         * @generated from field: bytes chunk = 2;
         */
        value: Uint8Array;
        case: "chunk";
      }
    | { case: undefined; value?: undefined };
};

/**
 * Describes the message fleetd.v1.UploadArtifactRequest.
 * Use `create(UploadArtifactRequestSchema)` to create a new message.
 */
export const UploadArtifactRequestSchema: GenMessage<UploadArtifactRequest> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 31);

/**
 * @generated from message fleetd.v1.ArtifactMetadata
 */
export type ArtifactMetadata = Message<"fleetd.v1.ArtifactMetadata"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string version = 2;
   */
  version: string;

  /**
   * @generated from field: fleetd.v1.ArtifactType type = 3;
   */
  type: ArtifactType;

  /**
   * @generated from field: repeated fleetd.v1.Platform platforms = 4;
   */
  platforms: Platform[];

  /**
   * @generated from field: map<string, string> labels = 5;
   */
  labels: { [key: string]: string };

  /**
   * @generated from field: fleetd.v1.BuildInfo build_info = 6;
   */
  buildInfo?: BuildInfo;

  /**
   * @generated from field: fleetd.v1.Requirements requirements = 7;
   */
  requirements?: Requirements;
};

/**
 * Describes the message fleetd.v1.ArtifactMetadata.
 * Use `create(ArtifactMetadataSchema)` to create a new message.
 */
export const ArtifactMetadataSchema: GenMessage<ArtifactMetadata> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 32);

/**
 * @generated from message fleetd.v1.UploadArtifactResponse
 */
export type UploadArtifactResponse = Message<"fleetd.v1.UploadArtifactResponse"> & {
  /**
   * @generated from field: string artifact_id = 1;
   */
  artifactId: string;

  /**
   * @generated from field: string download_url = 2;
   */
  downloadUrl: string;

  /**
   * @generated from field: map<string, string> checksums = 3;
   */
  checksums: { [key: string]: string };
};

/**
 * Describes the message fleetd.v1.UploadArtifactResponse.
 * Use `create(UploadArtifactResponseSchema)` to create a new message.
 */
export const UploadArtifactResponseSchema: GenMessage<UploadArtifactResponse> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 33);

/**
 * @generated from message fleetd.v1.GetArtifactRequest
 */
export type GetArtifactRequest = Message<"fleetd.v1.GetArtifactRequest"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string version = 2;
   */
  version: string;
};

/**
 * Describes the message fleetd.v1.GetArtifactRequest.
 * Use `create(GetArtifactRequestSchema)` to create a new message.
 */
export const GetArtifactRequestSchema: GenMessage<GetArtifactRequest> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 34);

/**
 * @generated from message fleetd.v1.GetArtifactResponse
 */
export type GetArtifactResponse = Message<"fleetd.v1.GetArtifactResponse"> & {
  /**
   * @generated from field: fleetd.v1.Artifact artifact = 1;
   */
  artifact?: Artifact;
};

/**
 * Describes the message fleetd.v1.GetArtifactResponse.
 * Use `create(GetArtifactResponseSchema)` to create a new message.
 */
export const GetArtifactResponseSchema: GenMessage<GetArtifactResponse> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 35);

/**
 * @generated from message fleetd.v1.ListArtifactsRequest
 */
export type ListArtifactsRequest = Message<"fleetd.v1.ListArtifactsRequest"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: map<string, string> labels = 2;
   */
  labels: { [key: string]: string };

  /**
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * @generated from field: string page_token = 4;
   */
  pageToken: string;
};

/**
 * Describes the message fleetd.v1.ListArtifactsRequest.
 * Use `create(ListArtifactsRequestSchema)` to create a new message.
 */
export const ListArtifactsRequestSchema: GenMessage<ListArtifactsRequest> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 36);

/**
 * @generated from message fleetd.v1.ListArtifactsResponse
 */
export type ListArtifactsResponse = Message<"fleetd.v1.ListArtifactsResponse"> & {
  /**
   * @generated from field: repeated fleetd.v1.Artifact artifacts = 1;
   */
  artifacts: Artifact[];

  /**
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message fleetd.v1.ListArtifactsResponse.
 * Use `create(ListArtifactsResponseSchema)` to create a new message.
 */
export const ListArtifactsResponseSchema: GenMessage<ListArtifactsResponse> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 37);

/**
 * @generated from message fleetd.v1.DeleteArtifactRequest
 */
export type DeleteArtifactRequest = Message<"fleetd.v1.DeleteArtifactRequest"> & {
  /**
   * @generated from field: string artifact_id = 1;
   */
  artifactId: string;
};

/**
 * Describes the message fleetd.v1.DeleteArtifactRequest.
 * Use `create(DeleteArtifactRequestSchema)` to create a new message.
 */
export const DeleteArtifactRequestSchema: GenMessage<DeleteArtifactRequest> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 38);

/**
 * @generated from message fleetd.v1.DeleteArtifactResponse
 */
export type DeleteArtifactResponse = Message<"fleetd.v1.DeleteArtifactResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;
};

/**
 * Describes the message fleetd.v1.DeleteArtifactResponse.
 * Use `create(DeleteArtifactResponseSchema)` to create a new message.
 */
export const DeleteArtifactResponseSchema: GenMessage<DeleteArtifactResponse> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 39);

/**
 * @generated from message fleetd.v1.GetDownloadURLRequest
 */
export type GetDownloadURLRequest = Message<"fleetd.v1.GetDownloadURLRequest"> & {
  /**
   * @generated from field: string artifact_id = 1;
   */
  artifactId: string;

  /**
   * @generated from field: string device_id = 2;
   */
  deviceId: string;

  /**
   * @generated from field: int32 expiry_seconds = 3;
   */
  expirySeconds: number;
};

/**
 * Describes the message fleetd.v1.GetDownloadURLRequest.
 * Use `create(GetDownloadURLRequestSchema)` to create a new message.
 */
export const GetDownloadURLRequestSchema: GenMessage<GetDownloadURLRequest> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 40);

/**
 * @generated from message fleetd.v1.GetDownloadURLResponse
 */
export type GetDownloadURLResponse = Message<"fleetd.v1.GetDownloadURLResponse"> & {
  /**
   * @generated from field: string url = 1;
   */
  url: string;

  /**
   * @generated from field: google.protobuf.Timestamp expires_at = 2;
   */
  expiresAt?: Timestamp;

  /**
   * For authentication
   *
   * @generated from field: map<string, string> headers = 3;
   */
  headers: { [key: string]: string };
};

/**
 * Describes the message fleetd.v1.GetDownloadURLResponse.
 * Use `create(GetDownloadURLResponseSchema)` to create a new message.
 */
export const GetDownloadURLResponseSchema: GenMessage<GetDownloadURLResponse> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 41);

/**
 * @generated from message fleetd.v1.CreateApplicationRequest
 */
export type CreateApplicationRequest = Message<"fleetd.v1.CreateApplicationRequest"> & {
  /**
   * @generated from field: fleetd.v1.Application application = 1;
   */
  application?: Application;
};

/**
 * Describes the message fleetd.v1.CreateApplicationRequest.
 * Use `create(CreateApplicationRequestSchema)` to create a new message.
 */
export const CreateApplicationRequestSchema: GenMessage<CreateApplicationRequest> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 42);

/**
 * @generated from message fleetd.v1.CreateApplicationResponse
 */
export type CreateApplicationResponse = Message<"fleetd.v1.CreateApplicationResponse"> & {
  /**
   * @generated from field: string application_id = 1;
   */
  applicationId: string;
};

/**
 * Describes the message fleetd.v1.CreateApplicationResponse.
 * Use `create(CreateApplicationResponseSchema)` to create a new message.
 */
export const CreateApplicationResponseSchema: GenMessage<CreateApplicationResponse> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 43);

/**
 * @generated from message fleetd.v1.GetApplicationRequest
 */
export type GetApplicationRequest = Message<"fleetd.v1.GetApplicationRequest"> & {
  /**
   * @generated from field: string application_id = 1;
   */
  applicationId: string;
};

/**
 * Describes the message fleetd.v1.GetApplicationRequest.
 * Use `create(GetApplicationRequestSchema)` to create a new message.
 */
export const GetApplicationRequestSchema: GenMessage<GetApplicationRequest> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 44);

/**
 * @generated from message fleetd.v1.GetApplicationResponse
 */
export type GetApplicationResponse = Message<"fleetd.v1.GetApplicationResponse"> & {
  /**
   * @generated from field: fleetd.v1.Application application = 1;
   */
  application?: Application;
};

/**
 * Describes the message fleetd.v1.GetApplicationResponse.
 * Use `create(GetApplicationResponseSchema)` to create a new message.
 */
export const GetApplicationResponseSchema: GenMessage<GetApplicationResponse> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 45);

/**
 * @generated from message fleetd.v1.ListApplicationsRequest
 */
export type ListApplicationsRequest = Message<"fleetd.v1.ListApplicationsRequest"> & {
  /**
   * @generated from field: map<string, string> labels = 1;
   */
  labels: { [key: string]: string };

  /**
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message fleetd.v1.ListApplicationsRequest.
 * Use `create(ListApplicationsRequestSchema)` to create a new message.
 */
export const ListApplicationsRequestSchema: GenMessage<ListApplicationsRequest> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 46);

/**
 * @generated from message fleetd.v1.ListApplicationsResponse
 */
export type ListApplicationsResponse = Message<"fleetd.v1.ListApplicationsResponse"> & {
  /**
   * @generated from field: repeated fleetd.v1.Application applications = 1;
   */
  applications: Application[];

  /**
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message fleetd.v1.ListApplicationsResponse.
 * Use `create(ListApplicationsResponseSchema)` to create a new message.
 */
export const ListApplicationsResponseSchema: GenMessage<ListApplicationsResponse> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 47);

/**
 * @generated from message fleetd.v1.DeleteApplicationRequest
 */
export type DeleteApplicationRequest = Message<"fleetd.v1.DeleteApplicationRequest"> & {
  /**
   * @generated from field: string application_id = 1;
   */
  applicationId: string;
};

/**
 * Describes the message fleetd.v1.DeleteApplicationRequest.
 * Use `create(DeleteApplicationRequestSchema)` to create a new message.
 */
export const DeleteApplicationRequestSchema: GenMessage<DeleteApplicationRequest> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 48);

/**
 * @generated from message fleetd.v1.DeleteApplicationResponse
 */
export type DeleteApplicationResponse = Message<"fleetd.v1.DeleteApplicationResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;
};

/**
 * Describes the message fleetd.v1.DeleteApplicationResponse.
 * Use `create(DeleteApplicationResponseSchema)` to create a new message.
 */
export const DeleteApplicationResponseSchema: GenMessage<DeleteApplicationResponse> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 49);

/**
 * @generated from message fleetd.v1.CreateDeploymentRequest
 */
export type CreateDeploymentRequest = Message<"fleetd.v1.CreateDeploymentRequest"> & {
  /**
   * @generated from field: fleetd.v1.Deployment deployment = 1;
   */
  deployment?: Deployment;
};

/**
 * Describes the message fleetd.v1.CreateDeploymentRequest.
 * Use `create(CreateDeploymentRequestSchema)` to create a new message.
 */
export const CreateDeploymentRequestSchema: GenMessage<CreateDeploymentRequest> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 50);

/**
 * @generated from message fleetd.v1.CreateDeploymentResponse
 */
export type CreateDeploymentResponse = Message<"fleetd.v1.CreateDeploymentResponse"> & {
  /**
   * @generated from field: string deployment_id = 1;
   */
  deploymentId: string;
};

/**
 * Describes the message fleetd.v1.CreateDeploymentResponse.
 * Use `create(CreateDeploymentResponseSchema)` to create a new message.
 */
export const CreateDeploymentResponseSchema: GenMessage<CreateDeploymentResponse> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 51);

/**
 * @generated from message fleetd.v1.GetDeploymentRequest
 */
export type GetDeploymentRequest = Message<"fleetd.v1.GetDeploymentRequest"> & {
  /**
   * @generated from field: string deployment_id = 1;
   */
  deploymentId: string;
};

/**
 * Describes the message fleetd.v1.GetDeploymentRequest.
 * Use `create(GetDeploymentRequestSchema)` to create a new message.
 */
export const GetDeploymentRequestSchema: GenMessage<GetDeploymentRequest> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 52);

/**
 * @generated from message fleetd.v1.GetDeploymentResponse
 */
export type GetDeploymentResponse = Message<"fleetd.v1.GetDeploymentResponse"> & {
  /**
   * @generated from field: fleetd.v1.Deployment deployment = 1;
   */
  deployment?: Deployment;
};

/**
 * Describes the message fleetd.v1.GetDeploymentResponse.
 * Use `create(GetDeploymentResponseSchema)` to create a new message.
 */
export const GetDeploymentResponseSchema: GenMessage<GetDeploymentResponse> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 53);

/**
 * @generated from message fleetd.v1.ListDeploymentsRequest
 */
export type ListDeploymentsRequest = Message<"fleetd.v1.ListDeploymentsRequest"> & {
  /**
   * @generated from field: string application_id = 1;
   */
  applicationId: string;

  /**
   * @generated from field: fleetd.v1.DeploymentStatus status = 2;
   */
  status: DeploymentStatus;

  /**
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * @generated from field: string page_token = 4;
   */
  pageToken: string;
};

/**
 * Describes the message fleetd.v1.ListDeploymentsRequest.
 * Use `create(ListDeploymentsRequestSchema)` to create a new message.
 */
export const ListDeploymentsRequestSchema: GenMessage<ListDeploymentsRequest> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 54);

/**
 * @generated from message fleetd.v1.ListDeploymentsResponse
 */
export type ListDeploymentsResponse = Message<"fleetd.v1.ListDeploymentsResponse"> & {
  /**
   * @generated from field: repeated fleetd.v1.Deployment deployments = 1;
   */
  deployments: Deployment[];

  /**
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message fleetd.v1.ListDeploymentsResponse.
 * Use `create(ListDeploymentsResponseSchema)` to create a new message.
 */
export const ListDeploymentsResponseSchema: GenMessage<ListDeploymentsResponse> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 55);

/**
 * @generated from message fleetd.v1.CancelDeploymentRequest
 */
export type CancelDeploymentRequest = Message<"fleetd.v1.CancelDeploymentRequest"> & {
  /**
   * @generated from field: string deployment_id = 1;
   */
  deploymentId: string;

  /**
   * @generated from field: bool rollback = 2;
   */
  rollback: boolean;
};

/**
 * Describes the message fleetd.v1.CancelDeploymentRequest.
 * Use `create(CancelDeploymentRequestSchema)` to create a new message.
 */
export const CancelDeploymentRequestSchema: GenMessage<CancelDeploymentRequest> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 56);

/**
 * @generated from message fleetd.v1.CancelDeploymentResponse
 */
export type CancelDeploymentResponse = Message<"fleetd.v1.CancelDeploymentResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;
};

/**
 * Describes the message fleetd.v1.CancelDeploymentResponse.
 * Use `create(CancelDeploymentResponseSchema)` to create a new message.
 */
export const CancelDeploymentResponseSchema: GenMessage<CancelDeploymentResponse> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 57);

/**
 * @generated from message fleetd.v1.GetDeploymentMetricsRequest
 */
export type GetDeploymentMetricsRequest = Message<"fleetd.v1.GetDeploymentMetricsRequest"> & {
  /**
   * @generated from field: string deployment_id = 1;
   */
  deploymentId: string;

  /**
   * @generated from field: google.protobuf.Timestamp start_time = 2;
   */
  startTime?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp end_time = 3;
   */
  endTime?: Timestamp;
};

/**
 * Describes the message fleetd.v1.GetDeploymentMetricsRequest.
 * Use `create(GetDeploymentMetricsRequestSchema)` to create a new message.
 */
export const GetDeploymentMetricsRequestSchema: GenMessage<GetDeploymentMetricsRequest> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 58);

/**
 * @generated from message fleetd.v1.GetDeploymentMetricsResponse
 */
export type GetDeploymentMetricsResponse = Message<"fleetd.v1.GetDeploymentMetricsResponse"> & {
  /**
   * @generated from field: repeated fleetd.v1.DeploymentMetric metrics = 1;
   */
  metrics: DeploymentMetric[];
};

/**
 * Describes the message fleetd.v1.GetDeploymentMetricsResponse.
 * Use `create(GetDeploymentMetricsResponseSchema)` to create a new message.
 */
export const GetDeploymentMetricsResponseSchema: GenMessage<GetDeploymentMetricsResponse> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 59);

/**
 * @generated from message fleetd.v1.DeploymentMetric
 */
export type DeploymentMetric = Message<"fleetd.v1.DeploymentMetric"> & {
  /**
   * @generated from field: google.protobuf.Timestamp timestamp = 1;
   */
  timestamp?: Timestamp;

  /**
   * @generated from field: float success_rate = 2;
   */
  successRate: number;

  /**
   * @generated from field: float error_rate = 3;
   */
  errorRate: number;

  /**
   * @generated from field: int32 devices_updated = 4;
   */
  devicesUpdated: number;

  /**
   * @generated from field: int32 devices_failed = 5;
   */
  devicesFailed: number;

  /**
   * @generated from field: float avg_deployment_time = 6;
   */
  avgDeploymentTime: number;
};

/**
 * Describes the message fleetd.v1.DeploymentMetric.
 * Use `create(DeploymentMetricSchema)` to create a new message.
 */
export const DeploymentMetricSchema: GenMessage<DeploymentMetric> =
  /*@__PURE__*/
  messageDesc(file_fleetd_v1_artifact, 60);

/**
 * Artifact types
 *
 * @generated from enum fleetd.v1.ArtifactType
 */
export enum ArtifactType {
  /**
   * @generated from enum value: ARTIFACT_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Standalone executable
   *
   * @generated from enum value: ARTIFACT_TYPE_BINARY = 1;
   */
  BINARY = 1,

  /**
   * Docker/Podman container
   *
   * @generated from enum value: ARTIFACT_TYPE_OCI_IMAGE = 2;
   */
  OCI_IMAGE = 2,

  /**
   * tar.gz, zip
   *
   * @generated from enum value: ARTIFACT_TYPE_ARCHIVE = 3;
   */
  ARCHIVE = 3,

  /**
   * deb, rpm, apk
   *
   * @generated from enum value: ARTIFACT_TYPE_PACKAGE = 4;
   */
  PACKAGE = 4,

  /**
   * Nix package
   *
   * @generated from enum value: ARTIFACT_TYPE_NIXPACK = 5;
   */
  NIXPACK = 5,

  /**
   * Shell/Python script
   *
   * @generated from enum value: ARTIFACT_TYPE_SCRIPT = 6;
   */
  SCRIPT = 6,
}

/**
 * Describes the enum fleetd.v1.ArtifactType.
 */
export const ArtifactTypeSchema: GenEnum<ArtifactType> =
  /*@__PURE__*/
  enumDesc(file_fleetd_v1_artifact, 0);

/**
 * @generated from enum fleetd.v1.RuntimeType
 */
export enum RuntimeType {
  /**
   * @generated from enum value: RUNTIME_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: RUNTIME_TYPE_SYSTEMD = 1;
   */
  SYSTEMD = 1,

  /**
   * @generated from enum value: RUNTIME_TYPE_DOCKER = 2;
   */
  DOCKER = 2,

  /**
   * @generated from enum value: RUNTIME_TYPE_SUPERVISOR = 3;
   */
  SUPERVISOR = 3,

  /**
   * @generated from enum value: RUNTIME_TYPE_RAW = 4;
   */
  RAW = 4,
}

/**
 * Describes the enum fleetd.v1.RuntimeType.
 */
export const RuntimeTypeSchema: GenEnum<RuntimeType> =
  /*@__PURE__*/
  enumDesc(file_fleetd_v1_artifact, 1);

/**
 * @generated from enum fleetd.v1.RestartPolicy
 */
export enum RestartPolicy {
  /**
   * @generated from enum value: RESTART_POLICY_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: RESTART_POLICY_ALWAYS = 1;
   */
  ALWAYS = 1,

  /**
   * @generated from enum value: RESTART_POLICY_ON_FAILURE = 2;
   */
  ON_FAILURE = 2,

  /**
   * @generated from enum value: RESTART_POLICY_NEVER = 3;
   */
  NEVER = 3,
}

/**
 * Describes the enum fleetd.v1.RestartPolicy.
 */
export const RestartPolicySchema: GenEnum<RestartPolicy> =
  /*@__PURE__*/
  enumDesc(file_fleetd_v1_artifact, 2);

/**
 * @generated from enum fleetd.v1.TriggerType
 */
export enum TriggerType {
  /**
   * @generated from enum value: TRIGGER_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: TRIGGER_TYPE_CRASH_LOOP = 1;
   */
  CRASH_LOOP = 1,

  /**
   * @generated from enum value: TRIGGER_TYPE_HIGH_ERROR_RATE = 2;
   */
  HIGH_ERROR_RATE = 2,

  /**
   * @generated from enum value: TRIGGER_TYPE_HEALTH_CHECK_FAILURE = 3;
   */
  HEALTH_CHECK_FAILURE = 3,

  /**
   * @generated from enum value: TRIGGER_TYPE_HIGH_CPU = 4;
   */
  HIGH_CPU = 4,

  /**
   * @generated from enum value: TRIGGER_TYPE_HIGH_MEMORY = 5;
   */
  HIGH_MEMORY = 5,
}

/**
 * Describes the enum fleetd.v1.TriggerType.
 */
export const TriggerTypeSchema: GenEnum<TriggerType> =
  /*@__PURE__*/
  enumDesc(file_fleetd_v1_artifact, 3);

/**
 * @generated from enum fleetd.v1.DeploymentStatus
 */
export enum DeploymentStatus {
  /**
   * @generated from enum value: DEPLOYMENT_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: DEPLOYMENT_STATUS_PENDING = 1;
   */
  PENDING = 1,

  /**
   * @generated from enum value: DEPLOYMENT_STATUS_IN_PROGRESS = 2;
   */
  IN_PROGRESS = 2,

  /**
   * @generated from enum value: DEPLOYMENT_STATUS_SUCCEEDED = 3;
   */
  SUCCEEDED = 3,

  /**
   * @generated from enum value: DEPLOYMENT_STATUS_FAILED = 4;
   */
  FAILED = 4,

  /**
   * @generated from enum value: DEPLOYMENT_STATUS_ROLLING_BACK = 5;
   */
  ROLLING_BACK = 5,

  /**
   * @generated from enum value: DEPLOYMENT_STATUS_ROLLED_BACK = 6;
   */
  ROLLED_BACK = 6,

  /**
   * @generated from enum value: DEPLOYMENT_STATUS_CANCELLED = 7;
   */
  CANCELLED = 7,
}

/**
 * Describes the enum fleetd.v1.DeploymentStatus.
 */
export const DeploymentStatusSchema: GenEnum<DeploymentStatus> =
  /*@__PURE__*/
  enumDesc(file_fleetd_v1_artifact, 4);

/**
 * @generated from enum fleetd.v1.ProcessState
 */
export enum ProcessState {
  /**
   * @generated from enum value: PROCESS_STATE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: PROCESS_STATE_STARTING = 1;
   */
  STARTING = 1,

  /**
   * @generated from enum value: PROCESS_STATE_RUNNING = 2;
   */
  RUNNING = 2,

  /**
   * @generated from enum value: PROCESS_STATE_STOPPING = 3;
   */
  STOPPING = 3,

  /**
   * @generated from enum value: PROCESS_STATE_STOPPED = 4;
   */
  STOPPED = 4,

  /**
   * @generated from enum value: PROCESS_STATE_CRASHED = 5;
   */
  CRASHED = 5,

  /**
   * @generated from enum value: PROCESS_STATE_RESTARTING = 6;
   */
  RESTARTING = 6,
}

/**
 * Describes the enum fleetd.v1.ProcessState.
 */
export const ProcessStateSchema: GenEnum<ProcessState> =
  /*@__PURE__*/
  enumDesc(file_fleetd_v1_artifact, 5);

/**
 * ArtifactService manages software artifacts for deployment
 *
 * @generated from service fleetd.v1.ArtifactService
 */
export const ArtifactService: GenService<{
  /**
   * Upload a new artifact version
   *
   * @generated from rpc fleetd.v1.ArtifactService.UploadArtifact
   */
  uploadArtifact: {
    methodKind: "client_streaming";
    input: typeof UploadArtifactRequestSchema;
    output: typeof UploadArtifactResponseSchema;
  };
  /**
   * Get artifact metadata
   *
   * @generated from rpc fleetd.v1.ArtifactService.GetArtifact
   */
  getArtifact: {
    methodKind: "unary";
    input: typeof GetArtifactRequestSchema;
    output: typeof GetArtifactResponseSchema;
  };
  /**
   * List artifact versions
   *
   * @generated from rpc fleetd.v1.ArtifactService.ListArtifacts
   */
  listArtifacts: {
    methodKind: "unary";
    input: typeof ListArtifactsRequestSchema;
    output: typeof ListArtifactsResponseSchema;
  };
  /**
   * Delete an artifact version
   *
   * @generated from rpc fleetd.v1.ArtifactService.DeleteArtifact
   */
  deleteArtifact: {
    methodKind: "unary";
    input: typeof DeleteArtifactRequestSchema;
    output: typeof DeleteArtifactResponseSchema;
  };
  /**
   * Generate signed download URL for device
   *
   * @generated from rpc fleetd.v1.ArtifactService.GetDownloadURL
   */
  getDownloadURL: {
    methodKind: "unary";
    input: typeof GetDownloadURLRequestSchema;
    output: typeof GetDownloadURLResponseSchema;
  };
}> = /*@__PURE__*/ serviceDesc(file_fleetd_v1_artifact, 0);

/**
 * ApplicationService manages application definitions
 *
 * @generated from service fleetd.v1.ApplicationService
 */
export const ApplicationService: GenService<{
  /**
   * Create or update application definition
   *
   * @generated from rpc fleetd.v1.ApplicationService.CreateApplication
   */
  createApplication: {
    methodKind: "unary";
    input: typeof CreateApplicationRequestSchema;
    output: typeof CreateApplicationResponseSchema;
  };
  /**
   * Get application details
   *
   * @generated from rpc fleetd.v1.ApplicationService.GetApplication
   */
  getApplication: {
    methodKind: "unary";
    input: typeof GetApplicationRequestSchema;
    output: typeof GetApplicationResponseSchema;
  };
  /**
   * List applications
   *
   * @generated from rpc fleetd.v1.ApplicationService.ListApplications
   */
  listApplications: {
    methodKind: "unary";
    input: typeof ListApplicationsRequestSchema;
    output: typeof ListApplicationsResponseSchema;
  };
  /**
   * Delete application
   *
   * @generated from rpc fleetd.v1.ApplicationService.DeleteApplication
   */
  deleteApplication: {
    methodKind: "unary";
    input: typeof DeleteApplicationRequestSchema;
    output: typeof DeleteApplicationResponseSchema;
  };
}> = /*@__PURE__*/ serviceDesc(file_fleetd_v1_artifact, 1);

/**
 * DeploymentService manages software deployments to devices
 *
 * @generated from service fleetd.v1.DeploymentService
 */
export const DeploymentService: GenService<{
  /**
   * Create a new deployment
   *
   * @generated from rpc fleetd.v1.DeploymentService.CreateDeployment
   */
  createDeployment: {
    methodKind: "unary";
    input: typeof CreateDeploymentRequestSchema;
    output: typeof CreateDeploymentResponseSchema;
  };
  /**
   * Get deployment status
   *
   * @generated from rpc fleetd.v1.DeploymentService.GetDeployment
   */
  getDeployment: {
    methodKind: "unary";
    input: typeof GetDeploymentRequestSchema;
    output: typeof GetDeploymentResponseSchema;
  };
  /**
   * List deployments
   *
   * @generated from rpc fleetd.v1.DeploymentService.ListDeployments
   */
  listDeployments: {
    methodKind: "unary";
    input: typeof ListDeploymentsRequestSchema;
    output: typeof ListDeploymentsResponseSchema;
  };
  /**
   * Cancel or rollback deployment
   *
   * @generated from rpc fleetd.v1.DeploymentService.CancelDeployment
   */
  cancelDeployment: {
    methodKind: "unary";
    input: typeof CancelDeploymentRequestSchema;
    output: typeof CancelDeploymentResponseSchema;
  };
  /**
   * Get deployment metrics
   *
   * @generated from rpc fleetd.v1.DeploymentService.GetDeploymentMetrics
   */
  getDeploymentMetrics: {
    methodKind: "unary";
    input: typeof GetDeploymentMetricsRequestSchema;
    output: typeof GetDeploymentMetricsResponseSchema;
  };
}> = /*@__PURE__*/ serviceDesc(file_fleetd_v1_artifact, 2);
