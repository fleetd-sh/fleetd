# Fleet Platform Infrastructure Services
version: '3.8'

services:
  # PostgreSQL with TimescaleDB
  postgres:
    image: timescale/timescaledb:latest-pg15
    container_name: fleet-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-fleetd}
      POSTGRES_USER: ${POSTGRES_USER:-fleetd}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=en_US.UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./internal/migrations/postgres:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fleetd"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Valkey (Redis-compatible) for caching and rate limiting
  valkey:
    image: valkey/valkey:7-alpine
    container_name: fleet-cache
    ports:
      - "6379:6379"
    volumes:
      - valkey_data:/data
    command: valkey-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "valkey-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # VictoriaMetrics for time-series metrics
  victoriametrics:
    image: victoriametrics/victoria-metrics:latest
    container_name: fleet-metrics
    ports:
      - "8428:8428"
    volumes:
      - victoriametrics_data:/victoria-metrics-data
    command:
      - "-retentionPeriod=365d"
      - "-storageDataPath=/victoria-metrics-data"
      - "-httpListenAddr=:8428"
      - "-dedup.minScrapeInterval=30s"
      - "-search.maxQueryDuration=300s"
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8428/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Grafana Loki for log aggregation
  loki:
    image: grafana/loki:latest
    container_name: fleet-logs
    ports:
      - "3100:3100"
    volumes:
      - loki_data:/loki
      - ./configs/loki.yaml:/etc/loki/local-config.yaml
    command: -config.file=/etc/loki/local-config.yaml
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3100/ready"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ClickHouse for analytics
  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: fleet-analytics
    profiles: ["analytics"]
    ports:
      - "8123:8123"  # HTTP interface
      - "9000:9000"  # Native protocol
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - ./configs/clickhouse:/etc/clickhouse-server/config.d
    environment:
      CLICKHOUSE_DB: fleetd_analytics
      CLICKHOUSE_USER: ${CLICKHOUSE_USER:-fleetd}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD}
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8123/ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Grafana for visualization (optional, for development)
  grafana:
    image: grafana/grafana:latest
    container_name: fleet-grafana
    profiles: ["monitoring"]
    ports:
      - "3001:3000"
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_USER:-admin}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD}
      GF_INSTALL_PLUGINS: grafana-clickhouse-datasource
    volumes:
      - grafana_data:/var/lib/grafana
      - ./configs/grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - victoriametrics
      - loki
      - postgres
      - clickhouse
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PgBouncer for connection pooling
  pgbouncer:
    image: edoburu/pgbouncer:latest
    container_name: fleet-pgbouncer
    profiles: ["production"]
    environment:
      DATABASES_HOST: postgres
      DATABASES_PORT: 5432
      DATABASES_DBNAME: ${POSTGRES_DB:-fleetd}
      DATABASES_USER: ${POSTGRES_USER:-fleetd}
      DATABASES_PASSWORD: ${POSTGRES_PASSWORD}
      POOL_MODE: transaction
      MAX_CLIENT_CONN: 1000
      DEFAULT_POOL_SIZE: 25
    ports:
      - "6432:5432"
    depends_on:
      - postgres

volumes:
  postgres_data:
  valkey_data:
  victoriametrics_data:
  loki_data:
  clickhouse_data:
  grafana_data:

networks:
  default:
    name: fleet_default
    driver: bridge